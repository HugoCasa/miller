- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        clientId: string;
        clientSecret: string;
        tenantId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        username: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GmailCustomOauth
  resource_type_def: |-
    type GmailCustomOauth = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hyros
  resource_type_def: |-
    type Hyros = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        boardId: number;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaxoon
  resource_type_def: |-
    type Klaxoon = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Awork
  resource_type_def: |-
    type Awork = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    OnesignalRestApi
  resource_type_def: |-
    type OnesignalRestApi = {
        appId: string;
        restApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GhostOrgContentApi
  resource_type_def: |-
    type GhostOrgContentApi = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Companycam
  resource_type_def: |-
    type Companycam = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Melo
  resource_type_def: |-
    type Melo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    JwPlayer
  resource_type_def: |-
    type JwPlayer = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Loopmessage
  resource_type_def: |-
    type Loopmessage = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chatwork
  resource_type_def: |-
    type Chatwork = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftTeams
  resource_type_def: |-
    type MicrosoftTeams = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authEndpoint: string;
        tokenEndpoint: string;
        graphEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    IpinfoIo
  resource_type_def: |-
    type IpinfoIo = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    CreditRepairCloud
  resource_type_def: |-
    type CreditRepairCloud = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Jobnimbus
  resource_type_def: |-
    type Jobnimbus = {
        apiKey: string;
        apiSecret: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    JiraServiceDesk
  resource_type_def: |-
    type JiraServiceDesk = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearbit
  resource_type_def: |-
    type Clearbit = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AmazonSes
  resource_type_def: |-
    type AmazonSes = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Noticeable
  resource_type_def: |-
    type Noticeable = {
        projectId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dbt
  resource_type_def: |-
    type Dbt = {
        supabaseUrl: string;
        supabaseKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Niftykit
  resource_type_def: |-
    type Niftykit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kickofflabs
  resource_type_def: |-
    type Kickofflabs = {
        apiKey: string,
        authToken: string
    }
- lang: |-
    deno
  resource_type: |-
    Curated
  resource_type_def: |-
    type Curated = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureSql
  resource_type_def: |-
    type AzureSql = {
        server: string;
        database: string;
        user: string;
        password: string;
        encrypt: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        domain: string;
        email: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    NocrmIo
  resource_type_def: |-
    type NocrmIo = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Missive
  resource_type_def: |-
    type Missive = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitaloceanSpaces
  resource_type_def: |-
    type DigitaloceanSpaces = {
        accessKeyId: string;
        secretAccessKey: string;
        endpoint: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailwizz
  resource_type_def: |-
    type Mailwizz = {
        apiUrl: string;
        publicKey: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Megaventory
  resource_type_def: |-
    type Megaventory = {
        apiKey: string,
        accountUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    LoopReturns
  resource_type_def: |-
    type LoopReturns = {
        apiKey: string,
        apiSecret: string,
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Docusign
  resource_type_def: |-
    type Docusign = {
        // Docusign integration resource type for authentication
        accountId: string;
        basePath: string;
        oAuthToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amqp
  resource_type_def: |-
    type Amqp = {
        hostname: string;
        port: number;
        username: string;
        password: string;
        vhost?: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        username: string;
    }
- lang: |-
    deno
  resource_type: |-
    Anthropic
  resource_type_def: |-
    type Anthropic = {
        apiKey: string;
        organizationId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gryd
  resource_type_def: |-
    type Gryd = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Expofp
  resource_type_def: |-
    type Expofp = {
        apiKey: string,
        eventId: string
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Browserless
  resource_type_def: |-
    type Browserless = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amilia
  resource_type_def: |-
    type Amilia = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaviyo
  resource_type_def: |-
    type Klaviyo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSlides
  resource_type_def: |-
    type GoogleSlides = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Envoy
  resource_type_def: |-
    type Envoy = {
        apiKey: string;
        locationId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitaloceanSpaces
  resource_type_def: |-
    type DigitaloceanSpaces = {
        accessKeyId: string;
        secretAccessKey: string;
        endpoint: string;
        bucket: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Affinda
  resource_type_def: |-
    type Affinda = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Convertkit
  resource_type_def: |-
    type Convertkit = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Jumpseller
  resource_type_def: |-
    type Jumpseller = {
        apiKey: string;
        login: string;
    }
- lang: |-
    deno
  resource_type: |-
    CustomerFields
  resource_type_def: |-
    type CustomerFields = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        host: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    GorgiasOauth
  resource_type_def: |-
    type GorgiasOauth = {
        accessToken: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clevertap
  resource_type_def: |-
    type Clevertap = {
        accountId: string;
        passcode: string;
        regionValue: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ipbase
  resource_type_def: |-
    type Ipbase = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Blogger
  resource_type_def: |-
    type Blogger = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        endpoint: string,
        headers?: { [key: string]: string },
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        intents: GatewayIntentBits[];
    }
- lang: |-
    deno
  resource_type: |-
    Missive
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Nexweave
  resource_type_def: |-
    type Nexweave = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        workspace: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        apiToken: string;
        host?: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Accelo
  resource_type_def: |-
    type Accelo = {
        deployment: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GeodbCities
  resource_type_def: |-
    type GeodbCities = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaxoon
  resource_type_def: |-
    type Klaxoon = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dealmachine
  resource_type_def: |-
    type Dealmachine = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleAnalytics
  resource_type_def: |-
    type GoogleAnalytics = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
        refreshToken: string;
        viewId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Giphy
  resource_type_def: |-
    type Giphy = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Omnivore
  resource_type_def: |-
    type Omnivore = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
        // Add other necessary Livestorm-specific authentication/configuration properties here
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftSqlServer
  resource_type_def: |-
    type MicrosoftSqlServer = {
        server: string;
        authentication: {
            type: "default" | "ntlm" | "azure-active-directory-password" | "azure-active-directory-access-token";
            options: {
                userName: string;
                password: string;
            };
        };
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Adalo
  resource_type_def: |-
    type Adalo = {
        apiKey: string,
        appId: string
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        sessionToken?: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        sessionToken?: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Infinity
  resource_type_def: |-
    type Infinity = {
        apiKey: string;
        workspaceId: string;
        boardId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Miestro
  resource_type_def: |-
    type Miestro = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        workspaceApiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    IntellexerApi
  resource_type_def: |-
    type IntellexerApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lighthouse
  resource_type_def: |-
    type Lighthouse = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberstack
  resource_type_def: |-
    type Memberstack = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getemails
  resource_type_def: |-
    type Getemails = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moneybird
  resource_type_def: |-
    type Moneybird = {
        administrationId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drip
  resource_type_def: |-
    type Drip = {
        accountId: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Baselinker
  resource_type_def: |-
    type Baselinker = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365People
  resource_type_def: |-
    type Microsoft365People = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authEndpoint: string;
        tokenEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    ChatApiForWhatsapp
  resource_type_def: |-
    type ChatApiForWhatsapp = {
        apiKey: string;
        phoneNumberId: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinkedinAds
  resource_type_def: |-
    type LinkedinAds = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Discord
  resource_type_def: |-
    type Discord = {
        token: string,
        clientId: string
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Esputnik
  resource_type_def: |-
    type Esputnik = {
        username: string;
        password: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
        databaseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mongodb
  resource_type_def: |-
    type Mongodb = {
        uri: string,
        dbName: string,
        collectionName: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jobnimbus
  resource_type_def: |-
    type Jobnimbus = {
        apiKey: string;
        userToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kickbox
  resource_type_def: |-
    type Kickbox = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Firmao
  resource_type_def: |-
    type Firmao = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ahrefs
  resource_type_def: |-
    type Ahrefs = {
        accessToken: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token
        // Add any other properties needed for authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Figma
  resource_type_def: |-
    type Figma = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Assemblyai
  resource_type_def: |-
    type Assemblyai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Ongage
  resource_type_def: |-
    type Ongage = {
        apiUrl: string,
        username: string,
        password: string,
        accountCode: string
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HSupertoolsAnalyticsTool
  resource_type_def: |-
    type HSupertoolsAnalyticsTool = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string,
        workspace: string
    }
- lang: |-
    deno
  resource_type: |-
    BrowseAi
  resource_type_def: |-
    type BrowseAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365Planner
  resource_type_def: |-
    type Microsoft365Planner = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        accessToken: string; // OAuth2 access token
        clientId: string;    // Instagram App client ID
        clientSecret: string;// Instagram App client secret
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    BigDataCloud
  resource_type_def: |-
    type BigDataCloud = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopsSo
  resource_type_def: |-
    type LoopsSo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        accountId: string;
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinbase
  resource_type_def: |-
    type Coinbase = {
        apiKey: string;
        apiSecret: string;
        passphrase: string;
        useSandbox: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Asknicely
  resource_type_def: |-
    type Asknicely = {
        apiKey: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    EodhdApis
  resource_type_def: |-
    type EodhdApis = {
        apiKey: string; // API key for authentication with EodhdApis
    }
- lang: |-
    deno
  resource_type: |-
    Onenote
  resource_type_def: |-
    type Onenote = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearbit
  resource_type_def: |-
    type Clearbit = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailjet
  resource_type_def: |-
    type Mailjet = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mandrill
  resource_type_def: |-
    type Mandrill = {
        apiKey: string,
        host: string,
        port: number,
        secure: boolean // true for 465, false for other ports
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Etsy
  resource_type_def: |-
    type Etsy = {
        apiKey: string;
        apiSecret: string;
        token: string;
        tokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaviyo
  resource_type_def: |-
    type Klaviyo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gryd
  resource_type_def: |-
    type Gryd = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
        teamId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Document360
  resource_type_def: |-
    type Document360 = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
        apiBaseURL: string;
    }
- lang: |-
    deno
  resource_type: |-
    Diffchecker
  resource_type_def: |-
    type Diffchecker = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    JpFunda
  resource_type_def: |-
    type JpFunda = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcap
  resource_type_def: |-
    type Coinmarketcap = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GorgiasOauth
  resource_type_def: |-
    type GorgiasOauth = {
        accessToken: string,
        subdomain: string
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Discourse
  resource_type_def: |-
    type Discourse = {
        apiKey: string;
        apiUsername: string;
        discourseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties needed for Bingx authentication
    }
- lang: |-
    deno
  resource_type: |-
    Hookdeck
  resource_type_def: |-
    type Hookdeck = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropcontact
  resource_type_def: |-
    type Dropcontact = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GeodbCities
  resource_type_def: |-
    type GeodbCities = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOnedrive
  resource_type_def: |-
    type MicrosoftOnedrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
        scope: string;
        tokenType: string;
        expiryDate: number;
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Etsy
  resource_type_def: |-
    type Etsy = {
        apiKey: string;
        shopId: string;
        oauthToken: string;
        oauthTokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gong
  resource_type_def: |-
    type Gong = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string;
        usagePointId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Insites
  resource_type_def: |-
    type Insites = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string;
        boardId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Basecamp
  resource_type_def: |-
    type Basecamp = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoWebex
  resource_type_def: |-
    type CiscoWebex = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailmodo
  resource_type_def: |-
    type Mailmodo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        accessToken: string,
        secretId: string,
        secretKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Flodesk
  resource_type_def: |-
    type Flodesk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    BrexStaging
  resource_type_def: |-
    type BrexStaging = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Assuming HelperFunctions integration requires no specific credentials or configuration
    }
- lang: |-
    deno
  resource_type: |-
    Gorillastack
  resource_type_def: |-
    type Gorillastack = {
        apiKey: string;
        teamId: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Add properties needed for authentication/configuration that are relevant to any script related to this integration
    }
- lang: |-
    deno
  resource_type: |-
    Gryd
  resource_type_def: |-
    type Gryd = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jibble
  resource_type_def: |-
    type Jibble = {
        apiKey: string;
        apiSecret: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Inksprout
  resource_type_def: |-
    type Inksprout = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GorgiasOauth
  resource_type_def: |-
    type GorgiasOauth = {
        accessToken: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Noticeable
  resource_type_def: |-
    type Noticeable = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        consumerKey: string;
        consumerSecret: string;
        accessToken: string;
        accessTokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudinary
  resource_type_def: |-
    type Cloudinary = {
        cloudName: string;
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    BrexStaging
  resource_type_def: |-
    type BrexStaging = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookGroups
  resource_type_def: |-
    type FacebookGroups = {
        accessToken: string;
        groupId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Companycam
  resource_type_def: |-
    type Companycam = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropcontact
  resource_type_def: |-
    type Dropcontact = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleClassroom
  resource_type_def: |-
    type GoogleClassroom = {
        client: Auth.OAuth2Client;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string;
        usagePointId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mem
  resource_type_def: |-
    type Mem = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Box
  resource_type_def: |-
    type Box = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 Access Token for Miro API
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftEntraId
  resource_type_def: |-
    type MicrosoftEntraId = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nocodb
  resource_type_def: |-
    type Nocodb = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        projectId: string,
        keyFilename: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailmodo
  resource_type_def: |-
    type Mailmodo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Blogger
  resource_type_def: |-
    type Blogger = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drip
  resource_type_def: |-
    type Drip = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Firmao
  resource_type_def: |-
    type Firmao = {
        apiUrl: string;
        apiKey: string;
        userToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Databricks
  resource_type_def: |-
    type Databricks = {
        domain: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftEntraId
  resource_type_def: |-
    type MicrosoftEntraId = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authority: string;
        accessToken: string; // Assuming the access token is provided for the purpose of this script
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Knorish
  resource_type_def: |-
    type Knorish = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        // Add any other properties needed for Bingx authentication
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Flutterwave
  resource_type_def: |-
    type Flutterwave = {
        apiKey: string;
        encryptionKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Blogger
  resource_type_def: |-
    type Blogger = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Baselinker
  resource_type_def: |-
    type Baselinker = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string; // e.g. "https://api.bybit.com"
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mux
  resource_type_def: |-
    type Mux = {
        accessToken: string;
        secret: string;
    }
- lang: |-
    deno
  resource_type: |-
    HumorApi
  resource_type_def: |-
    type HumorApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Accredible
  resource_type_def: |-
    type Accredible = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dromo
  resource_type_def: |-
    type Dromo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    OnesignalRestApi
  resource_type_def: |-
    type OnesignalRestApi = {
        appId: string;
        restApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Joomla
  resource_type_def: |-
    type Joomla = {
        baseUrl: string; // Base URL of the Joomla site
        username: string; // Username for authentication
        password: string; // Password for authentication
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GmailCustomOauth
  resource_type_def: |-
    type GmailCustomOauth = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string,
        redirectUri: string,
        scope: string,
        tokenType: string,
        expiryDate: number
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePalmApi
  resource_type_def: |-
    type GooglePalmApi = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airplane
  resource_type_def: |-
    type Airplane = {
        apiKey: string;
        // Add other properties relevant to the Airplane integration for authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Magnetic
  resource_type_def: |-
    type Magnetic = {
        apiKey: string;
        apiEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    DocsbotAi
  resource_type_def: |-
    type DocsbotAi = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chatwork
  resource_type_def: |-
    type Chatwork = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcal
  resource_type_def: |-
    type Coinmarketcal = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    AdobePdfServices
  resource_type_def: |-
    type AdobePdfServices = {
        clientId: string;
        clientSecret: string;
        organizationId: string;
        accountId: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GeneratedPhotos
  resource_type_def: |-
    type GeneratedPhotos = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopsSo
  resource_type_def: |-
    type LoopsSo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Medium
  resource_type_def: |-
    type Medium = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Crimeometer
  resource_type_def: |-
    type Crimeometer = {
        apiKey: string,
        // Add other properties needed for Crimeometer API authentication
    }
- lang: |-
    deno
  resource_type: |-
    Gatherup
  resource_type_def: |-
    type Gatherup = {
        apiKey: string;
        clientId: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Firmao
  resource_type_def: |-
    type Firmao = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        host: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    KiteSuite
  resource_type_def: |-
    type KiteSuite = {
        apiKey: string;
        apiSecret: string;
        // Add other properties needed for KiteSuite authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
        // Add other necessary authentication/configuration properties here
    }
- lang: |-
    deno
  resource_type: |-
    Endorsal
  resource_type_def: |-
    type Endorsal = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cleverreach
  resource_type_def: |-
    type Cleverreach = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Campaignhq
  resource_type_def: |-
    type Campaignhq = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bigml
  resource_type_def: |-
    type Bigml = {
        username: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Netlify
  resource_type_def: |-
    type Netlify = {
        accessToken: string;
        siteId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ongage
  resource_type_def: |-
    type Ongage = {
        apiKey: string;
        username: string;
        accountCode: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Laposta
  resource_type_def: |-
    type Laposta = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ilovepdf
  resource_type_def: |-
    type Ilovepdf = {
        publicKey: string,
        secretKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Filter
  resource_type_def: |-
    type Filter = {
        // Properties for authentication/configuration relevant to the Filter integration
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        boardId: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Line
  resource_type_def: |-
    type Line = {
        channelAccessToken: string,
        channelSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Baselinker
  resource_type_def: |-
    type Baselinker = {
        apiKey: string;
        inventoryId: number;
    }
- lang: |-
    deno
  resource_type: |-
    CoherePlatform
  resource_type_def: |-
    type CoherePlatform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mapulus
  resource_type_def: |-
    type Mapulus = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clevertap
  resource_type_def: |-
    type Clevertap = {
        accountId: string;
        passcode: string;
        regionValue: string;
    }
- lang: |-
    deno
  resource_type: |-
    Giantcampaign
  resource_type_def: |-
    type Giantcampaign = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aircall
  resource_type_def: |-
    type Aircall = {
        apiId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Discogs
  resource_type_def: |-
    type Discogs = {
        consumerKey: string;
        consumerSecret: string;
        token: string;
        tokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinearApp
  resource_type_def: |-
    type LinearApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gotowebinar
  resource_type_def: |-
    type Gotowebinar = {
        consumerKey: string;
        consumerSecret: string;
        accessToken: string;
        organizerKey: string;
        accountKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    KontentAi
  resource_type_def: |-
    type KontentAi = {
        projectId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mixpanel
  resource_type_def: |-
    type Mixpanel = {
        apiSecret: string,
        token: string
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Assuming HelperFunctions integration requires an API key for authentication
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Helpcrunch
  resource_type_def: |-
    type Helpcrunch = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        username: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Confection
  resource_type_def: |-
    type Confection = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Adalo
  resource_type_def: |-
    type Adalo = {
        apiKey: string,
        appId: string
    }
- lang: |-
    deno
  resource_type: |-
    Docusign
  resource_type_def: |-
    type Docusign = {
        accountId: string;
        basePath: string;
        oAuthToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        username: string;
    }
- lang: |-
    deno
  resource_type: |-
    Firmao
  resource_type_def: |-
    type Firmao = { // Renamed type to avoid conflict with imported class
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string,
        storeId: string
    }
- lang: |-
    deno
  resource_type: |-
    Mailwizz
  resource_type_def: |-
    type Mailwizz = {
        apiUrl: string;
        publicKey: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    IpdataCo
  resource_type_def: |-
    type IpdataCo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties needed for authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Omnivore
  resource_type_def: |-
    type Omnivore = {
        apiKey: string;
        locationId: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureOpenaiService
  resource_type_def: |-
    type AzureOpenaiService = {
        // Add relevant authentication/configuration properties for Azure OpenAI Service
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: number;
    }
- lang: |-
    deno
  resource_type: |-
    GeneratedPhotos
  resource_type_def: |-
    type GeneratedPhotos = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Frontapp
  resource_type_def: |-
    type Frontapp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTagManager
  resource_type_def: |-
    type GoogleTagManager = {
        accountId: string;
        containerId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string,
        clientEmail: string,
        privateKey: string,
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudtables
  resource_type_def: |-
    type Cloudtables = {
        apiKey: string;
        databaseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailersend
  resource_type_def: |-
    type Mailersend = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: |-
    type HuggingFace = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Campaignhq
  resource_type_def: |-
    type Campaignhq = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kanbanize
  resource_type_def: |-
    type Kanbanize = {
        apiKey: string,
        subdomain: string
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kvdb
  resource_type_def: |-
    type Kvdb = {
        bucketId: string,
        accessToken: string
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string;
        baseApiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dayschedule
  resource_type_def: |-
    type Dayschedule = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Inksprout
  resource_type_def: |-
    type Inksprout = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Miestro
  resource_type_def: |-
    type Miestro = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Endorsal
  resource_type_def: |-
    type Endorsal = {
        apiKey: string,
        subdomain: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        spaceId: string;
        credentials: {
            clientEmail: string;
            privateKey: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Motion
  resource_type_def: |-
    type Motion = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mercury
  resource_type_def: |-
    type Mercury = {
        apiKey: string;
        // Add other properties relevant to Mercury authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Emailoctopus
  resource_type_def: |-
    type Emailoctopus = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        endpoint: string,
        headers?: { [key: string]: string },
        method: string
    }
- lang: |-
    deno
  resource_type: |-
    Axonaut
  resource_type_def: |-
    type Axonaut = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        auth: string;
    }
- lang: |-
    deno
  resource_type: |-
    Click2mail2
  resource_type_def: |-
    type Click2mail2 = {
        apiUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Crimeometer
  resource_type_def: |-
    type Crimeometer = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoWebex
  resource_type_def: |-
    type CiscoWebex = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getemails
  resource_type_def: |-
    type Getemails = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ahrefs
  resource_type_def: |-
    type Ahrefs = {
        accessToken: string; // OAuth2 Access Token for Ahrefs API
    }
- lang: |-
    deno
  resource_type: |-
    Chatbot
  resource_type_def: |-
    type Chatbot = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Browserless
  resource_type_def: |-
    type Browserless = {
        apiKey: string,
        endpointUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Lighthouse
  resource_type_def: |-
    type Lighthouse = {
        apiKey: string,
        projectId: string
    }
- lang: |-
    deno
  resource_type: |-
    Bigml
  resource_type_def: |-
    type Bigml = {
        username: string;
        apiKey: string;
        // Add other necessary properties for BigML authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    JudgeMe
  resource_type_def: |-
    type JudgeMe = {
        apiKey: string;
        privateToken: string;
        shopDomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Elevenlabs
  resource_type_def: |-
    type Elevenlabs = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Justcall
  resource_type_def: |-
    type Justcall = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Agendor
  resource_type_def: |-
    type Agendor = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePalmApi
  resource_type_def: |-
    type GooglePalmApi = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nexweave
  resource_type_def: |-
    type Nexweave = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    IpinfoIo
  resource_type_def: |-
    type IpinfoIo = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        clientId: string;
        clientSecret: string;
        tenantId: string;
        accessToken: string; // Assuming OAuth2 flow has been completed and we have an access token
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        secretId: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GhostOrgAdminApi
  resource_type_def: |-
    type GhostOrgAdminApi = {
        apiUrl: string;
        adminApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dealmachine
  resource_type_def: |-
    type Dealmachine = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Inoreader
  resource_type_def: |-
    type Inoreader = {
        appId: string;
        appKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AmazonSes
  resource_type_def: |-
    type AmazonSes = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    Datadog
  resource_type_def: |-
    type Datadog = {
        apiKey: string;
        applicationKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
        zoneId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Confection
  resource_type_def: |-
    type Confection = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string;
        firmId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Flodesk
  resource_type_def: |-
    type Flodesk = {
        apiKey: string;
        // Add other necessary properties for Flodesk authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Mailjet
  resource_type_def: |-
    type Mailjet = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dealmachine
  resource_type_def: |-
    type Dealmachine = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoMeraki
  resource_type_def: |-
    type CiscoMeraki = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cardly
  resource_type_def: |-
    type Cardly = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Elevenlabs
  resource_type_def: |-
    type Elevenlabs = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Insightly
  resource_type_def: |-
    type Insightly = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Etsy
  resource_type_def: |-
    type Etsy = {
        apiKey: string;
        apiSecret: string;
        token: string;
        tokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hookdeck
  resource_type_def: |-
    type Hookdeck = {
        apiKey: string;
        sourceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Intercom
  resource_type_def: |-
    type Intercom = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Motion
  resource_type_def: |-
    type Motion = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
        docId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePalmApi
  resource_type_def: |-
    type GooglePalmApi = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    GhostOrgAdminApi
  resource_type_def: |-
    type GhostOrgAdminApi = {
        apiUrl: string;
        adminApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moxie
  resource_type_def: |-
    type Moxie = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    IntellexerApi
  resource_type_def: |-
    type IntellexerApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Listmonk
  resource_type_def: |-
    type Listmonk = {
        host: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Metaphor
  resource_type_def: |-
    type Metaphor = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        spaceId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Knorish
  resource_type_def: |-
    type Knorish = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Expofp
  resource_type_def: |-
    type Expofp = {
        apiKey: string;
        eventSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        clientId: string;
        guildId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hellosign
  resource_type_def: |-
    type Hellosign = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        clientId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailerlite
  resource_type_def: |-
    type Mailerlite = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOnedrive
  resource_type_def: |-
    type MicrosoftOnedrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Assuming HelperFunctions integration requires no specific credentials or configuration
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    Accredible
  resource_type_def: |-
    type Accredible = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Harvest
  resource_type_def: |-
    type Harvest = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        apiKey: string;
        oauthToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ip2proxy
  resource_type_def: |-
    type Ip2proxy = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
        environment?: string;
    }
- lang: |-
    deno
  resource_type: |-
    F15five
  resource_type_def: |-
    type F15five = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Netlify
  resource_type_def: |-
    type Netlify = {
        accessToken: string;
        siteId: string;
    }
- lang: |-
    deno
  resource_type: |-
    MamoBusiness
  resource_type_def: |-
    type MamoBusiness = {
        apiKey: string;
        merchantId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearout
  resource_type_def: |-
    type Clearout = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kvdb
  resource_type_def: |-
    type Kvdb = {
        bucketId: string,
        accessToken: string
    }
- lang: |-
    deno
  resource_type: |-
    Awork
  resource_type_def: |-
    type Awork = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Axonaut
  resource_type_def: |-
    type Axonaut = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    EchtpostPostcards
  resource_type_def: |-
    type EchtpostPostcards = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        passphrase: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoWebex
  resource_type_def: |-
    type CiscoWebex = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kanbanize
  resource_type_def: |-
    type Kanbanize = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Businesslogic
  resource_type_def: |-
    type Businesslogic = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiUrl: string;
        email: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mux
  resource_type_def: |-
    type Mux = {
        accessToken: string;
        secret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aftership
  resource_type_def: |-
    type Aftership = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Clientify
  resource_type_def: |-
    type Clientify = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Formstack
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    GhostOrgAdminApi
  resource_type_def: |-
    type GhostOrgAdminApi = {
        apiUrl: string;
        adminApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties needed for BingX authentication
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOnedrive
  resource_type_def: |-
    type MicrosoftOnedrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AdobePdfServices
  resource_type_def: |-
    type AdobePdfServices = {
        clientId: string;
        clientSecret: string;
        organizationId: string;
        accountId: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    FirebaseAdminSdk
  resource_type_def: |-
    type FirebaseAdminSdk = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        username: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalendlyV2
  resource_type_def: |-
    type CalendlyV2 = {
        personalAccessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
        environment?: string;
    }
- lang: |-
    deno
  resource_type: |-
    ImagekitIo
  resource_type_def: |-
    type ImagekitIo = {
        publicKey: string;
        privateKey: string;
        urlEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Campayn
  resource_type_def: |-
    type Campayn = {
        apiKey: string,
        listId: string
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string; // OAuth2 Access Token for LinkedIn API
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
        databaseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Motion
  resource_type_def: |-
    type Motion = {
        apiKey: string;
        apiSecret: string;
        // Add other properties for authentication/configuration if needed
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    OpenExchangeRates
  resource_type_def: |-
    type OpenExchangeRates = {
        appId: string;
        baseCurrency?: string;
    }
- lang: |-
    deno
  resource_type: |-
    Callpage
  resource_type_def: |-
    type Callpage = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jumpseller
  resource_type_def: |-
    type Jumpseller = {
        accessToken: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearout
  resource_type_def: |-
    type Clearout = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gmail
  resource_type_def: |-
    type Gmail = {
        username: string;
        password: string;
        host: string;
        port: number;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string,
        baseApiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nocodb
  resource_type_def: |-
    type Nocodb = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
      apiKey: string;
      apiSecret: string;
      endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsofttodo
  resource_type_def: |-
    type Microsofttodo = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearbit
  resource_type_def: |-
    type Clearbit = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hostaway
  resource_type_def: |-
    type Hostaway = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSafebrowsing
  resource_type_def: |-
    type GoogleSafebrowsing = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Centralstationcrm
  resource_type_def: |-
    type Centralstationcrm = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientEmail: string;
        privateKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    OnesignalRestApi
  resource_type_def: |-
    type OnesignalRestApi = {
        appId: string;
        restApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dbt
  resource_type_def: |-
    type Dbt = {
        // Properties for Dbt integration, assuming it requires an API token for authentication
        apiToken: string,
        accountId: string,
        projectId: string
    }
- lang: |-
    deno
  resource_type: |-
    LogglySendData
  resource_type_def: |-
    type LogglySendData = {
        token: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Knack
  resource_type_def: |-
    type Knack = {
        apiKey: string;
        applicationId: string;
        apiBaseUrl: string; // Typically "https://api.knack.com/v1"
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string, // OAuth2 access token
        boardId: string      // ID of the Miro board
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcal
  resource_type_def: |-
    type Coinmarketcal = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Frontapp
  resource_type_def: |-
    type Frontapp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleClassroom
  resource_type_def: |-
    type GoogleClassroom = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airmeet
  resource_type_def: |-
    type Airmeet = {
        apiKey: string;
        apiSecret: string;
        organizationId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lusha
  resource_type_def: |-
    type Lusha = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcap
  resource_type_def: |-
    type Coinmarketcap = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Line
  resource_type_def: |-
    type Line = {
        channelAccessToken: string,
        channelSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ip2locationIo
  resource_type_def: |-
    type Ip2locationIo = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    FraudlabsPro
  resource_type_def: |-
    type FraudlabsPro = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Close
  resource_type_def: |-
    type Close = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HtmlCssToImage
  resource_type_def: |-
    type HtmlCssToImage = {
        userId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
        zoneId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudtables
  resource_type_def: |-
    type Cloudtables = {
        apiKey: string,
        baseId: string,
        tableId: string
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Box
  resource_type_def: |-
    type Box = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordWebhook
  resource_type_def: |-
    type DiscordWebhook = {
        webhookUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Askyourpdf
  resource_type_def: |-
    type Askyourpdf = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Freshdesk
  resource_type_def: |-
    type Freshdesk = {
        apiKey: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    Esputnik
  resource_type_def: |-
    type Esputnik = {
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    NeonApiKeys
  resource_type_def: |-
    type NeonApiKeys = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jotform
  resource_type_def: |-
    type Jotform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CustomerIo
  resource_type_def: |-
    type CustomerIo = {
        siteId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lighthouse
  resource_type_def: |-
    type Lighthouse = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AsticaAi
  resource_type_def: |-
    type AsticaAi = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        timezone: string;
    }
- lang: |-
    deno
  resource_type: |-
    Diffchecker
  resource_type_def: |-
    type Diffchecker = {
        apiKey: string; // API key for Diffchecker API
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Emailable
  resource_type_def: |-
    type Emailable = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Browserless
  resource_type_def: |-
    type Browserless = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    Amilia
  resource_type_def: |-
    type Amilia = {
        apiKey: string;
        organizationId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Basecamp
  resource_type_def: |-
    type Basecamp = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Helloleads
  resource_type_def: |-
    type Helloleads = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Eventbrite
  resource_type_def: |-
    type Eventbrite = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gist
  resource_type_def: |-
    type Gist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string,
        nationSlug: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365Planner
  resource_type_def: |-
    type Microsoft365Planner = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureOpenaiService
  resource_type_def: |-
    type AzureOpenaiService = {
        endpoint: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Assuming no specific credentials or configuration are needed for HelperFunctions integration
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftTeams
  resource_type_def: |-
    type MicrosoftTeams = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Companycam
  resource_type_def: |-
    type Companycam = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Motion
  resource_type_def: |-
    type Motion = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalCom
  resource_type_def: |-
    type CalCom = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Close
  resource_type_def: |-
    type Close = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Adroll
  resource_type_def: |-
    type Adroll = {
        apiKey: string;
        advertiserId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Freshdesk
  resource_type_def: |-
    type Freshdesk = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Joomla
  resource_type_def: |-
    type Joomla = {
        baseUrl: string; // Base URL of the Joomla site
        username: string; // Username for Joomla admin
        password: string; // Password for Joomla admin
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberspot
  resource_type_def: |-
    type Memberspot = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Mailerlite
  resource_type_def: |-
    type Mailerlite = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Magnetic
  resource_type_def: |-
    type Magnetic = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKey: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    CampaignCleaner
  resource_type_def: |-
    type CampaignCleaner = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        pageId: string;
        accessToken: string; // This is assumed to be a valid OAuth2 access token with the necessary permissions
    }
- lang: |-
    deno
  resource_type: |-
    Intuiface
  resource_type_def: |-
    type Intuiface = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Harvest
  resource_type_def: |-
    type Harvest = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ecwid
  resource_type_def: |-
    type Ecwid = {
        storeId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Freshdesk
  resource_type_def: |-
    type Freshdesk = {
      apiKey: string;
      domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Axonaut
  resource_type_def: |-
    type Axonaut = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Brex
  resource_type_def: |-
    type Brex = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clientify
  resource_type_def: |-
    type Clientify = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DockCerts
  resource_type_def: |-
    type DockCerts = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    ConstantContact
  resource_type_def: |-
    type ConstantContact = {
        apiKey: string;
        accessToken: string;
        apiEndpoint?: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookGroups
  resource_type_def: |-
    type FacebookGroups = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSlides
  resource_type_def: |-
    type GoogleSlides = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    FraudlabsPro
  resource_type_def: |-
    type FraudlabsPro = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Hellosign
  resource_type_def: |-
    type Hellosign = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Missive
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Dayschedule
  resource_type_def: |-
    type Dayschedule = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dreamstudio
  resource_type_def: |-
    type Dreamstudio = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        accessToken: string,
        accountId: string
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dext
  resource_type_def: |-
    type Dext = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MojoHelpdesk
  resource_type_def: |-
    type MojoHelpdesk = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
        teamId: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTagManager
  resource_type_def: |-
    type GoogleTagManager = {
        accountId: string;
        containerId: string;
        accessToken: string; // Assuming OAuth2 access token is provided
    }
- lang: |-
    deno
  resource_type: |-
    Kingsumo
  resource_type_def: |-
    type Kingsumo = {
        apiKey: string;
        giveawayId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Motion
  resource_type_def: |-
    type Motion = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    NeonApiKeys
  resource_type_def: |-
    type NeonApiKeys = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    CoherePlatform
  resource_type_def: |-
    type CoherePlatform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bouncer
  resource_type_def: |-
    type Bouncer = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
        teamId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTagManager
  resource_type_def: |-
    type GoogleTagManager = {
        accessToken: string;
        accountId: string;
        containerId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Formstack
  resource_type_def: |-
    type Formstack = {
        apiKey: string,
        server: string
    }
- lang: |-
    deno
  resource_type: |-
    FacebookGroups
  resource_type_def: |-
    type FacebookGroups = {
        accessToken: string;
        groupId: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Properties for authentication/configuration relevant to any script for this integration
    }
- lang: |-
    deno
  resource_type: |-
    LinearApp
  resource_type_def: |-
    type LinearApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftTeams
  resource_type_def: |-
    type MicrosoftTeams = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authEndpoint: string;
        tokenEndpoint: string;
        graphEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Demio
  resource_type_def: |-
    type Demio = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
      apiKey: string;
      apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Booqable
  resource_type_def: |-
    type Booqable = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Libraria
  resource_type_def: |-
    type Libraria = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        host: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailwizz
  resource_type_def: |-
    type Mailwizz = {
        apiUrl: string;
        publicKey: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        workspace: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airops
  resource_type_def: |-
    type Airops = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        host: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        apiBaseUrl: string;
        privateToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Elevenlabs
  resource_type_def: |-
    type Elevenlabs = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Browserless
  resource_type_def: |-
    type Browserless = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties needed for authentication with BingX
    }
- lang: |-
    deno
  resource_type: |-
    Adalo
  resource_type_def: |-
    type Adalo = {
        apiKey: string,
        appId: string
    }
- lang: |-
    deno
  resource_type: |-
    Buildkite
  resource_type_def: |-
    type Buildkite = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Imgur
  resource_type_def: |-
    type Imgur = {
        clientId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Delighted
  resource_type_def: |-
    type Delighted = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Abyssale
  resource_type_def: |-
    type Abyssale = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    CustomerIo
  resource_type_def: |-
    type CustomerIo = {
        siteId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOnedrive
  resource_type_def: |-
    type MicrosoftOnedrive = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Assemblyai
  resource_type_def: |-
    type Assemblyai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        accessToken: string;
        refreshToken: string;
        tokenType: string;
        expiresIn: number;
        receivedAt: number;
    }
- lang: |-
    deno
  resource_type: |-
    Bash
  resource_type_def: |-
    type Bash = {
        shellPath: string; // Path to the shell executable
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Line
  resource_type_def: |-
    type Line = {
        channelAccessToken: string;
        channelSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Akeneo
  resource_type_def: |-
    type Akeneo = {
        apiUrl: string;
        clientId: string;
        secret: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Eventbrite
  resource_type_def: |-
    type Eventbrite = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    NeonApiKeys
  resource_type_def: |-
    type NeonApiKeys = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopsSo
  resource_type_def: |-
    type LoopsSo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Magnetic
  resource_type_def: |-
    type Magnetic = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clientify
  resource_type_def: |-
    type Clientify = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Convertkit
  resource_type_def: |-
    type Convertkit = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Figma
  resource_type_def: |-
    type Figma = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    IpdataCo
  resource_type_def: |-
    type IpdataCo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    OnesignalRestApi
  resource_type_def: |-
    type OnesignalRestApi = {
        appId: string;
        restApiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DictionaryApi
  resource_type_def: |-
    type DictionaryApi = {
        apiKey: string; // API key for DictionaryApi authentication
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Faunadb
  resource_type_def: |-
    type Faunadb = {
        secret: string;
    }
- lang: |-
    deno
  resource_type: |-
    JpFunda
  resource_type_def: |-
    type JpFunda = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asknicely
  resource_type_def: |-
    type Asknicely = {
        apiKey: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    Asknicely
  resource_type_def: |-
    type Asknicely = {
        domain: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dayschedule
  resource_type_def: |-
    type Dayschedule = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airplane
  resource_type_def: |-
    type Airplane = {
        apiKey: string,
        environmentId: string
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ahrefs
  resource_type_def: |-
    type Ahrefs = {
        accessToken: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    IpdataCo
  resource_type_def: |-
    type IpdataCo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureOpenaiService
  resource_type_def: |-
    type AzureOpenaiService = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // No specific properties needed for a simple delay function
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hostaway
  resource_type_def: |-
    type Hostaway = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    BrexStaging
  resource_type_def: |-
    type BrexStaging = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Instapaper
  resource_type_def: |-
    type Instapaper = {
        consumerKey: string;
        consumerSecret: string;
        accessToken: string;
        accessTokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookGroups
  resource_type_def: |-
    type FacebookGroups = {
        accessToken: string;
        groupId: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        botToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        oauthToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Bulkgate
  resource_type_def: |-
    type Bulkgate = {
        appId: string;
        appToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gladia
  resource_type_def: |-
    type Gladia = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    Aftership
  resource_type_def: |-
    type Aftership = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Box
  resource_type_def: |-
    type Box = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AmazonSes
  resource_type_def: |-
    type AmazonSes = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        // Add any other properties needed for Bingx integration
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getresponse
  resource_type_def: |-
    type Getresponse = {
        apiKey: string;
        apiUrl?: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    BrexStaging
  resource_type_def: |-
    type BrexStaging = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Copperx
  resource_type_def: |-
    type Copperx = {
        apiKey: string;
        email: string;
        environment: string; // e.g., 'sandbox' or 'production'
    }
- lang: |-
    deno
  resource_type: |-
    NocrmIo
  resource_type_def: |-
    type NocrmIo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monkeylearn
  resource_type_def: |-
    type Monkeylearn = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Honeybadger
  resource_type_def: |-
    type Honeybadger = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Expofp
  resource_type_def: |-
    type Expofp = {
        apiKey: string;
        eventID: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string;
        usagePointId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
      apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GmailCustomOauth
  resource_type_def: |-
    type GmailCustomOauth = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string,
        redirectUri: string
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Close
  resource_type_def: |-
    type Close = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lettria
  resource_type_def: |-
    type Lettria = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Harvest
  resource_type_def: |-
    type Harvest = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Expofp
  resource_type_def: |-
    type Expofp = {
        apiKey: string;
        eventId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    Centralstationcrm
  resource_type_def: |-
    type Centralstationcrm = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jobnimbus
  resource_type_def: |-
    type Jobnimbus = {
        apiKey: string;
        userToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kickofflabs
  resource_type_def: |-
    type Kickofflabs = {
        apiKey: string;
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chatwork
  resource_type_def: |-
    type Chatwork = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dbt
  resource_type_def: |-
    type Dbt = {
        accountId: number;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    DopplerMarketingAutomation
  resource_type_def: |-
    type DopplerMarketingAutomation = {
        apiKey: string;
        accountName: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsofttodo
  resource_type_def: |-
    type Microsofttodo = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bigml
  resource_type_def: |-
    type Bigml = {
        username: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    ImagekitIo
  resource_type_def: |-
    type ImagekitIo = {
        publicKey: string;
        privateKey: string;
        urlEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Formaloo
  resource_type_def: |-
    type Formaloo = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string;
        firmId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Emailoctopus
  resource_type_def: |-
    type Emailoctopus = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    DiscordWebhook
  resource_type_def: |-
    type DiscordWebhook = {
        webhookUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Daffy
  resource_type_def: |-
    type Daffy = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Missive
  resource_type_def: |-
    type Missive = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string;
        usagePointId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberstack
  resource_type_def: |-
    type Memberstack = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    ConstantContact
  resource_type_def: |-
    type ConstantContact = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Accredible
  resource_type_def: |-
    type Accredible = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Infinity
  resource_type_def: |-
    type Infinity = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Box
  resource_type_def: |-
    type Box = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    EdenAi
  resource_type_def: |-
    type EdenAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Demio
  resource_type_def: |-
    type Demio = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Go
  resource_type_def: |-
    type Go = {
        goRoot: string; // The root of the Go installation
        goPath: string; // The workspace for Go projects
    }
- lang: |-
    deno
  resource_type: |-
    Brex
  resource_type_def: |-
    type Brex = {
        accessToken: string; // OAuth2 Access Token for Brex API
    }
- lang: |-
    deno
  resource_type: |-
    Campayn
  resource_type_def: |-
    type Campayn = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jumpseller
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token for Miro API
        boardId: string; // ID of the Miro board where the shape will be created
    }
- lang: |-
    deno
  resource_type: |-
    HumorApi
  resource_type_def: |-
    type HumorApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mongodb
  resource_type_def: |-
    type Mongodb = {
        uri: string,
        dbName: string
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jotform
  resource_type_def: |-
    type Jotform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Campaignhq
  resource_type_def: |-
    type Campaignhq = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Netlify
  resource_type_def: |-
    type Netlify = {
        accessToken: string;
        siteId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        passphrase: string;
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string;
        firmId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Gong
  resource_type_def: |-
    type Gong = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moxie
  resource_type_def: |-
    type Moxie = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSafebrowsing
  resource_type_def: |-
    type GoogleSafebrowsing = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        passphrase: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Laposta
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Botconversa
  resource_type_def: |-
    type Botconversa = {
        apiKey: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Esputnik
  resource_type_def: |-
    type Esputnik = {
        username: string;
        password: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getemails
  resource_type_def: |-
    type Getemails = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Node
  resource_type_def: |-
    type Node = {
        // Node integration does not typically require specific credentials or configuration
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Figma
  resource_type_def: |-
    type Figma = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
        // Add other properties needed for CroveApp integration
    }
- lang: |-
    deno
  resource_type: |-
    GoogleContacts
  resource_type_def: |-
    type GoogleContacts = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
        scope: string;
        tokenType: string;
        expiryDate: number;
    }
- lang: |-
    deno
  resource_type: |-
    Frontapp
  resource_type_def: |-
    type Frontapp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitaloceanSpaces
  resource_type_def: |-
    type DigitaloceanSpaces = {
        accessKeyId: string;
        secretAccessKey: string;
        endpoint: string;
        bucket: string;
    }
- lang: |-
    deno
  resource_type: |-
    Botconversa
  resource_type_def: |-
    type Botconversa = {
        apiKey: string,
        botId: string
    }
- lang: |-
    deno
  resource_type: |-
    DockCerts
  resource_type_def: |-
    type DockCerts = {
        nodeEndpoint: string; // Endpoint of the Dock node
        issuerDid: string;    // DID of the issuer
        issuerSeed: Uint8Array; // Seed of the issuer for signing the credential
        // Add any other properties required for DockCerts integration
    }
- lang: |-
    deno
  resource_type: |-
    Jobnimbus
  resource_type_def: |-
    type Jobnimbus = {
        apiKey: string,
        apiSecret: string,
    }
- lang: |-
    deno
  resource_type: |-
    Etsy
  resource_type_def: |-
    type Etsy = {
        apiKey: string;
        apiSecret: string;
        token: string;
        tokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Askyourpdf
  resource_type_def: |-
    type Askyourpdf = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Kingsumo
  resource_type_def: |-
    type Kingsumo = {
        apiKey: string;
        giveawayId: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Ifttt
  resource_type_def: |-
    type Ifttt = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Getaccept
  resource_type_def: |-
    type Getaccept = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Noticeable
  resource_type_def: |-
    type Noticeable = {
        projectId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftExcel
  resource_type_def: |-
    type MicrosoftExcel = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cardly
  resource_type_def: |-
    type Cardly = {
        apiKey: string;
        apiSecret: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftSqlServer
  resource_type_def: |-
    type MicrosoftSqlServer = {
        server: string;
        authentication: {
            type: "default" | "ntlm" | "azure-active-directory-password" | "azure-active-directory-access-token";
            options: {
                userName: string;
                password: string;
            };
        };
        options: {
            database: string;
            encrypt: boolean;
            trustServerCertificate: boolean;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcal
  resource_type_def: |-
    type Coinmarketcal = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airmeet
  resource_type_def: |-
    type Airmeet = {
        apiKey: string;
        airmeetId: string;
        organizerId: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoMeraki
  resource_type_def: |-
    type CiscoMeraki = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        smtpHost: string;
        smtpPort: number;
        secure: boolean; // true for 465, false for other ports
        auth: {
            user: string;
            pass: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    CreditRepairCloud
  resource_type_def: |-
    type CreditRepairCloud = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    FirebaseAdminSdk
  resource_type_def: |-
    type FirebaseAdminSdk = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Formstack
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MoreTrees
  resource_type_def: |-
    type MoreTrees = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinkedinAds
  resource_type_def: |-
    type LinkedinAds = {
        accessToken: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HumorApi
  resource_type_def: |-
    type HumorApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Holded
  resource_type_def: |-
    type Holded = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        spaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dynapictures
  resource_type_def: |-
    type Dynapictures = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getresponse
  resource_type_def: |-
    type Getresponse = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaviyo
  resource_type_def: |-
    type Klaviyo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientEmail: string;
        privateKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Formaloo
  resource_type_def: |-
    type Formaloo = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    FacebookGroups
  resource_type_def: |-
    type FacebookGroups = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Metaphor
  resource_type_def: |-
    type Metaphor = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Agendor
  resource_type_def: |-
    type Agendor = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Discord
  resource_type_def: |-
    type Discord = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalendlyV2
  resource_type_def: |-
    type CalendlyV2 = {
        apiKey: string;
        organization: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Campaignhq
  resource_type_def: |-
    type Campaignhq = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Eventbrite
  resource_type_def: |-
    type Eventbrite = {
        apiKey: string;
        // Add other necessary Eventbrite-specific authentication/configuration properties here
    }
- lang: |-
    deno
  resource_type: |-
    Companycam
  resource_type_def: |-
    type Companycam = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Insightly
  resource_type_def: |-
    type Insightly = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    Liveagent
  resource_type_def: |-
    type Liveagent = {
        apiUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hive
  resource_type_def: |-
    type Hive = {
        apiKey: string;
        apiSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string,
        endpointUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
        boardId: number;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    JwPlayer
  resource_type_def: |-
    type JwPlayer = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlookCalendar
  resource_type_def: |-
    type MicrosoftOutlookCalendar = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        boardId: string;
        taskId: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopReturns
  resource_type_def: |-
    type LoopReturns = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinbase
  resource_type_def: |-
    type Coinbase = {
        apiKey: string;
        apiSecret: string;
        apiVersion: string;
    }
- lang: |-
    deno
  resource_type: |-
    Giphy
  resource_type_def: |-
    type Giphy = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    NocrmIo
  resource_type_def: |-
    type NocrmIo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gorillastack
  resource_type_def: |-
    type Gorillastack = {
        apiKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dreamstudio
  resource_type_def: |-
    type Dreamstudio = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DocsbotAi
  resource_type_def: |-
    type DocsbotAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DocsbotAi
  resource_type_def: |-
    type DocsbotAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Intuiface
  resource_type_def: |-
    type Intuiface = {
        apiKey: string;
        experienceId: string;
        interfaceAssetId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Convenia
  resource_type_def: |-
    type Convenia = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: |-
    type HuggingFace = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bouncer
  resource_type_def: |-
    type Bouncer = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moosend
  resource_type_def: |-
    type Moosend = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        accessToken: string;
        refreshToken: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Harvest
  resource_type_def: |-
    type Harvest = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Flodesk
  resource_type_def: |-
    type Flodesk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token for Miro API
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
        environment?: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365Planner
  resource_type_def: |-
    type Microsoft365Planner = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authorityHostUrl: string;
        graphResource: string;
    }
- lang: |-
    deno
  resource_type: |-
    Frontapp
  resource_type_def: |-
    type Frontapp = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    Filter
  resource_type_def: |-
    type Filter = {
        // No specific properties needed for a generic filter operation
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailersend
  resource_type_def: |-
    type Mailersend = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        apiBaseUrl: string;
        privateToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    Mongodb
  resource_type_def: |-
    type Mongodb = {
        uri: string,
        dbName: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopReturns
  resource_type_def: |-
    type LoopReturns = {
        apiKey: string;
        shopDomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    FirebaseAdminSdk
  resource_type_def: |-
    type FirebaseAdminSdk = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Miestro
  resource_type_def: |-
    type Miestro = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    EdenAi
  resource_type_def: |-
    type EdenAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AcelleMail
  resource_type_def: |-
    type AcelleMail = {
        apiUrl: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string;
        accountKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    FirebaseAdminSdk
  resource_type_def: |-
    type FirebaseAdminSdk = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gigasheet
  resource_type_def: |-
    type Gigasheet = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getresponse
  resource_type_def: |-
    type Getresponse = {
        apiKey: string;
        apiUrl?: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
        environment?: string;
    }
- lang: |-
    deno
  resource_type: |-
    DopplerMarketingAutomation
  resource_type_def: |-
    type DopplerMarketingAutomation = {
        apiKey: string;
        accountName: string;
    }
- lang: |-
    deno
  resource_type: |-
    FullContact
  resource_type_def: |-
    type FullContact = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getresponse
  resource_type_def: |-
    type Getresponse = {
        apiKey: string,
        apiUrl?: string
    }
- lang: |-
    deno
  resource_type: |-
    Mem
  resource_type_def: |-
    type Mem = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Feedbin
  resource_type_def: |-
    type Feedbin = {
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    AutomaticDataExtraction
  resource_type_def: |-
    type AutomaticDataExtraction = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Holded
  resource_type_def: |-
    type Holded = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Databricks
  resource_type_def: |-
    type Databricks = {
        instanceUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Askyourpdf
  resource_type_def: |-
    type Askyourpdf = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GmailCustomOauth
  resource_type_def: |-
    type GmailCustomOauth = {
        clientEmail: string;
        privateKey: string;
        scopes: string[];
    }
- lang: |-
    deno
  resource_type: |-
    CustomerFields
  resource_type_def: |-
    type CustomerFields = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Cloudinary
  resource_type_def: |-
    type Cloudinary = {
        cloudName: string;
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gryd
  resource_type_def: |-
    type Gryd = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    D7Networks
  resource_type_def: |-
    type D7Networks = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    CodeqNaturalLanguageProcessingApi
  resource_type_def: |-
    type CodeqNaturalLanguageProcessingApi = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    ConstantContact
  resource_type_def: |-
    type ConstantContact = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        credentials: {
            clientEmail: string;
            privateKey: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
      apiKey: string;
      apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Goody
  resource_type_def: |-
    type Goody = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: |-
    type HuggingFace = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Booqable
  resource_type_def: |-
    type Booqable = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        credentials: {
            client_email: string;
            private_key: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Codereadr
  resource_type_def: |-
    type Codereadr = {
        apiKey: string;
        serviceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: |-
    type HuggingFace = {
        apiKey: string,
        model: string
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GorgiasOauth
  resource_type_def: |-
    type GorgiasOauth = {
        accessToken: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Beanstalkapp
  resource_type_def: |-
    type Beanstalkapp = {
        accessToken: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AcelleMail
  resource_type_def: |-
    type AcelleMail = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string,
        docId: string
    }
- lang: |-
    deno
  resource_type: |-
    Nudgify
  resource_type_def: |-
    type Nudgify = {
        apiKey: string,
        siteId: string
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        workspace: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cleverreach
  resource_type_def: |-
    type Cleverreach = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
        refreshToken: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getresponse
  resource_type_def: |-
    type Getresponse = {
        apiKey: string;
        apiUrl?: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftEntraId
  resource_type_def: |-
    type MicrosoftEntraId = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    NethuntCrm
  resource_type_def: |-
    type NethuntCrm = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    Kanbanize
  resource_type_def: |-
    type Kanbanize = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Businesslogic
  resource_type_def: |-
    type Businesslogic = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsofttodo
  resource_type_def: |-
    type Microsofttodo = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberspot
  resource_type_def: |-
    type Memberspot = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Discogs
  resource_type_def: |-
    type Discogs = {
        consumerKey: string;
        consumerSecret: string;
        token: string;
        tokenSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lusha
  resource_type_def: |-
    type Lusha = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        apiSecret: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        apiKey: string;
        storeId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Awork
  resource_type_def: |-
    type Awork = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Campayn
  resource_type_def: |-
    type Campayn = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTagManager
  resource_type_def: |-
    type GoogleTagManager = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailerlite
  resource_type_def: |-
    type Mailerlite = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Goody
  resource_type_def: |-
    type Goody = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Laposta
  resource_type_def: |-
    type Laposta = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        channelId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    KiteSuite
  resource_type_def: |-
    type KiteSuite = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Databricks
  resource_type_def: |-
    type Databricks = {
        instanceUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Diffchecker
  resource_type_def: |-
    type Diffchecker = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Ably
  resource_type_def: |-
    type Ably = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Http
  resource_type_def: |-
    type Http = {
        endpoint: string,
        headers?: { [key: string]: string },
    }
- lang: |-
    deno
  resource_type: |-
    Ftrack
  resource_type_def: |-
    type Ftrack = {
        // Properties for Ftrack authentication/configuration
        api_key: string;
        user_id: string;
        api_url: string;
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    ImagekitIo
  resource_type_def: |-
    type ImagekitIo = {
        publicKey: string;
        privateKey: string;
        urlEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailerlite
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Gigasheet
  resource_type_def: |-
    type Gigasheet = {
        apiKey: string,
        sheetId: string
    }
- lang: |-
    deno
  resource_type: |-
    Maintainx
  resource_type_def: |-
    type Maintainx = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinearApp
  resource_type_def: |-
    type LinearApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Noticeable
  resource_type_def: |-
    type Noticeable = {
        projectId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DockCerts
  resource_type_def: |-
    type DockCerts = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GeneratedPhotos
  resource_type_def: |-
    type GeneratedPhotos = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitaloceanSpaces
  resource_type_def: |-
    type DigitaloceanSpaces = {
        accessKeyId: string;
        secretAccessKey: string;
        endpoint: string;
        bucket: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    EodhdApis
  resource_type_def: |-
    type EodhdApis = {
        apiKey: string; // API key for authentication
        // Add other necessary properties for the EodhdApis integration if needed
    }
- lang: |-
    deno
  resource_type: |-
    Click2mail2
  resource_type_def: |-
    type Click2mail2 = {
        username: string;
        password: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        accessKeyId: string;
        secretAccessKey: string;
        sessionToken?: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gotowebinar
  resource_type_def: |-
    type Gotowebinar = {
        organizerKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Abyssale
  resource_type_def: |-
    type Abyssale = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nocodb
  resource_type_def: |-
    type Nocodb = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coinmarketcap
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    NewRelic
  resource_type_def: |-
    type NewRelic = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTagManager
  resource_type_def: |-
    type GoogleTagManager = {
        accessToken: string;
        accountId: string;
        containerId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        host: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        apiToken: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    BigDataCloud
  resource_type_def: |-
    type BigDataCloud = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Intercom
  resource_type_def: |-
    type Intercom = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        accessToken: string;
        secretId: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    DopplerMarketingAutomation
  resource_type_def: |-
    type DopplerMarketingAutomation = {
        apiKey: string;
        accountName: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    FormstackDocuments
  resource_type_def: |-
    type FormstackDocuments = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Mongodb
  resource_type_def: |-
    type Mongodb = {
        uri: string,
        dbName: string
    }
- lang: |-
    deno
  resource_type: |-
    EdenAi
  resource_type_def: |-
    type EdenAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataPoliceUk
  resource_type_def: |-
    type DataPoliceUk = {
        apiKey: string; // Assuming API key is needed, adjust according to actual requirements
    }
- lang: |-
    deno
  resource_type: |-
    Noticeable
  resource_type_def: |-
    type Noticeable = {
        projectId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailmodo
  resource_type_def: |-
    type Mailmodo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Docsumo
  resource_type_def: |-
    type Docsumo = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    FormstackDocuments
  resource_type_def: |-
    type FormstackDocuments = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aftership
  resource_type_def: |-
    type Aftership = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cliniko
  resource_type_def: |-
    type Cliniko = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        accessToken: string,
        secretId: string,
        secretKey: string
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ecwid
  resource_type_def: |-
    type Ecwid = {
        storeId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleContacts
  resource_type_def: |-
    type GoogleContacts = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clinchpad
  resource_type_def: |-
    type Clinchpad = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientEmail: string;
        privateKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Faunadb
  resource_type_def: |-
    type Faunadb = {
        secret: string;
    }
- lang: |-
    deno
  resource_type: |-
    BigDataCloud
  resource_type_def: |-
    type BigDataCloud = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onenote
  resource_type_def: |-
    type Onenote = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Missive
  resource_type_def: |-
    type Missive = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Codereadr
  resource_type_def: |-
    type Codereadr = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getaccept
  resource_type_def: |-
    type Getaccept = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Agendor
  resource_type_def: |-
    type Agendor = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Getaccept
  resource_type_def: |-
    type Getaccept = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalCom
  resource_type_def: |-
    type CalCom = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    HuggingFace
  resource_type_def: |-
    type HuggingFace = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Elevenlabs
  resource_type_def: |-
    type Elevenlabs = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Basecamp
  resource_type_def: |-
    type Basecamp = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onenote
  resource_type_def: |-
    type Onenote = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
          apiKey: string;
      }

      async getSpaceViews(clickupResource: Clickup, spaceId: string) {
          const url = `https://api.clickup.com/api/v2/space/${spaceId}/view`;

          const headers = {
              'Authorization': clickupResource.apiKey,
              'Content-Type': 'application/json'
          };

          try {
              const response = await this.httpClient.get(url, { headers: headers }).toPromise();
              const views = await response.json();
              return views;
          } catch (error) {
              console.error('Error fetching ClickUp space views:', error);
              throw error;
          }
      }
    }
- lang: |-
    deno
  resource_type: |-
    Endorsal
  resource_type_def: |-
    type Endorsal = {
        apiKey: string,
        subdomain: string
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    EsignaturesIo
  resource_type_def: |-
    type EsignaturesIo = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitaloceanSpaces
  resource_type_def: |-
    type DigitaloceanSpaces = {
        endpoint: string;
        accessKeyId: string;
        secretAccessKey: string;
        bucket: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ip2location
  resource_type_def: |-
    type Ip2location = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailgun
  resource_type_def: |-
    type Mailgun = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airplane
  resource_type_def: |-
    type Airplane = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HtmlCssToImage
  resource_type_def: |-
    type HtmlCssToImage = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailjet
  resource_type_def: |-
    type Mailjet = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MoreTrees
  resource_type_def: |-
    type MoreTrees = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    HumorApi
  resource_type_def: |-
    type HumorApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gong
  resource_type_def: |-
    type Gong = {
        apiKey: string;
        gongApiEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Convertkit
  resource_type_def: |-
    type Convertkit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Blogger
  resource_type_def: |-
    type Blogger = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Accelo
  resource_type_def: |-
    type Accelo = {
        deployment: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    CustomerIo
  resource_type_def: |-
    type CustomerIo = {
        siteId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Leap
  resource_type_def: |-
    type Leap = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    OneAi
  resource_type_def: |-
    type OneAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Algomo
  resource_type_def: |-
    type Algomo = {
        apiKey: string,
        botId: string
    }
- lang: |-
    deno
  resource_type: |-
    MoceanApi
  resource_type_def: |-
    type MoceanApi = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlookCalendar
  resource_type_def: |-
    type MicrosoftOutlookCalendar = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Craftmypdf
  resource_type_def: |-
    type Craftmypdf = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Leadfeeder
  resource_type_def: |-
    type Leadfeeder = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    JpFunda
  resource_type_def: |-
    type JpFunda = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        projectId: string,
        keyFilename: string
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MoceanApi
  resource_type_def: |-
    type MoceanApi = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Beanstalkapp
  resource_type_def: |-
    type Beanstalkapp = {
        apiUrl: string;
        username: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        // Add any other properties required for BingX authentication
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Botconversa
  resource_type_def: |-
    type Botconversa = {
        apiKey: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Baselinker
  resource_type_def: |-
    type Baselinker = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Modeck
  resource_type_def: |-
    type Modeck = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    KanbanTool
  resource_type_def: |-
    type KanbanTool = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dext
  resource_type_def: |-
    type Dext = {
        apiKey: string,
        clientSecret: string,
    }
- lang: |-
    deno
  resource_type: |-
    Hookdeck
  resource_type_def: |-
    type Hookdeck = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberstack
  resource_type_def: |-
    type Memberstack = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token
        boardId: string; // ID of the Miro board
    }
- lang: |-
    deno
  resource_type: |-
    DataStores
  resource_type_def: |-
    type DataStores = {
        projectId: string;
        keyFilename: string; // Path to a JSON key file
    }
- lang: |-
    deno
  resource_type: |-
    Eventbrite
  resource_type_def: |-
    type Eventbrite = {
        apiKey: string;
        // Add other necessary properties for Eventbrite authentication
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string
    }
- lang: |-
    deno
  resource_type: |-
    Magnetic
  resource_type_def: |-
    type Magnetic = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    EchtpostPostcards
  resource_type_def: |-
    type EchtpostPostcards = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    BloomGrowth
  resource_type_def: |-
    type BloomGrowth = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Listmonk
  resource_type_def: |-
    type Listmonk = {
        host: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        webhookUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hyros
  resource_type_def: |-
    type Hyros = {
        apiKey: string;
        apiSecret: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    KiteSuite
  resource_type_def: |-
    type KiteSuite = {
        apiKey: string;
        apiSecret: string;
        // Add other properties needed for KiteSuite authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    GoogleContacts
  resource_type_def: |-
    type GoogleContacts = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Livestorm
  resource_type_def: |-
    type Livestorm = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        authJson: string; // The content of the service account JSON file
    }
- lang: |-
    deno
  resource_type: |-
    Devrev
  resource_type_def: |-
    type Devrev = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    LightspeedVt
  resource_type_def: |-
    type LightspeedVt = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Blogger
  resource_type_def: |-
    type Blogger = {
        apiKey: string;
        accessToken: string;
        blogId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mysql
  resource_type_def: |-
    type Mysql = {
        host: string;
        user: string;
        password: string;
        database: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudinary
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Convertkit
  resource_type_def: |-
    type Convertkit = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    HSupertoolsAnalyticsTool
  resource_type_def: |-
    type HSupertoolsAnalyticsTool = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    IauditorBySafetyculture
  resource_type_def: |-
    type IauditorBySafetyculture = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monkeylearn
  resource_type_def: |-
    type Monkeylearn = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Giantcampaign
  resource_type_def: |-
    type Giantcampaign = {
        apiKey: string;
        apiSecret: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    Aweber
  resource_type_def: |-
    type Aweber = {
        accessToken: string,
        refreshToken: string,
        clientID: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Kickofflabs
  resource_type_def: |-
    type Kickofflabs = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Airtable
  resource_type_def: |-
    type Airtable = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    IntellexerApi
  resource_type_def: |-
    type IntellexerApi = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Imgbb
  resource_type_def: |-
    type Imgbb = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        // Add any other properties needed for Bingx integration
    }
- lang: |-
    deno
  resource_type: |-
    Frontapp
  resource_type_def: |-
    type Frontapp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
        zoneId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
      host: string;
      email: string;
      apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CiscoMeraki
  resource_type_def: |-
    type CiscoMeraki = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    AsticaAi
  resource_type_def: |-
    type AsticaAi = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSlides
  resource_type_def: |-
    type GoogleSlides = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        username: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
        // Add other authentication/configuration properties relevant to HelperFunctions integration
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ipbase
  resource_type_def: |-
    type Ipbase = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Algolia
  resource_type_def: |-
    type Algolia = {
        appId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        username: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Hookdeck
  resource_type_def: |-
    type Hookdeck = {
        apiKey: string;
        sourceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    IntellexerApi
  resource_type_def: |-
    type IntellexerApi = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Delay
  resource_type_def: |-
    type Delay = {
        // No specific properties needed for a simple delay
    }
- lang: |-
    deno
  resource_type: |-
    Clearbit
  resource_type_def: |-
    type Clearbit = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Listmonk
  resource_type_def: |-
    type Listmonk = {
        host: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365People
  resource_type_def: |-
    type Microsoft365People = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string; // Assuming OAuth2 flow has been completed and we have an access token
    }
- lang: |-
    deno
  resource_type: |-
    Databox
  resource_type_def: |-
    type Databox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CreditRepairCloud
  resource_type_def: |-
    type CreditRepairCloud = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    FirebaseAdminSdk
  resource_type_def: |-
    type FirebaseAdminSdk = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Accelo
  resource_type_def: |-
    type Accelo = {
        deployment: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalendlyV2
  resource_type_def: |-
    type CalendlyV2 = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Megaventory
  resource_type_def: |-
    type Megaventory = {
        apiKey: string;
        accountUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string;
        // Add other properties relevant to Nango authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ftrack
  resource_type_def: |-
    type Ftrack = {
        api_key: string;
        user: string;
        server_url: string;
    }
- lang: |-
    deno
  resource_type: |-
    CampaignCleaner
  resource_type_def: |-
    type CampaignCleaner = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Holded
  resource_type_def: |-
    type Holded = {
        smtpHost: string;
        smtpPort: number;
        smtpUsername: string;
        smtpPassword: string;
        useTLS: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Algolia
  resource_type_def: |-
    type Algolia = {
        appId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleAnalytics
  resource_type_def: |-
    type GoogleAnalytics = {
        propertyId: string;
        credentials: {
            clientEmail: string;
            privateKey: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Asknicely
  resource_type_def: |-
    type Asknicely = {
        apiKey: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    CoherePlatform
  resource_type_def: |-
    type CoherePlatform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chatbot
  resource_type_def: |-
    type Chatbot = {
        apiKey: string,
        apiSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Brex
  resource_type_def: |-
    type Brex = {
        apiKey: string; // API key for authentication
        // Other properties needed for Brex authentication/configuration can be added here
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCalendar
  resource_type_def: |-
    type GoogleCalendar = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
        databaseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Codereadr
  resource_type_def: |-
    type Codereadr = {
        apiKey: string;
        serviceUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bigmailer
  resource_type_def: |-
    type Bigmailer = {
        apiKey: string;
        accountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drip
  resource_type_def: |-
    type Drip = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Freshdesk
  resource_type_def: |-
    type Freshdesk = {
        apiKey: string,
        domain: string
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bandwidth
  resource_type_def: |-
    type Bandwidth = {
        accountId: string;
        applicationId: string;
        authToken: string;
        authSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Line
  resource_type_def: |-
    type Line = {
        channelAccessToken: string,
        channelSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Magnetic
  resource_type_def: |-
    type Magnetic = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Alpaca
  resource_type_def: |-
    type Alpaca = {
        apiKeyId: string;
        secretKey: string;
        paper: boolean;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    GeodbCities
  resource_type_def: |-
    type GeodbCities = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gist
  resource_type_def: |-
    type Gist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Email
  resource_type_def: |-
    type Email = {
        host: string;
        port: number;
        secure: boolean; // true for 465, false for other ports
        auth: {
            user: string;
            pass: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Omnivore
  resource_type_def: |-
    type Omnivore = {
        apiKey: string;
        locationId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureSql
  resource_type_def: |-
    type AzureSql = {
        connectionString: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clearbit
  resource_type_def: |-
    type Clearbit = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ftrack
  resource_type_def: |-
    type Ftrack = {
        api_key: string;
        user_id: string;
        api_url: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        instanceUrl: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
        docId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDirectory
  resource_type_def: |-
    type GoogleDirectory = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        accessToken: string;
        refreshToken: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Infinity
  resource_type_def: |-
    type Infinity = {
        apiKey: string;
        boardId: string;
    }
- lang: |-
    deno
  resource_type: |-
    BloomGrowth
  resource_type_def: |-
    type BloomGrowth = {
        apiKey: string;
        projectId: string;
    }
- lang: |-
    deno
  resource_type: |-
    MetatextAiPreBuildAiModelsApi
  resource_type_def: |-
    type MetatextAiPreBuildAiModelsApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Loopmessage
  resource_type_def: |-
    type Loopmessage = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataPoliceUk
  resource_type_def: |-
    type DataPoliceUk = {
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudinary
  resource_type_def: |-
    type Cloudinary = {
        cloudName: string;
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleTasks
  resource_type_def: |-
    type GoogleTasks = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: |-
    type Meistertask = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DocusignDeveloper
  resource_type_def: |-
    type DocusignDeveloper = {
        // Docusign credentials or configuration
        accountId: string;
        basePath: string;
        oAuthToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        email: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    ApolloIo
  resource_type_def: |-
    type ApolloIo = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        team: string;
    }
- lang: |-
    deno
  resource_type: |-
    KucoinFutures
  resource_type_def: |-
    type KucoinFutures = {
        apiKey: string;
        secretKey: string;
        passphrase: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    OpenExchangeRates
  resource_type_def: |-
    type OpenExchangeRates = {
        appId: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jibble
  resource_type_def: |-
    type Jibble = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jibble
  resource_type_def: |-
    type Jibble = {
        apiKey: string;
        apiSecret: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dreamstudio
  resource_type_def: |-
    type Dreamstudio = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AmazonSes
  resource_type_def: |-
    type AmazonSes = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string,
        firmId: number
    }
- lang: |-
    deno
  resource_type: |-
    CodeqNaturalLanguageProcessingApi
  resource_type_def: |-
    type CodeqNaturalLanguageProcessingApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
        // Add any other properties needed for Bingx authentication
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GorgiasOauth
  resource_type_def: |-
    type GorgiasOauth = {
        accessToken: string; // OAuth2 Access Token
        domain: string;      // Gorgias account domain
    }
- lang: |-
    deno
  resource_type: |-
    GmailCustomOauth
  resource_type_def: |-
    type GmailCustomOauth = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    F15five
  resource_type_def: |-
    type F15five = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LoopsSo
  resource_type_def: |-
    type LoopsSo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monkeylearn
  resource_type_def: |-
    type Monkeylearn = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    Discord
  resource_type_def: |-
    type Discord = {
        botToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mastodon
  resource_type_def: |-
    type Mastodon = {
        accessToken: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailerlite
  resource_type_def: |-
    type Mailerlite = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftTeams
  resource_type_def: |-
    type MicrosoftTeams = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gist
  resource_type_def: |-
    type Gist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    JudgeMe
  resource_type_def: |-
    type JudgeMe = {
        apiKey: string;
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Helpcrunch
  resource_type_def: |-
    type Helpcrunch = {
        apiKey: string;
        appId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moxie
  resource_type_def: |-
    type Moxie = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalendlyV2
  resource_type_def: |-
    type CalendlyV2 = {
        personalAccessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDocs
  resource_type_def: |-
    type GoogleDocs = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinkedinAds
  resource_type_def: |-
    type LinkedinAds = {
        clientId: string;
        clientSecret: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitly
  resource_type_def: |-
    type Bitly = {
        accessToken: string,
        groupId: string
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Properties needed for authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDrive
  resource_type_def: |-
    type GoogleDrive = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Metaphor
  resource_type_def: |-
    type Metaphor = {
        apiKey: string;
        endpointUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        sessionToken?: string; // Optional session token for temporary credentials
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Notion
  resource_type_def: |-
    type Notion = {
        authToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nango
  resource_type_def: |-
    type Nango = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Cloudtables
  resource_type_def: |-
    type Cloudtables = {
        apiKey: string,
        baseId: string,
        tableId: string
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
        // Add other necessary properties for Amara authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Cloudinary
  resource_type_def: |-
    type Cloudinary = {
        cloudName: string;
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    DigitalOcean
  resource_type_def: |-
    type DigitalOcean = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    EodhdApis
  resource_type_def: |-
    type EodhdApis = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AeroWorkflow
  resource_type_def: |-
    type AeroWorkflow = {
        apiKey: string;
        apiSecret: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleForms
  resource_type_def: |-
    type GoogleForms = {
        clientId: string;
        clientSecret: string;
        redirectUri: string;
        refreshToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordWebhook
  resource_type_def: |-
    type DiscordWebhook = {
        webhookUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    JiraServiceDesk
  resource_type_def: |-
    type JiraServiceDesk = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ably
  resource_type_def: |-
    type Ably = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Include only authentication/configuration properties relevant to any script
    }
- lang: |-
    deno
  resource_type: |-
    Hive
  resource_type_def: |-
    type Hive = {
        apiEndpoint: string,
        privateKey: string,
        username: string
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    F15five
  resource_type_def: |-
    type F15five = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Netlify
  resource_type_def: |-
    type Netlify = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moneybird
  resource_type_def: |-
    type Moneybird = {
        administrationId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Demio
  resource_type_def: |-
    type Demio = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klaxoon
  resource_type_def: |-
    type Klaxoon = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Beanstalkapp
  resource_type_def: |-
    type Beanstalkapp = {
        apiUrl: string;
        username: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Chartmogul
  resource_type_def: |-
    type Chartmogul = {
        accountToken: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Craftmypdf
  resource_type_def: |-
    type Craftmypdf = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Meistertask
  resource_type_def: null
- lang: |-
    deno
  resource_type: |-
    Accelo
  resource_type_def: |-
    type Accelo = {
        apiUrl: string;
        accessToken: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gitlab
  resource_type_def: |-
    type Gitlab = {
        apiToken: string;
        host?: string; // Optional Gitlab instance host, defaults to Gitlab.com
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
        // Add other properties needed for Onedesk authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nexweave
  resource_type_def: |-
    type Nexweave = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftTeams
  resource_type_def: |-
    type MicrosoftTeams = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties needed for BingX authentication
    }
- lang: |-
    deno
  resource_type: |-
    Megaventory
  resource_type_def: |-
    type Megaventory = {
        apiKey: string;
        accountUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Monday
  resource_type_def: |-
    type Monday = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CoherePlatform
  resource_type_def: |-
    type CoherePlatform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string,
        privateKey: string,
        clientEmail: string,
        environment?: string
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string; // Base URL of the Jira instance
        email: string;   // Email of the user to authenticate
        apiToken: string; // API token for the Jira user
    }
- lang: |-
    deno
  resource_type: |-
    Faunadb
  resource_type_def: |-
    type Faunadb = {
        secret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Fibery
  resource_type_def: |-
    type Fibery = {
        apiToken: string;
        workspaceApiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    AmazonSes
  resource_type_def: |-
    type AmazonSes = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        host: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
      apiKey: string;
      apiSecret: string;
      endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bigmailer
  resource_type_def: |-
    type Bigmailer = {
        host: string;
        port: number;
        secure: boolean; // true for 465, false for other ports
        auth: {
            user: string;
            pass: string;
        };
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string,
        baseId: string
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string;
        boardId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Axonaut
  resource_type_def: |-
    type Axonaut = {
        apiKey: string;
        endpointUrl: string;
        success: boolean;
        message?: string;
        data?: any;
    }
- lang: |-
    deno
  resource_type: |-
    GooglePhotos
  resource_type_def: |-
    type GooglePhotos = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSlides
  resource_type_def: |-
    type GoogleSlides = {
        apiKey: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Brex
  resource_type_def: |-
    type Brex = {
        apiKey: string;
        apiSecret: string;
        environment: 'sandbox' | 'production';
    }
- lang: |-
    deno
  resource_type: |-
    Nationbuilder
  resource_type_def: |-
    type Nationbuilder = {
        accessToken: string;
        nationSlug: string;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string;
        usagePointId: string;
    }
- lang: |-
    deno
  resource_type: |-
    FormstackDocuments
  resource_type_def: |-
    type FormstackDocuments = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ip2whois
  resource_type_def: |-
    type Ip2whois = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Github
  resource_type_def: |-
    type Github = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ipbase
  resource_type_def: |-
    type Ipbase = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlookCalendar
  resource_type_def: |-
    type MicrosoftOutlookCalendar = {
        clientId: string;
        clientSecret: string;
        tenantId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Copperx
  resource_type_def: |-
    type Copperx = {
        apiKey: string;
        email: string;
        environment: string; // e.g., 'sandbox' or 'production'
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Assuming HelperFunctions integration provides some sort of API key or token for authentication
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftOutlook
  resource_type_def: |-
    type MicrosoftOutlook = {
        clientId: string;
        clientSecret: string;
        tenantId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string;
        docId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Craftmypdf
  resource_type_def: |-
    type Craftmypdf = {
        apiKey: string
    }
- lang: |-
    deno
  resource_type: |-
    BrexStaging
  resource_type_def: |-
    type BrexStaging = {
        apiKey: string; // API key for authentication
        // Add other relevant properties for BrexStaging integration
    }
- lang: |-
    deno
  resource_type: |-
    GoogleContacts
  resource_type_def: |-
    type GoogleContacts = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Libraria
  resource_type_def: |-
    type Libraria = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Flutterwave
  resource_type_def: |-
    type Flutterwave = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        apiKey: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Linkedin
  resource_type_def: |-
    type Linkedin = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
        botId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        accessToken: string;
        refreshToken: string;
        tokenType: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ifttt
  resource_type_def: |-
    type Ifttt = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amplitude
  resource_type_def: |-
    type Amplitude = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Crimeometer
  resource_type_def: |-
    type Crimeometer = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Freshdesk
  resource_type_def: |-
    type Freshdesk = {
        apiKey: string;
        domain: string;
    }
- lang: |-
    deno
  resource_type: |-
    DiscordBot
  resource_type_def: |-
    type DiscordBot = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        email: string;
        apiKey: string;
        zoneId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Amara
  resource_type_def: |-
    type Amara = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mongodb
  resource_type_def: |-
    type Mongodb = {
        uri: string,
        dbName: string
    }
- lang: |-
    deno
  resource_type: |-
    MojoHelpdesk
  resource_type_def: |-
    type MojoHelpdesk = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Discourse
  resource_type_def: |-
    type Discourse = {
        apiKey: string;
        apiUsername: string;
        discourseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CroveApp
  resource_type_def: |-
    type CroveApp = {
        apiKey: string;
        baseUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleDialogflow
  resource_type_def: |-
    type GoogleDialogflow = {
        projectId: string;
        privateKey: string;
        clientEmail: string;
    }
- lang: |-
    deno
  resource_type: |-
    CalendlyV2
  resource_type_def: |-
    type CalendlyV2 = {
        apiKey: string;
        organization: string;
        owner: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberstack
  resource_type_def: |-
    type Memberstack = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        // Include only properties needed for authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Cardly
  resource_type_def: |-
    type Cardly = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Leap
  resource_type_def: |-
    type Leap = {
        apiKey: string;
        apiSecret: string;
        // Add any other properties required for Leap integration
    }
- lang: |-
    deno
  resource_type: |-
    Justcall
  resource_type_def: |-
    type Justcall = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinearApp
  resource_type_def: |-
    type LinearApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string; // The server prefix associated with the user's Mailchimp account
    }
- lang: |-
    deno
  resource_type: |-
    Maintainx
  resource_type_def: |-
    type Maintainx = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    CreditRepairCloud
  resource_type_def: |-
    type CreditRepairCloud = {
        apiKey: string,
        apiUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    LoopsSo
  resource_type_def: |-
    type LoopsSo = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Emailable
  resource_type_def: |-
    type Emailable = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Eventbrite
  resource_type_def: |-
    type Eventbrite = {
        apiKey: string;
        // Add other authentication/configuration properties as needed
    }
- lang: |-
    deno
  resource_type: |-
    CalCom
  resource_type_def: |-
    type CalCom = {
        apiKey: string;
        calendarId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Esputnik
  resource_type_def: |-
    type Esputnik = {
        apiKey: string;
        apiUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    Leap
  resource_type_def: |-
    type Leap = {
        apiKey: string;
        apiEndpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleCloud
  resource_type_def: |-
    type GoogleCloud = {
        projectId: string;
        clientEmail: string;
        privateKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Onedesk
  resource_type_def: |-
    type Onedesk = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    OneAi
  resource_type_def: |-
    type OneAi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bannerbear
  resource_type_def: |-
    type Bannerbear = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AsticaAi
  resource_type_def: |-
    type AsticaAi = {
        apiKey: string;
        endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dbt
  resource_type_def: |-
    type Dbt = {
        host: string;
        port: number;
        rpcToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Moneybird
  resource_type_def: |-
    type Moneybird = {
        administrationId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Close
  resource_type_def: |-
    type Close = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Listclean
  resource_type_def: |-
    type Listclean = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Asana
  resource_type_def: |-
    type Asana = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mapulus
  resource_type_def: |-
    type Mapulus = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clerk
  resource_type_def: |-
    type Clerk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    InstagramBusiness
  resource_type_def: |-
    type InstagramBusiness = {
        accessToken: string;
        businessAccountId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    Kickbox
  resource_type_def: |-
    type Kickbox = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Klazify
  resource_type_def: |-
    type Klazify = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Deepgram
  resource_type_def: |-
    type Deepgram = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hubspot
  resource_type_def: |-
    type Hubspot = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Assemblyai
  resource_type_def: |-
    type Assemblyai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bitbucket
  resource_type_def: |-
    type Bitbucket = {
        username: string;
        appPassword: string;
    }
- lang: |-
    deno
  resource_type: |-
    HelperFunctions
  resource_type_def: |-
    type HelperFunctions = {
        rssFeedUrl: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleContacts
  resource_type_def: |-
    type GoogleContacts = {
        clientId: string;
        clientSecret: string;
        refreshToken: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Memberstack
  resource_type_def: |-
    type Memberstack = {
        apiKey: string;
        subdomain: string;
    }
- lang: |-
    deno
  resource_type: |-
    AirtableOauth
  resource_type_def: |-
    type AirtableOauth = {
        apiKey: string;
        baseId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nocodb
  resource_type_def: |-
    type Nocodb = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Craftmypdf
  resource_type_def: |-
    type Craftmypdf = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jotform
  resource_type_def: |-
    type Jotform = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Dropbox
  resource_type_def: |-
    type Dropbox = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Enedis
  resource_type_def: |-
    type Enedis = {
        accessToken: string,
        refreshToken: string,
        clientId: string,
        clientSecret: string
    }
- lang: |-
    deno
  resource_type: |-
    BadgerMaps
  resource_type_def: |-
    type BadgerMaps = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    FacebookPages
  resource_type_def: |-
    type FacebookPages = {
        accessToken: string;
        pageId: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureOpenaiService
  resource_type_def: |-
    type AzureOpenaiService = {
        apiKey: string,
        endpoint: string
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Drata
  resource_type_def: |-
    type Drata = {
        apiKey: string;
        // Add other authentication/configuration properties required by Drata
    }
- lang: |-
    deno
  resource_type: |-
    Mixmax
  resource_type_def: |-
    type Mixmax = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Ongage
  resource_type_def: |-
    type Ongage = {
        apiUrl: string,
        username: string,
        password: string,
        accountCode: string
    }
- lang: |-
    deno
  resource_type: |-
    Drip
  resource_type_def: |-
    type Drip = {
        accountId: string;
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gist
  resource_type_def: |-
    type Gist = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailjet
  resource_type_def: |-
    type Mailjet = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bybit
  resource_type_def: |-
    type Bybit = {
      apiKey: string;
      apiSecret: string;
      endpoint: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nocodb
  resource_type_def: |-
    type Nocodb = {
        apiUrl: string; // The base URL of the NocoDB API
        apiKey: string; // The API key for authenticating with the NocoDB API
    }
- lang: |-
    deno
  resource_type: |-
    MiroCustomApp
  resource_type_def: |-
    type MiroCustomApp = {
        accessToken: string; // OAuth2 access token for Miro API
    }
- lang: |-
    deno
  resource_type: |-
    Activecampaign
  resource_type_def: |-
    type Activecampaign = {
        apiUrl: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Nordigen
  resource_type_def: |-
    type Nordigen = {
        secretId: string;
        secretKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    DataPoliceUk
  resource_type_def: |-
    type DataPoliceUk = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jibble
  resource_type_def: |-
    type Jibble = {
        apiKey: string;
        workspaceId: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleChat
  resource_type_def: |-
    type GoogleChat = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Gigasheet
  resource_type_def: |-
    type Gigasheet = {
        apiKey: string;
        // Add other properties relevant to Gigasheet authentication/configuration
    }
- lang: |-
    deno
  resource_type: |-
    Openai
  resource_type_def: |-
    type Openai = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Maintainx
  resource_type_def: |-
    type Maintainx = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    LinearApp
  resource_type_def: |-
    type LinearApp = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mautic
  resource_type_def: |-
    type Mautic = {
        baseUrl: string;
        username: string;
        password: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    HumorApi
  resource_type_def: |-
    type HumorApi = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jobnimbus
  resource_type_def: |-
    type Jobnimbus = {
        apiKey: string;
        userToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    GoogleSheets
  resource_type_def: |-
    type GoogleSheets = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    CloudflareApiKey
  resource_type_def: |-
    type CloudflareApiKey = {
        apiKey: string;
        email: string;
        zoneId: string;
    }
- lang: |-
    deno
  resource_type: |-
    Clickup
  resource_type_def: |-
    type Clickup = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AzureOpenaiService
  resource_type_def: |-
    type AzureOpenaiService = {
        endpoint: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        apiKey: string;
        domain: string;
        email: string;
    }
- lang: |-
    deno
  resource_type: |-
    AgileCrm
  resource_type_def: |-
    type AgileCrm = {
        baseUrl: string;
        email: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Giphy
  resource_type_def: |-
    type Giphy = {
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    Jira
  resource_type_def: |-
    type Jira = {
        baseUrl: string;
        email: string;
        apiToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Aws
  resource_type_def: |-
    type Aws = {
        accessKeyId: string;
        secretAccessKey: string;
        region: string;
    }
- lang: |-
    deno
  resource_type: |-
    Hostaway
  resource_type_def: |-
    type Hostaway = {
        apiKey: string,
        accountId: string
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftEntraId
  resource_type_def: |-
    type MicrosoftEntraId = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
        authority: string;
    }
- lang: |-
    deno
  resource_type: |-
    Mailchimp
  resource_type_def: |-
    type Mailchimp = {
        apiKey: string;
        serverPrefix: string;
    }
- lang: |-
    deno
  resource_type: |-
    Basecamp
  resource_type_def: |-
    type Basecamp = {
        accessToken: string,
        accountId: string
    }
- lang: |-
    deno
  resource_type: |-
    Microsoft365People
  resource_type_def: |-
    type Microsoft365People = {
        tenantId: string;
        clientId: string;
        clientSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Brex
  resource_type_def: |-
    type Brex = {
        apiKey: string,
    }
- lang: |-
    deno
  resource_type: |-
    ClockworkRecruiting
  resource_type_def: |-
    type ClockworkRecruiting = {
        apiKey: string,
        baseUrl: string
    }
- lang: |-
    deno
  resource_type: |-
    Coda
  resource_type_def: |-
    type Coda = {
        apiToken: string,
        docId: string
    }
- lang: |-
    deno
  resource_type: |-
    CustomerIo
  resource_type_def: |-
    type CustomerIo = {
        siteId: string;
        apiKey: string;
    }
- lang: |-
    deno
  resource_type: |-
    MicrosoftExcel
  resource_type_def: |-
    type MicrosoftExcel = {
        accessToken: string;
    }
- lang: |-
    deno
  resource_type: |-
    Agendor
  resource_type_def: |-
    type Agendor = {
        token: string;
    }
- lang: |-
    deno
  resource_type: |-
    Bingx
  resource_type_def: |-
    type Bingx = {
        apiKey: string;
        apiSecret: string;
    }
- lang: |-
    deno
  resource_type: |-
    Lemlist
  resource_type_def: |-
    type Lemlist = {
        apiKey: string;
    }
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
        access_token: str  # Assuming OAUTH2 access token is provided
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    gmail_custom_oauth
  resource_type_def: |-
    class gmail_custom_oauth(TypedDict):
        access_token: str
        refresh_token: str
        client_id: str
        client_secret: str
        token_uri: str
- lang: |-
    python
  resource_type: |-
    hyros
  resource_type_def: |-
    class hyros(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    klaxoon
  resource_type_def: |-
    class klaxoon(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        api_key: str
        calendar_id: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    awork
  resource_type_def: |-
    class awork(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    onesignal_rest_api
  resource_type_def: |-
    class onesignal_rest_api(TypedDict):
        app_id: str
        rest_api_key: str
- lang: |-
    python
  resource_type: |-
    ghost_org_content_api
  resource_type_def: |-
    class ghost_org_content_api(TypedDict):
        api_key: str
        admin_api_url: str
- lang: |-
    python
  resource_type: |-
    companycam
  resource_type_def: |-
    class companycam(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    melo
  resource_type_def: |-
    class melo(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    jw_player
  resource_type_def: |-
    class jw_player(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    loopmessage
  resource_type_def: |-
    class loopmessage(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    chatwork
  resource_type_def: |-
    class chatwork(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_teams
  resource_type_def: |-
    class microsoft_teams(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ipinfo_io
  resource_type_def: |-
    class ipinfo_io(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    credit_repair_cloud
  resource_type_def: |-
    class credit_repair_cloud(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    jobnimbus
  resource_type_def: |-
    class jobnimbus(TypedDict):
        api_key: str
        user_email: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    jira_service_desk
  resource_type_def: |-
    class jira_service_desk(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    clearbit
  resource_type_def: |-
    class clearbit(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    amazon_ses
  resource_type_def: |-
    class amazon_ses(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    noticeable
  resource_type_def: |-
    class noticeable(TypedDict):
        api_key: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    dbt
  resource_type_def: |-
    class dbt(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    niftykit
  resource_type_def: |-
    class niftykit(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    kickofflabs
  resource_type_def: |-
    class kickofflabs(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    curated
  resource_type_def: |-
    class curated(TypedDict):
        api_key: str  # Assuming API key is needed for the 'curated' integration
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        api_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    azure_sql
  resource_type_def: |-
    class azure_sql(TypedDict):
        server: str
        database: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    nocrm_io
  resource_type_def: |-
    class nocrm_io(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: |-
    class badger_maps(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    missive
  resource_type_def: |-
    class missive(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    digitalocean_spaces
  resource_type_def: |-
    class digitalocean_spaces(TypedDict):
        access_key_id: str
        secret_access_key: str
        region_name: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    mailwizz
  resource_type_def: |-
    class mailwizz(TypedDict):
        api_url: str
        public_key: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    megaventory
  resource_type_def: |-
    class megaventory(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    loop_returns
  resource_type_def: |-
    class loop_returns(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    docusign
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    amqp
  resource_type_def: |-
    class amqp(TypedDict):
        host: str
        port: int
        username: str
        password: str
        virtual_host: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    anthropic
  resource_type_def: |-
    class anthropic(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    gryd
  resource_type_def: |-
    class gryd(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    expofp
  resource_type_def: |-
    class expofp(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
        refresh_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    browserless
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    amilia
  resource_type_def: |-
    class amilia(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    klaviyo
  resource_type_def: |-
    class klaviyo(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_slides
  resource_type_def: |-
    class google_slides(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    envoy
  resource_type_def: |-
    class envoy(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    digitalocean_spaces
  resource_type_def: |-
    class digitalocean_spaces(TypedDict):
        access_key_id: str
        secret_access_key: str
        region_name: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    affinda
  resource_type_def: |-
    class affinda(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str
        form_id: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    convertkit
  resource_type_def: |-
    class convertkit(TypedDict):
        api_secret: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    jumpseller
  resource_type_def: |-
    class jumpseller(TypedDict):
        api_key: str
        account_email: str
- lang: |-
    python
  resource_type: |-
    customer_fields
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    gorgias_oauth
  resource_type_def: |-
    class gorgias_oauth(TypedDict):
        access_token: str
        domain: str
- lang: |-
    python
  resource_type: |-
    clevertap
  resource_type_def: |-
    class clevertap(TypedDict):
        account_id: str
        passcode: str
        region_value: str
- lang: |-
    python
  resource_type: |-
    ipbase
  resource_type_def: |-
    class ipbase(TypedDict):
        api_key: str  # API key for authentication with the ipbase service
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        credentials: google.auth.credentials.Credentials
- lang: |-
    python
  resource_type: |-
    blogger
  resource_type_def: |-
    class blogger(TypedDict):
        api_key: str
        blog_id: str
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: |-
    class http(TypedDict):
        base_url: str
        headers: Dict[str, str]
        auth: Any  # Can be a tuple for basic auth, or an object for other auth types
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str  # Assuming OAuth2 access token is used for authentication
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str  # Bot token for authentication
        client_id: str  # Client ID of the bot
- lang: |-
    python
  resource_type: |-
    missive
  resource_type_def: |-
    class missive(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    nexweave
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_name: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: |-
    class google_chat(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    accelo
  resource_type_def: |-
    class accelo(TypedDict):
        access_token: str  # Assuming OAuth2 access token is used for authentication
        base_url: str      # The base URL for the Accelo API
- lang: |-
    python
  resource_type: |-
    geodb_cities
  resource_type_def: |-
    class geodb_cities(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    klaxoon
  resource_type_def: |-
    class klaxoon(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: |-
    class clerk(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    dealmachine
  resource_type_def: |-
    class dealmachine(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: |-
    class devrev(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    google_analytics
  resource_type_def: |-
    class google_analytics(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    giphy
  resource_type_def: |-
    class giphy(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    omnivore
  resource_type_def: |-
    class omnivore(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    microsoft_sql_server
  resource_type_def: |-
    class microsoft_sql_server(TypedDict):
        server: str
        database: str
        username: str
        password: str
        driver: str  # Example: '{ODBC Driver 17 for SQL Server}'
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    adalo
  resource_type_def: |-
    class adalo(TypedDict):
        api_key: str
        app_id: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        domain: str
        email: str
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: |-
    class instagram_business(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: Dict[str, Any]
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
        organization_id: str  # LinkedIn Organization ID
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: |-
    class google_tasks(TypedDict):
        client_id: str
        client_secret: str
        refresh_token: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    infinity
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    miestro
  resource_type_def: |-
    class miestro(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_url: str
- lang: |-
    python
  resource_type: |-
    intellexer_api
  resource_type_def: |-
    class intellexer_api(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    lighthouse
  resource_type_def: |-
    class lighthouse(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    memberstack
  resource_type_def: |-
    class memberstack(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    getemails
  resource_type_def: |-
    class getemails(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    moneybird
  resource_type_def: |-
    class moneybird(TypedDict):
        api_token: str
        administration_id: str
- lang: |-
    python
  resource_type: |-
    drip
  resource_type_def: |-
    class drip(TypedDict):
        api_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoints are prefixed with a server identifier
- lang: |-
    python
  resource_type: |-
    baselinker
  resource_type_def: |-
    class baselinker(TypedDict):
        token: str  # API token for authentication
- lang: |-
    python
  resource_type: |-
    microsoft_365_people
  resource_type_def: |-
    class microsoft_365_people(TypedDict):
        client_id: str
        tenant_id: str
        client_secret: str
        access_token: str  # Assuming OAuth2 credentials are already obtained
- lang: |-
    python
  resource_type: |-
    chat_api_for_whatsapp
  resource_type_def: |-
    class chat_api_for_whatsapp(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    linkedin_ads
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    discord
  resource_type_def: |-
    class discord(TypedDict):
        token: str
        channel_id: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    esputnik
  resource_type_def: |-
    class esputnik(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mongodb
  resource_type_def: |-
    class mongodb(TypedDict):
        host: str
        port: int
        username: str
        password: str
        auth_source: str  # The database to authenticate against
        auth_mechanism: str  # The authentication mechanism
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: |-
    class google_tasks(TypedDict):
        client_id: str
        client_secret: str
        refresh_token: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    jobnimbus
  resource_type_def: |-
    class jobnimbus(TypedDict):
        api_key: str
        user_email: str
- lang: |-
    python
  resource_type: |-
    kickbox
  resource_type_def: |-
    class kickbox(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    firmao
  resource_type_def: |-
    class firmao(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    ahrefs
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    figma
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    assemblyai
  resource_type_def: |-
    class assemblyai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    ongage
  resource_type_def: |-
    class ongage(TypedDict):
        api_key: str
        username: str
        password: str
        account_code: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    h_supertools_analytics_tool
  resource_type_def: |-
    class h_supertools_analytics_tool(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    browse_ai
  resource_type_def: |-
    class browse_ai(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_365_planner
  resource_type_def: |-
    class microsoft_365_planner(TypedDict):
        client_id: str
        tenant_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    big_data_cloud
  resource_type_def: |-
    class big_data_cloud(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    loops_so
  resource_type_def: |-
    class loops_so(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
        token_expiry: datetime.datetime
        token_uri: str
        user_agent: str
        revoke_uri: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token for LinkedIn API
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    coinbase
  resource_type_def: |-
    class coinbase(TypedDict):
        api_key: str
        api_secret: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    asknicely
  resource_type_def: |-
    class asknicely(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    eodhd_apis
  resource_type_def: |-
    class eodhd_apis(TypedDict):
        api_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    onenote
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clearbit
  resource_type_def: |-
    class clearbit(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    mailjet
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mandrill
  resource_type_def: |-
    class mandrill(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    etsy
  resource_type_def: |-
    class etsy(TypedDict):
        api_key: str
        access_token: str
        shop_id: str
- lang: |-
    python
  resource_type: |-
    klaviyo
  resource_type_def: |-
    class klaviyo(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gryd
  resource_type_def: |-
    class gryd(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    document360
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
        campaign_id: str
- lang: |-
    python
  resource_type: |-
    diffchecker
  resource_type_def: |-
    class diffchecker(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    jp_funda
  resource_type_def: |-
    class jp_funda(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    coinmarketcap
  resource_type_def: |-
    class coinmarketcap(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: |-
    class bannerbear(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gorgias_oauth
  resource_type_def: |-
    class gorgias_oauth(TypedDict):
        access_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: |-
    class clerk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    discourse
  resource_type_def: |-
    class discourse(TypedDict):
        api_key: str
        api_username: str
        forum_url: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    hookdeck
  resource_type_def: |-
    class hookdeck(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    dropcontact
  resource_type_def: |-
    class dropcontact(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        smtp_server: str
        smtp_port: int
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    geodb_cities
  resource_type_def: |-
    class geodb_cities(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_onedrive
  resource_type_def: |-
    class microsoft_onedrive(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
        tenant_id: str
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: |-
    class google_tasks(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    etsy
  resource_type_def: |-
    class etsy(TypedDict):
        api_key: str
        api_secret: str
        oauth_token: str
        oauth_token_secret: str
- lang: |-
    python
  resource_type: |-
    gong
  resource_type_def: |-
    class gong(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        user_id: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str  # OAuth2 access token for Dropbox API
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    insites
  resource_type_def: |-
    class insites(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
        board_id: str      # ID of the Miro board
- lang: |-
    python
  resource_type: |-
    basecamp
  resource_type_def: |-
    class basecamp(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    cisco_webex
  resource_type_def: |-
    class cisco_webex(TypedDict):
        access_token: str
        host: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailmodo
  resource_type_def: |-
    class mailmodo(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    flodesk
  resource_type_def: |-
    class flodesk(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    brex_staging
  resource_type_def: |-
    class brex_staging(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Assuming the 'helper_functions' integration requires an API key for authentication
        api_key: str
- lang: |-
    python
  resource_type: |-
    gorillastack
  resource_type_def: |-
    class gorillastack(TypedDict):
        api_key: str
        team_id: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gryd
  resource_type_def: |-
    class gryd(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    jibble
  resource_type_def: |-
    class jibble(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    inksprout
  resource_type_def: |-
    class inksprout(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gorgias_oauth
  resource_type_def: |-
    class gorgias_oauth(TypedDict):
        access_token: str  # Assuming OAuth2 access token is required for authentication
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    noticeable
  resource_type_def: |-
    class noticeable(TypedDict):
        api_key: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: |-
    class aweber(TypedDict):
        consumer_key: str
        consumer_secret: str
        access_token: str
        token_secret: str
- lang: |-
    python
  resource_type: |-
    cloudinary
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    brex_staging
  resource_type_def: |-
    class brex_staging(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    facebook_groups
  resource_type_def: |-
    class facebook_groups(TypedDict):
        access_token: str
        group_id: str
- lang: |-
    python
  resource_type: |-
    companycam
  resource_type_def: |-
    class companycam(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropcontact
  resource_type_def: |-
    class dropcontact(TypedDict):
        api_key: str  # API key for authentication with the Dropcontact service
- lang: |-
    python
  resource_type: |-
    google_classroom
  resource_type_def: |-
    class google_classroom(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    mem
  resource_type_def: |-
    class mem(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    box
  resource_type_def: |-
    class box(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
        board_id: str      # ID of the Miro board
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: |-
    class bannerbear(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_entra_id
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    nocodb
  resource_type_def: |-
    class nocodb(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    mailmodo
  resource_type_def: |-
    class mailmodo(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    blogger
  resource_type_def: |-
    class blogger(TypedDict):
        api_key: str
        blog_id: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    drip
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    firmao
  resource_type_def: |-
    class firmao(TypedDict):
        api_key: str
        user_id: str
- lang: |-
    python
  resource_type: |-
    databricks
  resource_type_def: |-
    class databricks(TypedDict):
        domain: str
        token: str
- lang: |-
    python
  resource_type: |-
    microsoft_entra_id
  resource_type_def: |-
    class microsoft_entra_id(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    knorish
  resource_type_def: |-
    class knorish(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    flutterwave
  resource_type_def: |-
    class flutterwave(TypedDict):
        public_key: str
        secret_key: str
        encryption_key: str
- lang: |-
    python
  resource_type: |-
    blogger
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    baselinker
  resource_type_def: |-
    class baselinker(TypedDict):
        token: str  # API token for authentication
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        token: str  # Assuming the token is used for authentication
- lang: |-
    python
  resource_type: |-
    mux
  resource_type_def: |-
    class mux(TypedDict):
        access_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    humor_api
  resource_type_def: |-
    class humor_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    accredible
  resource_type_def: |-
    class accredible(TypedDict):
        api_key: str  # API key for the Accredible API
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    dromo
  resource_type_def: |-
    class dromo(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    onesignal_rest_api
  resource_type_def: |-
    class onesignal_rest_api(TypedDict):
        app_id: str
        rest_api_key: str
- lang: |-
    python
  resource_type: |-
    joomla
  resource_type_def: |-
    class joomla(TypedDict):
        username: str
        password: str
        token: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    gmail_custom_oauth
  resource_type_def: |-
    class gmail_custom_oauth(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_palm_api
  resource_type_def: |-
    class google_palm_api(TypedDict):
        api_key: str
        token: str
- lang: |-
    python
  resource_type: |-
    airplane
  resource_type_def: |-
    class airplane(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    magnetic
  resource_type_def: |-
    class magnetic(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    docsbot_ai
  resource_type_def: |-
    class docsbot_ai(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    chatwork
  resource_type_def: |-
    class chatwork(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    coinmarketcal
  resource_type_def: |-
    class coinmarketcal(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: |-
    class aweber(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoints are prefixed with a server (e.g., 'us1', 'us2', etc.)
- lang: |-
    python
  resource_type: |-
    adobe_pdf_services
  resource_type_def: |-
    class adobe_pdf_services(TypedDict):
        api_key: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    generated_photos
  resource_type_def: |-
    class generated_photos(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    loops_so
  resource_type_def: |-
    class loops_so(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    medium
  resource_type_def: |-
    class medium(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    crimeometer
  resource_type_def: |-
    class crimeometer(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gatherup
  resource_type_def: |-
    class gatherup(TypedDict):
        api_key: str
        user_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    firmao
  resource_type_def: |-
    class firmao(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    kite_suite
  resource_type_def: |-
    class kite_suite(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authenticating with the MeisterTask API
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    endorsal
  resource_type_def: |-
    class endorsal(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cleverreach
  resource_type_def: |-
    class cleverreach(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    campaignhq
  resource_type_def: |-
    class campaignhq(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    bigml
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    netlify
  resource_type_def: |-
    class netlify(TypedDict):
        personal_access_token: str
- lang: |-
    python
  resource_type: |-
    ongage
  resource_type_def: |-
    class ongage(TypedDict):
        api_key: str
        username: str
        account_code: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        bot_prefix: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    laposta
  resource_type_def: |-
    class laposta(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ilovepdf
  resource_type_def: |-
    class ilovepdf(TypedDict):
        public_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # The Mailchimp API endpoint prefix, e.g., 'us6'
- lang: |-
    python
  resource_type: |-
    filter
  resource_type_def: |-
    class filter(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    line
  resource_type_def: |-
    class line(TypedDict):
        channel_access_token: str
        channel_secret: str
- lang: |-
    python
  resource_type: |-
    baselinker
  resource_type_def: |-
    class baselinker(TypedDict):
        token: str  # API token for authentication
- lang: |-
    python
  resource_type: |-
    cohere_platform
  resource_type_def: |-
    class cohere_platform(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mapulus
  resource_type_def: |-
    class mapulus(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        api_key: str  # Notion API key for authentication
- lang: |-
    python
  resource_type: |-
    clevertap
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    giantcampaign
  resource_type_def: |-
    class giantcampaign(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aircall
  resource_type_def: |-
    class aircall(TypedDict):
        api_id: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    discogs
  resource_type_def: |-
    class discogs(TypedDict):
        consumer_key: str
        consumer_secret: str
        oauth_token: str
        oauth_token_secret: str
- lang: |-
    python
  resource_type: |-
    linear_app
  resource_type_def: |-
    class linear_app(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gotowebinar
  resource_type_def: |-
    class gotowebinar(TypedDict):
        organizer_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        api_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoints are prefixed with a server identifier
- lang: |-
    python
  resource_type: |-
    kontent_ai
  resource_type_def: |-
    class kontent_ai(TypedDict):
        project_id: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    mixpanel
  resource_type_def: |-
    class mixpanel(TypedDict):
        api_secret: str
        token: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    helpcrunch
  resource_type_def: |-
    class helpcrunch(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    confection
  resource_type_def: |-
    class confection(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: |-
    class mixmax(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    adalo
  resource_type_def: |-
    class adalo(TypedDict):
        api_key: str
        app_id: str
- lang: |-
    python
  resource_type: |-
    docusign
  resource_type_def: |-
    class docusign(TypedDict):
        base_path: str
        access_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    firmao
  resource_type_def: |-
    class firmao(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    mailwizz
  resource_type_def: |-
    class mailwizz(TypedDict):
        api_url: str
        public_key: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    ipdata_co
  resource_type_def: |-
    class ipdata_co(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        # Add any other properties needed for authentication
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: |-
    class mixmax(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    omnivore
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    azure_openai_service
  resource_type_def: |-
    class azure_openai_service(TypedDict):
        endpoint: str
        key: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
        domain: str
- lang: |-
    python
  resource_type: |-
    generated_photos
  resource_type_def: |-
    class generated_photos(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: int
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        guild_id: int
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    frontapp
  resource_type_def: |-
    class frontapp(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_tag_manager
  resource_type_def: |-
    class google_tag_manager(TypedDict):
        account_id: str
        container_id: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    cloudtables
  resource_type_def: |-
    class cloudtables(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailersend
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_key: str
        model_id: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        credentials_json: Dict[str, Any]
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        spreadsheet_id: str
- lang: |-
    python
  resource_type: |-
    campaignhq
  resource_type_def: |-
    class campaignhq(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    kanbanize
  resource_type_def: |-
    class kanbanize(TypedDict):
        api_key: str
        board_id: int
        subdomain: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    kvdb
  resource_type_def: |-
    class kvdb(TypedDict):
        bucket: str
        token: str
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    dayschedule
  resource_type_def: |-
    class dayschedule(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    inksprout
  resource_type_def: |-
    class inksprout(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    miestro
  resource_type_def: |-
    class miestro(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    endorsal
  resource_type_def: |-
    class endorsal(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: |-
    class google_chat(TypedDict):
        service_account_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    motion
  resource_type_def: |-
    class motion(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    mercury
  resource_type_def: |-
    class mercury(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    emailoctopus
  resource_type_def: |-
    class emailoctopus(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    axonaut
  resource_type_def: |-
    class axonaut(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    click2mail2
  resource_type_def: |-
    class click2mail2(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str  # API Key for authentication with Deepgram
- lang: |-
    python
  resource_type: |-
    crimeometer
  resource_type_def: |-
    class crimeometer(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    cisco_webex
  resource_type_def: |-
    class cisco_webex(TypedDict):
        access_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        guild_id: int
- lang: |-
    python
  resource_type: |-
    getemails
  resource_type_def: |-
    class getemails(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    ahrefs
  resource_type_def: |-
    class ahrefs(TypedDict):
        access_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    chatbot
  resource_type_def: |-
    class chatbot(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    browserless
  resource_type_def: |-
    class browserless(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    lighthouse
  resource_type_def: |-
    class lighthouse(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    bigml
  resource_type_def: |-
    class bigml(TypedDict):
        username: str
        api_key: str
        project: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    judge_me
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    elevenlabs
  resource_type_def: |-
    class elevenlabs(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    justcall
  resource_type_def: |-
    class justcall(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    agendor
  resource_type_def: |-
    class agendor(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):  # Renamed to match the integration name exactly
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_palm_api
  resource_type_def: |-
    class google_palm_api(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nexweave
  resource_type_def: |-
    class nexweave(TypedDict):
        api_key: str
        api_secret: str
        campaign_id: str
- lang: |-
    python
  resource_type: |-
    ipinfo_io
  resource_type_def: |-
    class ipinfo_io(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
        access_token: str  # Assuming OAUTH2 is used and access_token is provided
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    ghost_org_admin_api
  resource_type_def: |-
    class ghost_org_admin_api(TypedDict):
        api_key: str
        admin_url: str
- lang: |-
    python
  resource_type: |-
    dealmachine
  resource_type_def: |-
    class dealmachine(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    inoreader
  resource_type_def: |-
    class inoreader(TypedDict):
        app_id: str
        app_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    amazon_ses
  resource_type_def: |-
    class amazon_ses(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    datadog
  resource_type_def: |-
    class datadog(TypedDict):
        api_key: str
        app_key: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        email: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    confection
  resource_type_def: |-
    class confection(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    flodesk
  resource_type_def: |-
    class flodesk(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailjet
  resource_type_def: |-
    class mailjet(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    dealmachine
  resource_type_def: |-
    class dealmachine(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    cisco_meraki
  resource_type_def: |-
    class cisco_meraki(TypedDict):
        api_key: str
        base_url: str  # Assuming the base URL is needed for API requests
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    cardly
  resource_type_def: |-
    class cardly(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    elevenlabs
  resource_type_def: |-
    class elevenlabs(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    insightly
  resource_type_def: |-
    class insightly(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    etsy
  resource_type_def: |-
    class etsy(TypedDict):
        api_key: str
        oauth_token: str
- lang: |-
    python
  resource_type: |-
    hookdeck
  resource_type_def: |-
    class hookdeck(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    intercom
  resource_type_def: |-
    class intercom(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    motion
  resource_type_def: |-
    class motion(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_palm_api
  resource_type_def: |-
    class google_palm_api(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ghost_org_admin_api
  resource_type_def: |-
    class ghost_org_admin_api(TypedDict):
        api_key: str
        admin_url: str
- lang: |-
    python
  resource_type: |-
    moxie
  resource_type_def: |-
    class moxie(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    intellexer_api
  resource_type_def: |-
    class intellexer_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    listmonk
  resource_type_def: |-
    class listmonk(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    metaphor
  resource_type_def: |-
    class metaphor(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: |-
    class google_chat(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    knorish
  resource_type_def: |-
    class knorish(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    expofp
  resource_type_def: |-
    class expofp(TypedDict):
        api_key: str
        event_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    hellosign
  resource_type_def: |-
    class hellosign(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str  # Bot token for authentication
- lang: |-
    python
  resource_type: |-
    mailerlite
  resource_type_def: |-
    class mailerlite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_onedrive
  resource_type_def: |-
    class microsoft_onedrive(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Assuming the helper_functions integration requires an API key for authentication
        api_key: str
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: |-
    class mysql(TypedDict):
        host: str
        user: str
        password: str
        database: str
- lang: |-
    python
  resource_type: |-
    accredible
  resource_type_def: |-
    class accredible(TypedDict):
        api_key: str  # API key for authenticating with the Accredible API
- lang: |-
    python
  resource_type: |-
    harvest
  resource_type_def: |-
    class harvest(TypedDict):
        account_id: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    ip2proxy
  resource_type_def: |-
    class ip2proxy(TypedDict):
        api_key: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    f15five
  resource_type_def: |-
    class f15five(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    netlify
  resource_type_def: |-
    class netlify(TypedDict):
        access_token: str
        site_id: str
- lang: |-
    python
  resource_type: |-
    mamo_business
  resource_type_def: |-
    class mamo_business(TypedDict):
        api_key: str
        merchant_id: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        api_key: str
        calendar_id: str
- lang: |-
    python
  resource_type: |-
    clearout
  resource_type_def: |-
    class clearout(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    kvdb
  resource_type_def: |-
    class kvdb(TypedDict):
        endpoint: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    awork
  resource_type_def: |-
    class awork(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    axonaut
  resource_type_def: |-
    class axonaut(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    echtpost_postcards
  resource_type_def: |-
    class echtpost_postcards(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str  # API token is typically required for authentication
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cisco_webex
  resource_type_def: |-
    class cisco_webex(TypedDict):
        access_token: str  # OAuth2 access token for authentication
- lang: |-
    python
  resource_type: |-
    kanbanize
  resource_type_def: |-
    class kanbanize(TypedDict):
        api_key: str
        board_id: int
        subdomain: str
- lang: |-
    python
  resource_type: |-
    businesslogic
  resource_type_def: |-
    class businesslogic(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        domain: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    mux
  resource_type_def: |-
    class mux(TypedDict):
        access_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    aftership
  resource_type_def: |-
    class aftership(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str  # Access token is required for Dropbox API authentication
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: |-
    class aweber(TypedDict):
        consumer_key: str
        consumer_secret: str
        access_token: str
        token_secret: str
- lang: |-
    python
  resource_type: |-
    clientify
  resource_type_def: |-
    class clientify(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    formstack
  resource_type_def: |-
    class formstack(TypedDict):
        api_key: str
        server_url: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    ghost_org_admin_api
  resource_type_def: |-
    class ghost_org_admin_api(TypedDict):
        api_key: str
        admin_url: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        api_secret: str
        # Add any other properties needed for authentication
- lang: |-
    python
  resource_type: |-
    microsoft_onedrive
  resource_type_def: |-
    class microsoft_onedrive(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    adobe_pdf_services
  resource_type_def: |-
    class adobe_pdf_services(TypedDict):
        api_key: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    firebase_admin_sdk
  resource_type_def: |-
    class firebase_admin_sdk(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    calendly_v2
  resource_type_def: |-
    class calendly_v2(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    imagekit_io
  resource_type_def: |-
    class imagekit_io(TypedDict):
        public_key: str
        private_key: str
        url_endpoint: str
- lang: |-
    python
  resource_type: |-
    campayn
  resource_type_def: |-
    class campayn(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token for LinkedIn API
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
        token_uri: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        access_token: str  # Digital Ocean Personal Access Token
- lang: |-
    python
  resource_type: |-
    motion
  resource_type_def: |-
    class motion(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    open_exchange_rates
  resource_type_def: |-
    class open_exchange_rates(TypedDict):
        app_id: str
- lang: |-
    python
  resource_type: |-
    callpage
  resource_type_def: |-
    class callpage(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    jumpseller
  resource_type_def: |-
    class jumpseller(TypedDict):
        api_key: str
        account_name: str
- lang: |-
    python
  resource_type: |-
    clearout
  resource_type_def: |-
    class clearout(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gmail
  resource_type_def: |-
    class gmail(TypedDict):
        email: str
        password: str
        smtp_server: str
        smtp_port: int
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str  # HubSpot API Key for authentication
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nocodb
  resource_type_def: |-
    class nocodb(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str  # Bot token for authentication
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The ByBit API endpoint URL
- lang: |-
    python
  resource_type: |-
    microsofttodo
  resource_type_def: |-
    class microsofttodo(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
- lang: |-
    python
  resource_type: |-
    clearbit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hostaway
  resource_type_def: |-
    class hostaway(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_safebrowsing
  resource_type_def: |-
    class google_safebrowsing(TypedDict):
        api_key: str
        client_id: str
        client_version: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    centralstationcrm
  resource_type_def: |-
    class centralstationcrm(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        api_key: str
        admin_email: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    onesignal_rest_api
  resource_type_def: |-
    class onesignal_rest_api(TypedDict):
        app_id: str
        rest_api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    dbt
  resource_type_def: |-
    class dbt(TypedDict):
        account_id: str
        job_id: int
        run_id: int
        api_token: str
- lang: |-
    python
  resource_type: |-
    loggly_send_data
  resource_type_def: |-
    class loggly_send_data(TypedDict):
        customer_token: str
        loggly_endpoint: str
- lang: |-
    python
  resource_type: |-
    knack
  resource_type_def: |-
    class knack(TypedDict):
        api_key: str
        application_id: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str  # OAuth2 Access Token
        page_id: str       # ID of the Facebook Page
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        bot_token: str
        guild_id: int
- lang: |-
    python
  resource_type: |-
    coinmarketcal
  resource_type_def: |-
    class coinmarketcal(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    frontapp
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    google_classroom
  resource_type_def: |-
    class google_classroom(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    airmeet
  resource_type_def: |-
    class airmeet(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    lusha
  resource_type_def: |-
    class lusha(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    coinmarketcap
  resource_type_def: |-
    class coinmarketcap(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    line
  resource_type_def: |-
    class line(TypedDict):
        channel_access_token: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    ip2location_io
  resource_type_def: |-
    class ip2location_io(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    fraudlabs_pro
  resource_type_def: |-
    class fraudlabs_pro(TypedDict):
        api_key: str  # API key for authentication with fraudlabs_pro
- lang: |-
    python
  resource_type: |-
    close
  resource_type_def: |-
    class close(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    html_css_to_image
  resource_type_def: |-
    class html_css_to_image(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
        zone_id: str
- lang: |-
    python
  resource_type: |-
    cloudtables
  resource_type_def: |-
    class cloudtables(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    box
  resource_type_def: |-
    class box(TypedDict):
        access_token: str  # OAuth2 Access Token for Box API
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    discord_webhook
  resource_type_def: |-
    class discord_webhook(TypedDict):
        webhook_url: str
- lang: |-
    python
  resource_type: |-
    askyourpdf
  resource_type_def: |-
    class askyourpdf(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    freshdesk
  resource_type_def: |-
    class freshdesk(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    esputnik
  resource_type_def: |-
    class esputnik(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: |-
    class instagram_business(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    neon_api_keys
  resource_type_def: |-
    class neon_api_keys(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    jotform
  resource_type_def: |-
    class jotform(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    customer_io
  resource_type_def: |-
    class customer_io(TypedDict):
        site_id: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    lighthouse
  resource_type_def: |-
    class lighthouse(TypedDict):
        api_token: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    astica_ai
  resource_type_def: |-
    class astica_ai(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Properties for authentication/configuration relevant to the integration
        pass
- lang: |-
    python
  resource_type: |-
    diffchecker
  resource_type_def: |-
    class diffchecker(TypedDict):
        api_key: str  # Assuming API key is needed for diffchecker integration
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str  # Bot token for authentication
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: |-
    class mixmax(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    emailable
  resource_type_def: |-
    class emailable(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    browserless
  resource_type_def: |-
    class browserless(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    amilia
  resource_type_def: |-
    class amilia(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: |-
    class http(TypedDict):
        # Properties for authentication/configuration relevant to any script
        # Example properties (these would vary based on actual authentication requirements):
        api_key: str
        auth_token: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    basecamp
  resource_type_def: |-
    class basecamp(TypedDict):
        access_token: str
        project_id: int
- lang: |-
    python
  resource_type: |-
    helloleads
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    eventbrite
  resource_type_def: |-
    class eventbrite(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    gist
  resource_type_def: |-
    class gist(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_365_planner
  resource_type_def: |-
    class microsoft_365_planner(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    azure_openai_service
  resource_type_def: |-
    class azure_openai_service(TypedDict):
        endpoint: str
        key: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    microsoft_teams
  resource_type_def: |-
    class microsoft_teams(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    companycam
  resource_type_def: |-
    class companycam(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    motion
  resource_type_def: |-
    class motion(TypedDict):
        api_key: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    cal_com
  resource_type_def: |-
    class cal_com(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        credentials_json: dict  # Service account credentials JSON
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    close
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    adroll
  resource_type_def: |-
    class adroll(TypedDict):
        api_key: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    freshdesk
  resource_type_def: |-
    class freshdesk(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    joomla
  resource_type_def: |-
    class joomla(TypedDict):
        base_url: str
        user_token: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    memberspot
  resource_type_def: |-
    class memberspot(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailerlite
  resource_type_def: |-
    class mailerlite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    magnetic
  resource_type_def: |-
    class magnetic(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    campaign_cleaner
  resource_type_def: |-
    class campaign_cleaner(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    intuiface
  resource_type_def: |-
    class intuiface(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    harvest
  resource_type_def: |-
    class harvest(TypedDict):
        account_id: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    ecwid
  resource_type_def: |-
    class ecwid(TypedDict):
        store_id: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    freshdesk
  resource_type_def: |-
    class freshdesk(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: |-
    class google_tasks(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str  # API Key for authentication with Deepgram
- lang: |-
    python
  resource_type: |-
    axonaut
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    brex
  resource_type_def: |-
    class brex(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    clientify
  resource_type_def: |-
    class clientify(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    dock_certs
  resource_type_def: |-
    class dock_certs(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    constant_contact
  resource_type_def: |-
    class constant_contact(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    facebook_groups
  resource_type_def: |-
    class facebook_groups(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    google_slides
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    fraudlabs_pro
  resource_type_def: |-
    class fraudlabs_pro(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    hellosign
  resource_type_def: |-
    class hellosign(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    missive
  resource_type_def: |-
    class missive(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    dayschedule
  resource_type_def: |-
    class dayschedule(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    dreamstudio
  resource_type_def: |-
    class dreamstudio(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: |-
    class nordigen(TypedDict):
        access_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    dext
  resource_type_def: |-
    class dext(TypedDict):
        api_key: str
        api_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    mojo_helpdesk
  resource_type_def: |-
    class mojo_helpdesk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: |-
    class devrev(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_tag_manager
  resource_type_def: |-
    class google_tag_manager(TypedDict):
        account_id: str
        container_id: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    kingsumo
  resource_type_def: |-
    class kingsumo(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    motion
  resource_type_def: |-
    class motion(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    neon_api_keys
  resource_type_def: |-
    class neon_api_keys(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cohere_platform
  resource_type_def: |-
    class cohere_platform(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bouncer
  resource_type_def: |-
    class bouncer(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication with ClickUp
- lang: |-
    python
  resource_type: |-
    google_tag_manager
  resource_type_def: |-
    class google_tag_manager(TypedDict):
        account_id: str
        container_id: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    formstack
  resource_type_def: |-
    class formstack(TypedDict):
        api_key: str
        server_url: str
- lang: |-
    python
  resource_type: |-
    facebook_groups
  resource_type_def: |-
    class facebook_groups(TypedDict):
        access_token: str
        group_id: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        email: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        rss_url: str
- lang: |-
    python
  resource_type: |-
    linear_app
  resource_type_def: |-
    class linear_app(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_teams
  resource_type_def: |-
    class microsoft_teams(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        client_email: str
        private_key: str
        admin_user: str
- lang: |-
    python
  resource_type: |-
    demio
  resource_type_def: |-
    class demio(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The ByBit API endpoint (e.g., "https://api.bybit.com")
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: |-
    class aweber(TypedDict):
        consumer_key: str
        consumer_secret: str
        access_token: str
        access_token_secret: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        access_token: str
        refresh_token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    booqable
  resource_type_def: |-
    class booqable(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str
        form_id: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        api_secret: str
        access_token: str  # Assuming OAuth2 is used and token is provided
- lang: |-
    python
  resource_type: |-
    libraria
  resource_type_def: |-
    class libraria(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoints are prefixed with a server prefix
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        private_token: str
        url: str
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: |-
    class bannerbear(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    mailwizz
  resource_type_def: |-
    class mailwizz(TypedDict):
        api_url: str
        public_key: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_name: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    airops
  resource_type_def: |-
    class airops(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    elevenlabs
  resource_type_def: |-
    class elevenlabs(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    browserless
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    adalo
  resource_type_def: |-
    class adalo(TypedDict):
        api_key: str
        app_id: str
- lang: |-
    python
  resource_type: |-
    buildkite
  resource_type_def: |-
    class buildkite(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    imgur
  resource_type_def: |-
    class imgur(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    delighted
  resource_type_def: |-
    class delighted(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # The Mailchimp server prefix, e.g., 'us6'
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
        host: str
- lang: |-
    python
  resource_type: |-
    abyssale
  resource_type_def: |-
    class abyssale(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    customer_io
  resource_type_def: |-
    class customer_io(TypedDict):
        site_id: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    microsoft_onedrive
  resource_type_def: |-
    class microsoft_onedrive(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    assemblyai
  resource_type_def: |-
    class assemblyai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    bash
  resource_type_def: |-
    class bash(TypedDict):
        # Assuming no specific credentials are needed for running bash commands
        pass
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        bot_token: str
- lang: |-
    python
  resource_type: |-
    line
  resource_type_def: |-
    class line(TypedDict):
        channel_access_token: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    akeneo
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    eventbrite
  resource_type_def: |-
    class eventbrite(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    neon_api_keys
  resource_type_def: |-
    class neon_api_keys(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    loops_so
  resource_type_def: |-
    class loops_so(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    magnetic
  resource_type_def: |-
    class magnetic(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint for ByBit
- lang: |-
    python
  resource_type: |-
    clientify
  resource_type_def: |-
    class clientify(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        email: str
        auth_token: str
- lang: |-
    python
  resource_type: |-
    convertkit
  resource_type_def: |-
    class convertkit(TypedDict):
        api_secret: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    figma
  resource_type_def: |-
    class figma(TypedDict):
        personal_access_token: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        # Add any other properties needed for authentication
- lang: |-
    python
  resource_type: |-
    ipdata_co
  resource_type_def: |-
    class ipdata_co(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    onesignal_rest_api
  resource_type_def: |-
    class onesignal_rest_api(TypedDict):
        app_id: str
        rest_api_key: str
- lang: |-
    python
  resource_type: |-
    dictionary_api
  resource_type_def: |-
    class dictionary_api(TypedDict):
        api_key: str  # API key for authentication with the dictionary_api service
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    faunadb
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    jp_funda
  resource_type_def: |-
    class jp_funda(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    asknicely
  resource_type_def: |-
    class asknicely(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    asknicely
  resource_type_def: |-
    class asknicely(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: |-
    class mysql(TypedDict):
        host: str
        user: str
        password: str
- lang: |-
    python
  resource_type: |-
    dayschedule
  resource_type_def: |-
    class dayschedule(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    airplane
  resource_type_def: |-
    class airplane(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str  # API token for authentication
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ahrefs
  resource_type_def: |-
    class ahrefs(TypedDict):
        access_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: |-
    class http(TypedDict):
        base_url: str  # Base URL for the HTTP requests
- lang: |-
    python
  resource_type: |-
    ipdata_co
  resource_type_def: |-
    class ipdata_co(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    azure_openai_service
  resource_type_def: |-
    class azure_openai_service(TypedDict):
        endpoint: str
        key: str
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
        event_id: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    hostaway
  resource_type_def: |-
    class hostaway(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    brex_staging
  resource_type_def: |-
    class brex_staging(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    instapaper
  resource_type_def: |-
    class instapaper(TypedDict):
        consumer_key: str
        consumer_secret: str
        access_token: str
        token_secret: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        api_key: str
        calendar_id: str
- lang: |-
    python
  resource_type: |-
    facebook_groups
  resource_type_def: |-
    class facebook_groups(TypedDict):
        access_token: str
        group_id: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    bulkgate
  resource_type_def: |-
    class bulkgate(TypedDict):
        application_id: str
        application_token: str
- lang: |-
    python
  resource_type: |-
    gladia
  resource_type_def: |-
    class gladia(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aftership
  resource_type_def: |-
    class aftership(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    box
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    amazon_ses
  resource_type_def: |-
    class amazon_ses(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authenticating with the MeisterTask API
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    getresponse
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    brex_staging
  resource_type_def: |-
    class brex_staging(TypedDict):
        api_key: str
        api_secret: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    copperx
  resource_type_def: |-
    class copperx(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    nocrm_io
  resource_type_def: |-
    class nocrm_io(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str  # API Key for authentication with the Deepgram API
- lang: |-
    python
  resource_type: |-
    monkeylearn
  resource_type_def: |-
    class monkeylearn(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    honeybadger
  resource_type_def: |-
    class honeybadger(TypedDict):
        api_key: str  # API key for authenticating with the Honeybadger API
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        api_key: str
        admin_email: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: |-
    class badger_maps(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    expofp
  resource_type_def: |-
    class expofp(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token for LinkedIn API
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: |-
    class badger_maps(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        refresh_token: str
        usage_point_id: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    gmail_custom_oauth
  resource_type_def: |-
    class gmail_custom_oauth(TypedDict):
        access_token: str
        refresh_token: str
        client_id: str
        client_secret: str
        token_uri: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    close
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    lettria
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    harvest
  resource_type_def: |-
    class harvest(TypedDict):
        access_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    expofp
  resource_type_def: |-
    class expofp(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    centralstationcrm
  resource_type_def: |-
    class centralstationcrm(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    jobnimbus
  resource_type_def: |-
    class jobnimbus(TypedDict):
        api_key: str
        user_email: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    kickofflabs
  resource_type_def: |-
    class kickofflabs(TypedDict):
        api_key: str
        campaign_id: int
- lang: |-
    python
  resource_type: |-
    chatwork
  resource_type_def: |-
    class chatwork(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    dbt
  resource_type_def: |-
    class dbt(TypedDict):
        account_id: str
        token: str
- lang: |-
    python
  resource_type: |-
    doppler_marketing_automation
  resource_type_def: |-
    class doppler_marketing_automation(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    microsofttodo
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bigml
  resource_type_def: |-
    class bigml(TypedDict):
        username: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    imagekit_io
  resource_type_def: |-
    class imagekit_io(TypedDict):
        public_key: str
        private_key: str
        url_endpoint: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
        table_name: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    formaloo
  resource_type_def: |-
    class formaloo(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    emailoctopus
  resource_type_def: |-
    class emailoctopus(TypedDict):
        api_key: str
        list_id: str
- lang: |-
    python
  resource_type: |-
    discord_webhook
  resource_type_def: |-
    class discord_webhook(TypedDict):
        webhook_url: str
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: |-
    class mysql(TypedDict):
        host: str
        user: str
        password: str
        database: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        # Add any other properties needed for authentication
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    daffy
  resource_type_def: |-
    class daffy(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    missive
  resource_type_def: |-
    class missive(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
        refresh_token: str
        usage_point_id: str
- lang: |-
    python
  resource_type: |-
    memberstack
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    constant_contact
  resource_type_def: |-
    class constant_contact(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    accredible
  resource_type_def: |-
    class accredible(TypedDict):
        api_key: str  # API key for the Accredible API
- lang: |-
    python
  resource_type: |-
    infinity
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    box
  resource_type_def: |-
    class box(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    eden_ai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    demio
  resource_type_def: |-
    class demio(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    go
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    brex
  resource_type_def: |-
    class brex(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    campayn
  resource_type_def: |-
    class campayn(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    jumpseller
  resource_type_def: |-
    class jumpseller(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
        board_id: str      # ID of the Miro board where the shape will be created
- lang: |-
    python
  resource_type: |-
    humor_api
  resource_type_def: |-
    class humor_api(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mongodb
  resource_type_def: |-
    class mongodb(TypedDict):
        host: str
        port: int
        username: str
        password: str
        authSource: str  # The database to authenticate against
        # Include any other properties necessary for MongoDB authentication
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    jotform
  resource_type_def: |-
    class jotform(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    campaignhq
  resource_type_def: |-
    class campaignhq(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    netlify
  resource_type_def: |-
    class netlify(TypedDict):
        api_token: str
        site_id: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        personal_access_token: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    gong
  resource_type_def: |-
    class gong(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    moxie
  resource_type_def: |-
    class moxie(TypedDict):
        client_id: str
        client_secret: str
        access_token: str  # Assuming OAUTH2 is used and this is the token obtained after the flow
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_safebrowsing
  resource_type_def: |-
    class google_safebrowsing(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    laposta
  resource_type_def: |-
    class laposta(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    botconversa
  resource_type_def: |-
    class botconversa(TypedDict):
        api_key: str
        bot_id: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: Dict[str, Any]
- lang: |-
    python
  resource_type: |-
    esputnik
  resource_type_def: |-
    class esputnik(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    getemails
  resource_type_def: |-
    class getemails(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    node
  resource_type_def: |-
    class node(TypedDict):
        node_path: str  # Path to the Node.js executable
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str  # API token is typically needed for Coda authentication
- lang: |-
    python
  resource_type: |-
    figma
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_contacts
  resource_type_def: |-
    class google_contacts(TypedDict):
        access_token: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    frontapp
  resource_type_def: |-
    class frontapp(TypedDict):
        api_key: str  # API key for authenticating with Front
- lang: |-
    python
  resource_type: |-
    digitalocean_spaces
  resource_type_def: |-
    class digitalocean_spaces(TypedDict):
        access_key_id: str
        secret_access_key: str
        region_name: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    botconversa
  resource_type_def: |-
    class botconversa(TypedDict):
        api_key: str
        bot_id: str
- lang: |-
    python
  resource_type: |-
    dock_certs
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    jobnimbus
  resource_type_def: |-
    class jobnimbus(TypedDict):
        api_key: str
        user_email: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    etsy
  resource_type_def: |-
    class etsy(TypedDict):
        api_key: str
        shared_secret: str
        oauth_token: str
        oauth_token_secret: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    askyourpdf
  resource_type_def: |-
    class askyourpdf(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    kingsumo
  resource_type_def: |-
    class kingsumo(TypedDict):
        api_key: str
        contest_id: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
        token_uri: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    ifttt
  resource_type_def: |-
    class ifttt(TypedDict):
        webhook_key: str  # The IFTTT Webhook key for authentication
- lang: |-
    python
  resource_type: |-
    getaccept
  resource_type_def: |-
    class getaccept(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    noticeable
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_excel
  resource_type_def: |-
    class microsoft_excel(TypedDict):
        file_path: str
        access_token: str  # Assuming OAuth2 is used and the token is provided
- lang: |-
    python
  resource_type: |-
    cardly
  resource_type_def: |-
    class cardly(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    microsoft_sql_server
  resource_type_def: |-
    class microsoft_sql_server(TypedDict):
        server: str
        database: str
        username: str
        password: str
        driver: str  # Example: '{ODBC Driver 17 for SQL Server}'
- lang: |-
    python
  resource_type: |-
    coinmarketcal
  resource_type_def: |-
    class coinmarketcal(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    airmeet
  resource_type_def: |-
    class airmeet(TypedDict):
        api_key: str
        event_id: str
- lang: |-
    python
  resource_type: |-
    cisco_meraki
  resource_type_def: |-
    class cisco_meraki(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        host: str
        port: int
        secure: bool  # True for 465, false for other ports
        auth: dict
        # auth should contain 'user' and 'pass' keys
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    credit_repair_cloud
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        api_secret: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    firebase_admin_sdk
  resource_type_def: |-
    class firebase_admin_sdk(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    formstack
  resource_type_def: |-
    class formstack(TypedDict):
        access_token: str  # OAuth2 access token
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    more_trees_
  resource_type_def: |-
    class more_trees_(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    linkedin_ads
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    humor_api
  resource_type_def: |-
    class humor_api(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    holded
  resource_type_def: |-
    class holded(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    dynapictures
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str  # HubSpot API Key for authentication
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    getresponse
  resource_type_def: |-
    class getresponse(TypedDict):
        api_key: str
        api_url: Optional[str]
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    klaviyo
  resource_type_def: |-
    class klaviyo(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
        token_uri: str
        admin_email: str
- lang: |-
    python
  resource_type: |-
    formaloo
  resource_type_def: |-
    class formaloo(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    facebook_groups
  resource_type_def: |-
    class facebook_groups(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    metaphor
  resource_type_def: |-
    class metaphor(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    agendor
  resource_type_def: |-
    class agendor(TypedDict):
        api_key: str
        user_email: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
- lang: |-
    python
  resource_type: |-
    discord
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    calendly_v2
  resource_type_def: |-
    class calendly_v2(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    campaignhq
  resource_type_def: |-
    class campaignhq(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    eventbrite
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    companycam
  resource_type_def: |-
    class companycam(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: |-
    class instagram_business(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: |-
    class mixmax(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    insightly
  resource_type_def: |-
    class insightly(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        api_base_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    liveagent
  resource_type_def: |-
    class liveagent(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    hive
  resource_type_def: |-
    class hive(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
        user_token: str
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: |-
    class http(TypedDict):
        secret_key: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    jw_player
  resource_type_def: |-
    class jw_player(TypedDict):
        api_secret: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook_calendar
  resource_type_def: |-
    class microsoft_outlook_calendar(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    loop_returns
  resource_type_def: |-
    class loop_returns(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    coinbase
  resource_type_def: |-
    class coinbase(TypedDict):
        api_key: str
        api_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    giphy
  resource_type_def: |-
    class giphy(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nocrm_io
  resource_type_def: |-
    class nocrm_io(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gorillastack
  resource_type_def: |-
    class gorillastack(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    dreamstudio
  resource_type_def: |-
    class dreamstudio(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    docsbot_ai
  resource_type_def: |-
    class docsbot_ai(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # The Mailchimp API endpoint prefix, e.g., 'us6'
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    docsbot_ai
  resource_type_def: |-
    class docsbot_ai(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    intuiface
  resource_type_def: |-
    class intuiface(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    convenia
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    bouncer
  resource_type_def: |-
    class bouncer(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    moosend
  resource_type_def: |-
    class moosend(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: |-
    class aweber(TypedDict):
        access_token: str
        refresh_token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    harvest
  resource_type_def: |-
    class harvest(TypedDict):
        account_id: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    flodesk
  resource_type_def: |-
    class flodesk(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        domain: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        session_id: str
        language_code: str
        credentials: Dict[str, Any]
- lang: |-
    python
  resource_type: |-
    microsoft_365_planner
  resource_type_def: |-
    class microsoft_365_planner(TypedDict):
        client_id: str
        tenant_id: str
        client_secret: str
        access_token: str  # Assuming OAUTH2 credentials are included
- lang: |-
    python
  resource_type: |-
    frontapp
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    filter
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    mailersend
  resource_type_def: |-
    class mailersend(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_token: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    mongodb
  resource_type_def: |-
    class mongodb(TypedDict):
        uri: str
        database_name: str
        collection_name: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    loop_returns
  resource_type_def: |-
    class loop_returns(TypedDict):
        api_key: str
        merchant_id: str
- lang: |-
    python
  resource_type: |-
    firebase_admin_sdk
  resource_type_def: |-
    class firebase_admin_sdk(TypedDict):
        databaseURL: str
        credential: credentials.Certificate
- lang: |-
    python
  resource_type: |-
    miestro
  resource_type_def: |-
    class miestro(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    eden_ai
  resource_type_def: |-
    class eden_ai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    acelle_mail
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str  # Assuming the OAuth2 token is already obtained and provided
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    firebase_admin_sdk
  resource_type_def: |-
    class firebase_admin_sdk(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    gigasheet
  resource_type_def: |-
    class gigasheet(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    getresponse
  resource_type_def: |-
    class getresponse(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key_id: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    doppler_marketing_automation
  resource_type_def: |-
    class doppler_marketing_automation(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    full_contact
  resource_type_def: |-
    class full_contact(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    getresponse
  resource_type_def: |-
    class getresponse(TypedDict):
        api_key: str
        api_url: str  # Assuming the API URL is needed for configuration
- lang: |-
    python
  resource_type: |-
    mem
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    feedbin
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    automatic_data_extraction
  resource_type_def: |-
    class automatic_data_extraction(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    holded
  resource_type_def: |-
    class holded(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    databricks
  resource_type_def: |-
    class databricks(TypedDict):
        host: str
        token: str
- lang: |-
    python
  resource_type: |-
    askyourpdf
  resource_type_def: |-
    class askyourpdf(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    gmail_custom_oauth
  resource_type_def: |-
    class gmail_custom_oauth(TypedDict):
        access_token: str  # OAuth2 Access Token
        refresh_token: str  # OAuth2 Refresh Token
        client_id: str  # OAuth2 Client ID
        client_secret: str  # OAuth2 Client Secret
        token_uri: str  # OAuth2 Token URI
- lang: |-
    python
  resource_type: |-
    customer_fields
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    cloudinary
  resource_type_def: |-
    class cloudinary(TypedDict):
        cloud_name: str
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    gryd
  resource_type_def: |-
    class gryd(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    d7_networks
  resource_type_def: |-
    class d7_networks(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    codeq_natural_language_processing_api
  resource_type_def: |-
    class codeq_natural_language_processing_api(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    constant_contact
  resource_type_def: |-
    class constant_contact(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: |-
    class google_chat(TypedDict):
        webhook_url: str  # The webhook URL is needed to send messages to Google Chat
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    goody
  resource_type_def: |-
    class goody(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    booqable
  resource_type_def: |-
    class booqable(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        credentials: Any  # Assuming credentials is a google.auth.credentials.Credentials object
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    codereadr
  resource_type_def: |-
    class codereadr(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    gorgias_oauth
  resource_type_def: |-
    class gorgias_oauth(TypedDict):
        access_token: str  # Assuming OAuth2 access token is required for authentication
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str  # OAuth2 access token for GitHub
- lang: |-
    python
  resource_type: |-
    beanstalkapp
  resource_type_def: |-
    class beanstalkapp(TypedDict):
        account_name: str
        username: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    acelle_mail
  resource_type_def: |-
    class acelle_mail(TypedDict):
        api_url: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    nudgify
  resource_type_def: |-
    class nudgify(TypedDict):
        api_key: str
        site_id: str
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_name: str
- lang: |-
    python
  resource_type: |-
    cleverreach
  resource_type_def: |-
    class cleverreach(TypedDict):
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    getresponse
  resource_type_def: |-
    class getresponse(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        client_email: str
        private_key: str
        private_key_id: str
        client_id: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    microsoft_entra_id
  resource_type_def: |-
    class microsoft_entra_id(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    nethunt_crm
  resource_type_def: |-
    class nethunt_crm(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    kanbanize
  resource_type_def: |-
    class kanbanize(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    businesslogic
  resource_type_def: |-
    class businesslogic(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    microsofttodo
  resource_type_def: |-
    class microsofttodo(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
        access_token: str  # Assuming OAuth2 flow has been completed and access token is available
- lang: |-
    python
  resource_type: |-
    memberspot
  resource_type_def: |-
    class memberspot(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    discogs
  resource_type_def: |-
    class discogs(TypedDict):
        consumer_key: str
        consumer_secret: str
        token: str
        token_secret: str
- lang: |-
    python
  resource_type: |-
    lusha
  resource_type_def: |-
    class lusha(TypedDict):
        api_key: str  # API key for authenticating with the lusha API
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    awork
  resource_type_def: |-
    class awork(TypedDict):
        api_key: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    campayn
  resource_type_def: |-
    class campayn(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_tag_manager
  resource_type_def: |-
    class google_tag_manager(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    mailerlite
  resource_type_def: |-
    class mailerlite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    goody
  resource_type_def: |-
    class goody(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    laposta
  resource_type_def: |-
    class laposta(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    kite_suite
  resource_type_def: |-
    class kite_suite(TypedDict):
        api_key: str
        api_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    databricks
  resource_type_def: |-
    class databricks(TypedDict):
        domain: str
        token: str
- lang: |-
    python
  resource_type: |-
    diffchecker
  resource_type_def: |-
    class diffchecker(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ably
  resource_type_def: |-
    class ably(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    http
  resource_type_def: |-
    class http(TypedDict):
        base_url: str
        headers: dict
- lang: |-
    python
  resource_type: |-
    ftrack
  resource_type_def: |-
    class ftrack(TypedDict):
        api_key: str
        user_name: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: |-
    class devrev(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    imagekit_io
  resource_type_def: |-
    class imagekit_io(TypedDict):
        public_key: str
        private_key: str
        url_endpoint: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    mailerlite
  resource_type_def: |-
    class mailerlite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gigasheet
  resource_type_def: |-
    class gigasheet(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    maintainx
  resource_type_def: |-
    class maintainx(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    linear_app
  resource_type_def: |-
    class linear_app(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str  # API key for authentication with the Deepgram service
- lang: |-
    python
  resource_type: |-
    noticeable
  resource_type_def: |-
    class noticeable(TypedDict):
        api_key: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    dock_certs
  resource_type_def: |-
    class dock_certs(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    generated_photos
  resource_type_def: |-
    class generated_photos(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    digitalocean_spaces
  resource_type_def: |-
    class digitalocean_spaces(TypedDict):
        access_key_id: str
        secret_access_key: str
        region_name: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        spreadsheet_id: str
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: |-
    class devrev(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided for authentication
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    eodhd_apis
  resource_type_def: |-
    class eodhd_apis(TypedDict):
        api_token: str  # API token is typically required for authentication
- lang: |-
    python
  resource_type: |-
    click2mail2
  resource_type_def: |-
    class click2mail2(TypedDict):
        api_key: str
        api_url: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    gotowebinar
  resource_type_def: |-
    class gotowebinar(TypedDict):
        organizer_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    abyssale
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    nocodb
  resource_type_def: |-
    class nocodb(TypedDict):
        api_key: str
        base_url: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    coinmarketcap
  resource_type_def: |-
    class coinmarketcap(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    new_relic
  resource_type_def: |-
    class new_relic(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_tag_manager
  resource_type_def: |-
    class google_tag_manager(TypedDict):
        account_id: str
        container_id: str
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str  # OAuth2 access token
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    big_data_cloud
  resource_type_def: |-
    class big_data_cloud(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    intercom
  resource_type_def: |-
    class intercom(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: |-
    class nordigen(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    doppler_marketing_automation
  resource_type_def: |-
    class doppler_marketing_automation(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    formstack_documents
  resource_type_def: |-
    class formstack_documents(TypedDict):
        api_key: str
        template_id: str
- lang: |-
    python
  resource_type: |-
    mongodb
  resource_type_def: |-
    class mongodb(TypedDict):
        host: str
        port: int
        username: str
        password: str
        authSource: str
        database: str
- lang: |-
    python
  resource_type: |-
    eden_ai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    data_police_uk
  resource_type_def: |-
    class data_police_uk(TypedDict):
        api_key: str  # Assuming an API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    noticeable
  resource_type_def: |-
    class noticeable(TypedDict):
        api_key: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    mailmodo
  resource_type_def: |-
    class mailmodo(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    docsumo
  resource_type_def: |-
    class docsumo(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    formstack_documents
  resource_type_def: |-
    class formstack_documents(TypedDict):
        api_key: str
        template_id: str
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: |-
    class clerk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    aftership
  resource_type_def: |-
    class aftership(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cliniko
  resource_type_def: |-
    class cliniko(TypedDict):
        api_key: str  # API key for Cliniko authentication
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: |-
    class nordigen(TypedDict):
        access_token: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    ecwid
  resource_type_def: |-
    class ecwid(TypedDict):
        store_id: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_contacts
  resource_type_def: |-
    class google_contacts(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    clinchpad
  resource_type_def: |-
    class clinchpad(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        service_account_info: dict
        admin_user_email: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    faunadb
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    big_data_cloud
  resource_type_def: |-
    class big_data_cloud(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    onenote
  resource_type_def: |-
    class onenote(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    missive
  resource_type_def: |-
    class missive(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    codereadr
  resource_type_def: |-
    class codereadr(TypedDict):
        api_key: str  # API key for authenticating with the CodeReadr API
- lang: |-
    python
  resource_type: |-
    getaccept
  resource_type_def: |-
    class getaccept(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    agendor
  resource_type_def: |-
    class agendor(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    getaccept
  resource_type_def: |-
    class getaccept(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    cal_com
  resource_type_def: |-
    class cal_com(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # e.g., 'https://api.bybit.com'
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    hugging_face
  resource_type_def: |-
    class hugging_face(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    elevenlabs
  resource_type_def: |-
    class elevenlabs(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    basecamp
  resource_type_def: |-
    class basecamp(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    onenote
  resource_type_def: |-
    class onenote(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    endorsal
  resource_type_def: |-
    class endorsal(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    esignatures_io
  resource_type_def: |-
    class esignatures_io(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    digitalocean_spaces
  resource_type_def: |-
    class digitalocean_spaces(TypedDict):
        access_key_id: str
        secret_access_key: str
        region_name: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    ip2location
  resource_type_def: |-
    class ip2location(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mailgun
  resource_type_def: |-
    class mailgun(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    airplane
  resource_type_def: |-
    class airplane(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    html_css_to_image
  resource_type_def: |-
    class html_css_to_image(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    mailjet
  resource_type_def: |-
    class mailjet(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    more_trees_
  resource_type_def: |-
    class more_trees_(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    humor_api
  resource_type_def: |-
    class humor_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gong
  resource_type_def: |-
    class gong(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: |-
    class mixmax(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    convertkit
  resource_type_def: |-
    class convertkit(TypedDict):
        api_secret: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    blogger
  resource_type_def: |-
    class blogger(TypedDict):
        api_key: str
        blog_id: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    accelo
  resource_type_def: |-
    class accelo(TypedDict):
        access_token: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    customer_io
  resource_type_def: |-
    class customer_io(TypedDict):
        site_id: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    leap
  resource_type_def: |-
    class leap(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    one_ai
  resource_type_def: |-
    class one_ai(TypedDict):
        api_key: str  # API key for authentication with one_ai
- lang: |-
    python
  resource_type: |-
    algomo
  resource_type_def: |-
    class algomo(TypedDict):
        api_key: str
        bot_id: str
- lang: |-
    python
  resource_type: |-
    mocean_api
  resource_type_def: |-
    class mocean_api(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook_calendar
  resource_type_def: |-
    class microsoft_outlook_calendar(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        api_key: str
        spreadsheet_id: str
- lang: |-
    python
  resource_type: |-
    craftmypdf
  resource_type_def: |-
    class craftmypdf(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    leadfeeder
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    jp_funda
  resource_type_def: |-
    class jp_funda(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: |-
    class data_stores(TypedDict):
        api_key: str
        store_url: str
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    mocean_api
  resource_type_def: |-
    class mocean_api(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    beanstalkapp
  resource_type_def: |-
    class beanstalkapp(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        access_token: str
        database_id: str
- lang: |-
    python
  resource_type: |-
    botconversa
  resource_type_def: |-
    class botconversa(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    baselinker
  resource_type_def: |-
    class baselinker(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    modeck
  resource_type_def: |-
    class modeck(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    kanban_tool
  resource_type_def: |-
    class kanban_tool(TypedDict):
        api_key: str
        board_id: str
        workspace_id: str
- lang: |-
    python
  resource_type: |-
    dext
  resource_type_def: |-
    class dext(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    hookdeck
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    memberstack
  resource_type_def: |-
    class memberstack(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # OAuth2 Access Token
        board_id: str      # ID of the Miro board
- lang: |-
    python
  resource_type: |-
    data_stores
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    eventbrite
  resource_type_def: |-
    class eventbrite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    magnetic
  resource_type_def: |-
    class magnetic(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    echtpost_postcards
  resource_type_def: |-
    class echtpost_postcards(TypedDict):
        api_key: str
        user_id: str
- lang: |-
    python
  resource_type: |-
    bloom_growth
  resource_type_def: |-
    class bloom_growth(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    listmonk
  resource_type_def: |-
    class listmonk(TypedDict):
        api_endpoint: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Assuming this TypedDict should contain only authentication/configuration properties
        # that are common to all scripts using the helper_functions integration.
        # Specific properties like 'webhook_url' and 'auth_token' should be function parameters instead.
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: |-
    class bannerbear(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    hyros
  resource_type_def: |-
    class hyros(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    kite_suite
  resource_type_def: |-
    class kite_suite(TypedDict):
        api_key: str
        api_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_contacts
  resource_type_def: |-
    class google_contacts(TypedDict):
        access_token: str
        refresh_token: str
        token_expiry: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    livestorm
  resource_type_def: |-
    class livestorm(TypedDict):
        api_key: str
        host: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    devrev
  resource_type_def: |-
    class devrev(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    lightspeed_vt
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    blogger
  resource_type_def: |-
    class blogger(TypedDict):
        api_key: str
        blog_id: str
- lang: |-
    python
  resource_type: |-
    mysql
  resource_type_def: |-
    class mysql(TypedDict):
        host: str
        user: str
        password: str
        database: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    cloudinary
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        guild_id: int
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    convertkit
  resource_type_def: |-
    class convertkit(TypedDict):
        api_secret: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str  # Bot token for authentication
- lang: |-
    python
  resource_type: |-
    h_supertools_analytics_tool
  resource_type_def: |-
    class h_supertools_analytics_tool(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    iauditor_by_safetyculture
  resource_type_def: |-
    class iauditor_by_safetyculture(TypedDict):
        api_token: str
- lang: |-
    python
  resource_type: |-
    monkeylearn
  resource_type_def: |-
    class monkeylearn(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    giantcampaign
  resource_type_def: |-
    class giantcampaign(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aweber
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    kickofflabs
  resource_type_def: |-
    class kickofflabs(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    airtable
  resource_type_def: |-
    class airtable(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    intellexer_api
  resource_type_def: |-
    class intellexer_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    imgbb
  resource_type_def: |-
    class imgbb(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    frontapp
  resource_type_def: |-
    class frontapp(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    cisco_meraki
  resource_type_def: |-
    class cisco_meraki(TypedDict):
        api_key: str
        base_url: str  # Assuming the base URL is needed for the API calls
- lang: |-
    python
  resource_type: |-
    astica_ai
  resource_type_def: |-
    class astica_ai(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    google_slides
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    ipbase
  resource_type_def: |-
    class ipbase(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    algolia
  resource_type_def: |-
    class algolia(TypedDict):
        application_id: str
        admin_api_key: str
        search_only_api_key: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        bot_token: str
        client_id: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    hookdeck
  resource_type_def: |-
    class hookdeck(TypedDict):
        access_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    intellexer_api
  resource_type_def: |-
    class intellexer_api(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str
        team: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    delay
  resource_type_def: |-
    class delay(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    clearbit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The ByBit API endpoint URL
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    listmonk
  resource_type_def: |-
    class listmonk(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_365_people
  resource_type_def: |-
    class microsoft_365_people(TypedDict):
        client_id: str
        tenant_id: str
        client_secret: str
        access_token: str  # Assuming OAUTH2 credentials are included
- lang: |-
    python
  resource_type: |-
    databox
  resource_type_def: |-
    class databox(TypedDict):
        token: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    credit_repair_cloud
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    firebase_admin_sdk
  resource_type_def: |-
    class firebase_admin_sdk(TypedDict):
        type: str
        project_id: str
        private_key_id: str
        private_key: str
        client_email: str
        client_id: str
        auth_uri: str
        token_uri: str
        auth_provider_x509_cert_url: str
        client_x509_cert_url: str
- lang: |-
    python
  resource_type: |-
    accelo
  resource_type_def: |-
    class accelo(TypedDict):
        access_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    calendly_v2
  resource_type_def: |-
    class calendly_v2(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    megaventory
  resource_type_def: |-
    class megaventory(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    ftrack
  resource_type_def: |-
    class ftrack(TypedDict):
        server_url: str
        api_key: str
        api_user: str
- lang: |-
    python
  resource_type: |-
    campaign_cleaner
  resource_type_def: |-
    class campaign_cleaner(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        email: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    holded
  resource_type_def: |-
    class holded(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token for LinkedIn API
- lang: |-
    python
  resource_type: |-
    algolia
  resource_type_def: |-
    class algolia(TypedDict):
        application_id: str
        admin_api_key: str
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: |-
    class badger_maps(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_analytics
  resource_type_def: |-
    class google_analytics(TypedDict):
        client_id: str
        client_secret: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    asknicely
  resource_type_def: |-
    class asknicely(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    cohere_platform
  resource_type_def: |-
    class cohere_platform(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    chatbot
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    brex
  resource_type_def: |-
    class brex(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    google_calendar
  resource_type_def: |-
    class google_calendar(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    codereadr
  resource_type_def: |-
    class codereadr(TypedDict):
        api_key: str  # API key for authentication with the codereadr service
- lang: |-
    python
  resource_type: |-
    bigmailer
  resource_type_def: |-
    class bigmailer(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    drip
  resource_type_def: |-
    class drip(TypedDict):
        api_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    freshdesk
  resource_type_def: |-
    class freshdesk(TypedDict):
        api_key: str
        domain: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication with the Amara API
- lang: |-
    python
  resource_type: |-
    bandwidth
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    line
  resource_type_def: |-
    class line(TypedDict):
        channel_access_token: str
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    magnetic
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    alpaca
  resource_type_def: |-
    class alpaca(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    geodb_cities
  resource_type_def: |-
    class geodb_cities(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gist
  resource_type_def: |-
    class gist(TypedDict):
        access_token: str  # Assuming OAuth2 access token is used for gist API
- lang: |-
    python
  resource_type: |-
    email
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str  # OAuth2 access token for GitHub API
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    omnivore
  resource_type_def: |-
    class omnivore(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    azure_sql
  resource_type_def: |-
    class azure_sql(TypedDict):
        server: str
        database: str
        username: str
        password: str
        driver: str  # Typically '{ODBC Driver 17 for SQL Server}'
- lang: |-
    python
  resource_type: |-
    clearbit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    ftrack
  resource_type_def: |-
    class ftrack(TypedDict):
        api_key: str
        api_user: str
        server_url: str
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    google_directory
  resource_type_def: |-
    class google_directory(TypedDict):
        api_key: str
        admin_email: str
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: |-
    class instagram_business(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    infinity
  resource_type_def: |-
    class infinity(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bloom_growth
  resource_type_def: |-
    class bloom_growth(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    metatext_ai_pre_build_ai_models_api
  resource_type_def: |-
    class metatext_ai_pre_build_ai_models_api(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    loopmessage
  resource_type_def: |-
    class loopmessage(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    data_police_uk
  resource_type_def: |-
    class data_police_uk(TypedDict):
        api_key: str  # Assuming an API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    cloudinary
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_tasks
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authenticating with the MeisterTask API
- lang: |-
    python
  resource_type: |-
    docusign_developer
  resource_type_def: |-
    class docusign_developer(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    apollo_io
  resource_type_def: |-
    class apollo_io(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    kucoin_futures
  resource_type_def: |-
    class kucoin_futures(TypedDict):
        api_key: str
        api_secret: str
        passphrase: str
        endpoint: str  # Base URL for the Kucoin Futures API
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    open_exchange_rates
  resource_type_def: |-
    class open_exchange_rates(TypedDict):
        app_id: str  # API key for open_exchange_rates
- lang: |-
    python
  resource_type: |-
    jibble
  resource_type_def: |-
    class jibble(TypedDict):
        api_key: str
        user_id: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    jibble
  resource_type_def: |-
    class jibble(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    dreamstudio
  resource_type_def: |-
    class dreamstudio(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    amazon_ses
  resource_type_def: |-
    class amazon_ses(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    codeq_natural_language_processing_api
  resource_type_def: |-
    class codeq_natural_language_processing_api(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        passphrase: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: |-
    class google_chat(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    gorgias_oauth
  resource_type_def: |-
    class gorgias_oauth(TypedDict):
        access_token: str
        domain: str
- lang: |-
    python
  resource_type: |-
    gmail_custom_oauth
  resource_type_def: |-
    class gmail_custom_oauth(TypedDict):
        client_id: str
        client_secret: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    f15five
  resource_type_def: |-
    class f15five(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    loops_so
  resource_type_def: |-
    class loops_so(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    monkeylearn
  resource_type_def: |-
    class monkeylearn(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mastodon
  resource_type_def: |-
    class mastodon(TypedDict):
        access_token: str
        api_base_url: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    mailerlite
  resource_type_def: |-
    class mailerlite(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_teams
  resource_type_def: |-
    class microsoft_teams(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    gist
  resource_type_def: |-
    class gist(TypedDict):
        access_token: str  # Assuming OAuth2 access token is used for gist integration
- lang: |-
    python
  resource_type: |-
    judge_me
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    helpcrunch
  resource_type_def: |-
    class helpcrunch(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    moxie
  resource_type_def: |-
    class moxie(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    calendly_v2
  resource_type_def: |-
    class calendly_v2(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str  # Assuming API Key authentication for simplicity
- lang: |-
    python
  resource_type: |-
    google_docs
  resource_type_def: |-
    class google_docs(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    linkedin_ads
  resource_type_def: |-
    class linkedin_ads(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    bitly
  resource_type_def: |-
    class bitly(TypedDict):
        access_token: str
        group_guid: str
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: |-
    class bitbucket(TypedDict):
        client_id: str
        client_secret: str
        access_token: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Properties needed for authentication/configuration relevant to any script
        pass
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    google_drive
  resource_type_def: |-
    class google_drive(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    metaphor
  resource_type_def: |-
    class metaphor(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: |-
    class aws(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    notion
  resource_type_def: |-
    class notion(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nango
  resource_type_def: |-
    class nango(TypedDict):
        api_key: str
        api_secret: str
        access_token: str  # Assuming OAUTH2 is used and this is the token obtained after the flow
- lang: |-
    python
  resource_type: |-
    cloudtables
  resource_type_def: |-
    class cloudtables(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cloudinary
  resource_type_def: |-
    class cloudinary(TypedDict):
        cloud_name: str
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    digital_ocean
  resource_type_def: |-
    class digital_ocean(TypedDict):
        access_token: str  # Digital Ocean Personal Access Token
- lang: |-
    python
  resource_type: |-
    eodhd_apis
  resource_type_def: |-
    class eodhd_apis(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
        # Add any other properties needed for authentication
- lang: |-
    python
  resource_type: |-
    aero_workflow
  resource_type_def: |-
    class aero_workflow(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_forms
  resource_type_def: |-
    class google_forms(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord_webhook
  resource_type_def: |-
    class discord_webhook(TypedDict):
        webhook_url: str
- lang: |-
    python
  resource_type: |-
    jira_service_desk
  resource_type_def: |-
    class jira_service_desk(TypedDict):
        api_token: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    ably
  resource_type_def: |-
    class ably(TypedDict):
        api_key: str  # Ably API key
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    hive
  resource_type_def: |-
    class hive(TypedDict):
        api_key: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    f15five
  resource_type_def: |-
    class f15five(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    netlify
  resource_type_def: |-
    class netlify(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    moneybird
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    demio
  resource_type_def: |-
    class demio(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    klaxoon
  resource_type_def: |-
    class klaxoon(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    beanstalkapp
  resource_type_def: |-
    class beanstalkapp(TypedDict):
        api_url: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    chartmogul
  resource_type_def: |-
    class chartmogul(TypedDict):
        account_token: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    craftmypdf
  resource_type_def: |-
    class craftmypdf(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    meistertask
  resource_type_def: |-
    class meistertask(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    accelo
  resource_type_def: |-
    class accelo(TypedDict):
        access_token: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    gitlab
  resource_type_def: |-
    class gitlab(TypedDict):
        api_url: str
        private_token: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        api_secret: str
        access_token: str  # Assuming OAUTH2 is used and this is the token obtained after the flow
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    nexweave
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    microsoft_teams
  resource_type_def: |-
    class microsoft_teams(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        # Assuming the helper_functions integration requires an API key for authentication
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoints are prefixed with a server identifier
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    megaventory
  resource_type_def: |-
    class megaventory(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    monday
  resource_type_def: |-
    class monday(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cohere_platform
  resource_type_def: |-
    class cohere_platform(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    faunadb
  resource_type_def: |-
    class faunadb(TypedDict):
        secret: str  # API secret for authentication
        endpoint: str  # GraphQL endpoint URL
- lang: |-
    python
  resource_type: |-
    fibery
  resource_type_def: |-
    class fibery(TypedDict):
        api_token: str
        workspace_name: str
- lang: |-
    python
  resource_type: |-
    amazon_ses
  resource_type_def: |-
    class amazon_ses(TypedDict):
        aws_access_key_id: str
        aws_secret_access_key: str
        region_name: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        email: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    bigmailer
  resource_type_def: |-
    class bigmailer(TypedDict):
        api_key: str
        api_secret: str
        sender_email: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
        table_name: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    axonaut
  resource_type_def: |-
    class axonaut(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_photos
  resource_type_def: |-
    class google_photos(TypedDict):
        api_key: str
        access_token: str
- lang: |-
    python
  resource_type: |-
    google_slides
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    brex
  resource_type_def: |-
    class brex(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    nationbuilder
  resource_type_def: |-
    class nationbuilder(TypedDict):
        api_key: str
        nation_slug: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    formstack_documents
  resource_type_def: |-
    class formstack_documents(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    ip2whois
  resource_type_def: |-
    class ip2whois(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    github
  resource_type_def: |-
    class github(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    ipbase
  resource_type_def: |-
    class ipbase(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_outlook_calendar
  resource_type_def: |-
    class microsoft_outlook_calendar(TypedDict):
        client_id: str
        client_secret: str
        tenant_id: str
        access_token: str  # Assuming OAUTH2 credentials are included
- lang: |-
    python
  resource_type: |-
    copperx
  resource_type_def: |-
    class copperx(TypedDict):
        api_key: str
        email: str
        environment: str  # e.g., 'production' or 'sandbox'
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    microsoft_outlook
  resource_type_def: |-
    class microsoft_outlook(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    craftmypdf
  resource_type_def: |-
    class craftmypdf(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    brex_staging
  resource_type_def: |-
    class brex_staging(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_contacts
  resource_type_def: |-
    class google_contacts(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    libraria
  resource_type_def: |-
    class libraria(TypedDict):
        api_key: str
        endpoint_url: str
- lang: |-
    python
  resource_type: |-
    flutterwave
  resource_type_def: |-
    class flutterwave(TypedDict):
        public_key: str
        secret_key: str
        encryption_key: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    linkedin
  resource_type_def: |-
    class linkedin(TypedDict):
        access_token: str  # OAuth2 Access Token for LinkedIn API
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: |-
    class mautic(TypedDict):
        base_url: str
        username: str
        password: str
- lang: |-
    python
  resource_type: |-
    ifttt
  resource_type_def: |-
    class ifttt(TypedDict):
        api_key: str  # IFTTT Webhooks service API key
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    amplitude
  resource_type_def: |-
    class amplitude(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    crimeometer
  resource_type_def: |-
    class crimeometer(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    freshdesk
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    discord_bot
  resource_type_def: |-
    class discord_bot(TypedDict):
        token: str
        client_id: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    amara
  resource_type_def: |-
    class amara(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    mongodb
  resource_type_def: |-
    class mongodb(TypedDict):
        host: str
        port: int
        username: str
        password: str
        authSource: str
- lang: |-
    python
  resource_type: |-
    mojo_helpdesk
  resource_type_def: |-
    class mojo_helpdesk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    discourse
  resource_type_def: |-
    class discourse(TypedDict):
        api_key: str
        api_username: str
        forum_url: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str  # Mailchimp API endpoint is determined by the server prefix
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    crove_app
  resource_type_def: |-
    class crove_app(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str  # OAuth2 Access Token for the Facebook Page
- lang: |-
    python
  resource_type: |-
    google_dialogflow
  resource_type_def: |-
    class google_dialogflow(TypedDict):
        project_id: str
        client_email: str
        private_key: str
- lang: |-
    python
  resource_type: |-
    calendly_v2
  resource_type_def: |-
    class calendly_v2(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    memberstack
  resource_type_def: |-
    class memberstack(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        pass
- lang: |-
    python
  resource_type: |-
    cardly
  resource_type_def: |-
    class cardly(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    leap
  resource_type_def: |-
    class leap(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    justcall
  resource_type_def: |-
    class justcall(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    linear_app
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: |-
    class mailchimp(TypedDict):
        api_key: str
        server_prefix: str
- lang: |-
    python
  resource_type: |-
    maintainx
  resource_type_def: |-
    class maintainx(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    credit_repair_cloud
  resource_type_def: |-
    class credit_repair_cloud(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    loops_so
  resource_type_def: |-
    class loops_so(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    emailable
  resource_type_def: |-
    class emailable(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    eventbrite
  resource_type_def: |-
    class eventbrite(TypedDict):
        api_key: str
        organizer_id: str
- lang: |-
    python
  resource_type: |-
    cal_com
  resource_type_def: |-
    class cal_com(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    esputnik
  resource_type_def: |-
    class esputnik(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    leap
  resource_type_def: |-
    class leap(TypedDict):
        api_key: str
        api_secret: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    google_cloud
  resource_type_def: |-
    class google_cloud(TypedDict):
        project_id: str
        credentials: dict  # This should be a dictionary representing the Google credentials
- lang: |-
    python
  resource_type: |-
    onedesk
  resource_type_def: |-
    class onedesk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    one_ai
  resource_type_def: |-
    class one_ai(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    bannerbear
  resource_type_def: |-
    class bannerbear(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    astica_ai
  resource_type_def: |-
    class astica_ai(TypedDict):
        api_key: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    dbt
  resource_type_def: |-
    class dbt(TypedDict):
        api_token: str
        account_id: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    moneybird
  resource_type_def: |-
    class moneybird(TypedDict):
        api_token: str
        administration_id: str
- lang: |-
    python
  resource_type: |-
    close
  resource_type_def: |-
    class close(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    listclean
  resource_type_def: |-
    class listclean(TypedDict):
        api_key: str  # Assuming API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    asana
  resource_type_def: |-
    class asana(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    mapulus
  resource_type_def: |-
    class mapulus(TypedDict):
        api_key: str  # API key for authentication with the mapulus service
- lang: |-
    python
  resource_type: |-
    clerk
  resource_type_def: |-
    class clerk(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    instagram_business
  resource_type_def: |-
    class instagram_business(TypedDict):
        access_token: str
        page_id: str
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str
        client_id: str
        refresh_token: str
- lang: |-
    python
  resource_type: |-
    kickbox
  resource_type_def: |-
    class kickbox(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    klazify
  resource_type_def: |-
    class klazify(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    deepgram
  resource_type_def: |-
    class deepgram(TypedDict):
        api_key: str  # API Key for authentication with Deepgram
- lang: |-
    python
  resource_type: |-
    hubspot
  resource_type_def: |-
    class hubspot(TypedDict):
        api_key: str  # HubSpot API key for authentication
- lang: |-
    python
  resource_type: |-
    assemblyai
  resource_type_def: |-
    class assemblyai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str  # OAuth2 Access Token
- lang: |-
    python
  resource_type: |-
    bitbucket
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    helper_functions
  resource_type_def: |-
    class helper_functions(TypedDict):
        rss_feed_url: str
- lang: |-
    python
  resource_type: |-
    google_contacts
  resource_type_def: |-
    class google_contacts(TypedDict):
        access_token: str
- lang: |-
    python
  resource_type: |-
    memberstack
  resource_type_def: |-
    class memberstack(TypedDict):
        api_key: str
        subdomain: str
- lang: |-
    python
  resource_type: |-
    airtable_oauth
  resource_type_def: |-
    class airtable_oauth(TypedDict):
        api_key: str
        base_id: str
- lang: |-
    python
  resource_type: |-
    nocodb
  resource_type_def: |-
    class nocodb(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    craftmypdf
  resource_type_def: |-
    class craftmypdf(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    jotform
  resource_type_def: |-
    class jotform(TypedDict):
        api_key: str  # API Key for authentication
- lang: |-
    python
  resource_type: |-
    dropbox
  resource_type_def: |-
    class dropbox(TypedDict):
        access_token: str  # OAuth2 access token
- lang: |-
    python
  resource_type: |-
    enedis
  resource_type_def: |-
    class enedis(TypedDict):
        access_token: str  # Assuming OAuth2 access token is required for authentication
- lang: |-
    python
  resource_type: |-
    badger_maps
  resource_type_def: |-
    class badger_maps(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    facebook_pages
  resource_type_def: |-
    class facebook_pages(TypedDict):
        access_token: str  # OAuth2 Access Token for the Facebook Page
- lang: |-
    python
  resource_type: |-
    azure_openai_service
  resource_type_def: |-
    class azure_openai_service(TypedDict):
        endpoint: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    drata
  resource_type_def: |-
    class drata(TypedDict):
        api_key: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    mixmax
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The ByBit API endpoint (e.g., "https://api.bybit.com")
- lang: |-
    python
  resource_type: |-
    ongage
  resource_type_def: |-
    class ongage(TypedDict):
        username: str
        password: str
        account_code: str
- lang: |-
    python
  resource_type: |-
    drip
  resource_type_def: |-
    class drip(TypedDict):
        api_token: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    gist
  resource_type_def: |-
    class gist(TypedDict):
        api_key: str  # Assuming API key is used for authentication
- lang: |-
    python
  resource_type: |-
    mailjet
  resource_type_def: |-
    class mailjet(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bybit
  resource_type_def: |-
    class bybit(TypedDict):
        api_key: str
        api_secret: str
        endpoint: str  # The API endpoint, e.g., "https://api.bybit.com"
- lang: |-
    python
  resource_type: |-
    nocodb
  resource_type_def: |-
    class nocodb(TypedDict):
        api_key: str
        base_url: str
        project_id: str
- lang: |-
    python
  resource_type: |-
    miro_custom_app
  resource_type_def: |-
    class miro_custom_app(TypedDict):
        access_token: str
        board_id: str
- lang: |-
    python
  resource_type: |-
    activecampaign
  resource_type_def: |-
    class activecampaign(TypedDict):
        api_url: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    nordigen
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    data_police_uk
  resource_type_def: |-
    class data_police_uk(TypedDict):
        api_key: str  # Assuming an API key is needed for authentication
- lang: |-
    python
  resource_type: |-
    jibble
  resource_type_def: |-
    class jibble(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    google_chat
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    gigasheet
  resource_type_def: |-
    class gigasheet(TypedDict):
        api_key: str  # API key for authenticating with the Gigasheet API
- lang: |-
    python
  resource_type: |-
    openai
  resource_type_def: |-
    class openai(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    maintainx
  resource_type_def: |-
    class maintainx(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    linear_app
  resource_type_def: |-
    class linear_app(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    mautic
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: |-
    class clickup(TypedDict):
        api_key: str  # API key for authentication
- lang: |-
    python
  resource_type: |-
    humor_api
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    jobnimbus
  resource_type_def: |-
    class jobnimbus(TypedDict):
        api_key: str
        user_email: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    google_sheets
  resource_type_def: |-
    class google_sheets(TypedDict):
        service_account_info: dict
- lang: |-
    python
  resource_type: |-
    cloudflare_api_key
  resource_type_def: |-
    class cloudflare_api_key(TypedDict):
        api_key: str
        email: str
- lang: |-
    python
  resource_type: |-
    clickup
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    azure_openai_service
  resource_type_def: |-
    class azure_openai_service(TypedDict):
        api_key: str
        endpoint: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        domain: str
        email: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    agile_crm
  resource_type_def: |-
    class agile_crm(TypedDict):
        api_key: str
        email: str
        domain: str
- lang: |-
    python
  resource_type: |-
    giphy
  resource_type_def: |-
    class giphy(TypedDict):
        api_key: str
- lang: |-
    python
  resource_type: |-
    jira
  resource_type_def: |-
    class jira(TypedDict):
        base_url: str
        username: str
        api_token: str
- lang: |-
    python
  resource_type: |-
    aws
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    hostaway
  resource_type_def: |-
    class hostaway(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_entra_id
  resource_type_def: |-
    class microsoft_entra_id(TypedDict):
        tenant_id: str
        client_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    mailchimp
  resource_type_def: null
- lang: |-
    python
  resource_type: |-
    basecamp
  resource_type_def: |-
    class basecamp(TypedDict):
        access_token: str  # Assuming OAuth2 access token is provided
- lang: |-
    python
  resource_type: |-
    microsoft_365_people
  resource_type_def: |-
    class microsoft_365_people(TypedDict):
        client_id: str
        tenant_id: str
        client_secret: str
- lang: |-
    python
  resource_type: |-
    brex
  resource_type_def: |-
    class brex(TypedDict):
        api_key: str
        account_id: str
- lang: |-
    python
  resource_type: |-
    clockwork_recruiting
  resource_type_def: |-
    class clockwork_recruiting(TypedDict):
        api_key: str
        base_url: str
- lang: |-
    python
  resource_type: |-
    coda
  resource_type_def: |-
    class coda(TypedDict):
        api_token: str
        doc_id: str
- lang: |-
    python
  resource_type: |-
    customer_io
  resource_type_def: |-
    class customer_io(TypedDict):
        site_id: str
        api_key: str
- lang: |-
    python
  resource_type: |-
    microsoft_excel
  resource_type_def: |-
    class microsoft_excel(TypedDict):
        access_token: str  # Assuming OAuth2 is used for authentication
- lang: |-
    python
  resource_type: |-
    agendor
  resource_type_def: |-
    class agendor(TypedDict):
        api_key: str
        api_secret: str
- lang: |-
    python
  resource_type: |-
    bingx
  resource_type_def: |-
    class bingx(TypedDict):
        api_key: str
        secret_key: str
- lang: |-
    python
  resource_type: |-
    lemlist
  resource_type_def: |-
    class lemlist(TypedDict):
        api_key: str
