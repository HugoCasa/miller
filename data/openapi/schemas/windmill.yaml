components:
  parameters:
    AccountId:
      in: path
      name: id
      required: true
      schema: &id161
        type: integer
    ActionKind:
      description: filter on type of operation
      in: query
      name: action_kind
      schema: &id097
        enum:
        - Create
        - Update
        - Delete
        - Execute
        type: string
    After:
      description: filter on created after (exclusive) timestamp
      in: query
      name: after
      schema: &id093
        format: date-time
        type: string
    ArgsFilter:
      description: filter on jobs containing those args as a json subset (@> in postgres)
      in: query
      name: args
      schema: &id140
        type: string
    Before:
      description: filter on created before (exclusive) timestamp
      in: query
      name: before
      schema: &id092
        format: date-time
        type: string
    ClientName:
      in: path
      name: client_name
      required: true
      schema: &id062
        type: string
    CreatedBy:
      description: mask to filter exact matching user creator
      in: query
      name: created_by
      schema: &id087
        type: string
    CreatedOrStartedAfter:
      description: filter on created_at for non non started job and started_at otherwise
        after (exclusive) timestamp
      in: query
      name: created_or_started_after
      schema: &id146
        format: date-time
        type: string
    CreatedOrStartedBefore:
      description: filter on created_at for non non started job and started_at otherwise
        before (inclusive) timestamp
      in: query
      name: created_or_started_before
      schema: &id143
        format: date-time
        type: string
    GetStarted:
      in: query
      name: get_started
      schema: &id160
        type: boolean
    IncludeHeader:
      description: 'List of headers''s keys (separated with '','') whove value are
        added to the args

        Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
        becomes the ''content_type'' arg key

        '
      in: query
      name: include_header
      schema: &id149
        type: string
    InputId:
      in: path
      name: input
      required: true
      schema: &id110
        type: string
    JobId:
      in: path
      name: id
      required: true
      schema: &id124
        format: uuid
        type: string
    JobKinds:
      description: filter on job kind (values 'preview', 'script', 'dependencies',
        'flow') separated by,
      in: query
      name: job_kinds
      schema: &id139
        type: string
    Key:
      in: path
      name: key
      required: true
      schema: &id068
        type: string
    Name:
      in: path
      name: name
      required: true
      schema: &id058
        type: string
    NewJobId:
      description: The job id to assign to the created job. if missing, job is chosen
        randomly using the ULID scheme. If a job id already exists in the queue or
        as a completed job, the request to create one will fail (Bad Request)
      in: query
      name: job_id
      schema: &id151
        format: uuid
        type: string
    Operation:
      description: filter on exact or prefix name of operation
      in: query
      name: operation
      schema: &id095
        type: string
    OrderDesc:
      description: order by desc order (default true)
      in: query
      name: order_desc
      schema: &id086
        type: boolean
    Page:
      description: which page to return (start at 1, default 1)
      in: query
      name: page
      schema: &id069
        type: integer
    ParentJob:
      description: The parent job that is at the origin and responsible for the execution
        of this script if any
      in: query
      name: parent_job
      schema: &id131
        format: uuid
        type: string
    Path:
      in: path
      name: path
      required: true
      schema: &id080
        type: string
    PathId:
      in: path
      name: id
      required: true
      schema: &id055
        type: integer
    PathVersion:
      in: path
      name: version
      required: true
      schema: &id085
        type: integer
    Payload:
      description: 'The base64 encoded payload that has been encoded as a JSON. e.g
        how to encode such payload encodeURIComponent

        `encodeURIComponent(btoa(JSON.stringify({a: 2})))`

        '
      in: query
      name: payload
      schema: &id159
        type: string
    PerPage:
      description: number of items to return for a given page (default 30, max 100)
      in: query
      name: per_page
      schema: &id070
        type: integer
    QueueLimit:
      description: 'The maximum size of the queue for which the request would get
        rejected if that job would push it above that limit

        '
      in: query
      name: queue_limit
      schema: &id150
        type: string
    ResourceName:
      description: filter on exact or prefix name of resource
      in: query
      name: resource
      schema: &id096
        type: string
    ResultFilter:
      description: filter on jobs containing those result as a json subset (@> in
        postgres)
      in: query
      name: result
      schema: &id141
        type: string
    RunnableId:
      in: query
      name: runnable_id
      schema: &id106
        type: string
    RunnableTypeQuery:
      in: query
      name: runnable_type
      schema: &id107
        enum: &id047
        - ScriptHash
        - ScriptPath
        - FlowPath
        type: string
    Running:
      description: filter on running jobs
      in: query
      name: running
      schema: &id144
        type: boolean
    SchedulePath:
      description: mask to filter by schedule path
      in: query
      name: schedule_path
      schema: &id134
        type: string
    ScheduledForBeforeNow:
      description: filter on jobs scheduled_for before now (hence waitinf for a worker)
      in: query
      name: scheduled_for_before_now
      schema: &id145
        type: boolean
    ScriptExactHash:
      description: mask to filter exact matching path
      in: query
      name: script_hash
      schema: &id135
        type: string
    ScriptExactPath:
      description: mask to filter exact matching path
      in: query
      name: script_path_exact
      schema: &id132
        type: string
    ScriptHash:
      in: path
      name: hash
      required: true
      schema: &id154
        type: string
    ScriptPath:
      in: path
      name: path
      required: true
      schema: &id065
        type: string
    ScriptStartPath:
      description: mask to filter matching starting path
      in: query
      name: script_path_start
      schema: &id133
        type: string
    StartedAfter:
      description: filter on started after (exclusive) timestamp
      in: query
      name: started_after
      schema: &id137
        format: date-time
        type: string
    StartedBefore:
      description: filter on started before (inclusive) timestamp
      in: query
      name: started_before
      schema: &id136
        format: date-time
        type: string
    Success:
      description: filter on successful jobs
      in: query
      name: success
      schema: &id138
        type: boolean
    Suspended:
      description: filter on suspended jobs
      in: query
      name: suspended
      schema: &id152
        type: boolean
    Tag:
      description: filter on jobs with a given tag/worker group
      in: query
      name: tag
      schema: &id142
        type: string
    Token:
      in: path
      name: token
      required: true
      schema: &id067
        type: string
    Username:
      description: filter on exact username of user
      in: query
      name: username
      schema: &id094
        type: string
    VersionId:
      in: path
      name: version
      required: true
      schema: &id082
        type: number
    WorkerTag:
      description: Override the tag to use
      in: query
      name: tag
      schema: &id153
        type: string
    WorkspaceId:
      in: path
      name: workspace
      required: true
      schema: &id066
        type: string
  schemas:
    AppHistory:
      properties: &id083
        deployment_msg:
          type: string
        version:
          type: integer
      required: &id084
      - version
      type: object
    AppWithLastVersion:
      properties: &id001
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        execution_mode:
          enum:
          - viewer
          - publisher
          - anonymous
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        id:
          type: integer
        path:
          type: string
        policy:
          properties: &id041
            execution_mode:
              enum:
              - viewer
              - publisher
              - anonymous
              type: string
            on_behalf_of:
              type: string
            on_behalf_of_email:
              type: string
            triggerables:
              additionalProperties:
                type: object
              type: object
          type: object
        summary:
          type: string
        value: {}
        versions:
          items:
            type: integer
          type: array
        workspace_id:
          type: string
      required: &id002
      - id
      - workspace_id
      - path
      - summary
      - versions
      - created_by
      - created_at
      - value
      - policy
      - execution_mode
      - extra_perms
      type: object
    AppWithLastVersionWDraft:
      allOf: &id081
      - properties: *id001
        required: *id002
        type: object
      - properties:
          draft: {}
          draft_only:
            type: boolean
        type: object
    AuditLog:
      properties: &id090
        action_kind:
          enum:
          - Created
          - Updated
          - Delete
          - Execute
          type: string
        id:
          type: integer
        operation:
          enum:
          - jobs.run
          - jobs.run.script
          - jobs.run.preview
          - jobs.run.flow
          - jobs.run.flow_preview
          - jobs.run.script_hub
          - jobs.run.dependencies
          - jobs.run.identity
          - jobs.run.noop
          - jobs.flow_dependencies
          - jobs
          - jobs.cancel
          - jobs.force_cancel
          - jobs.disapproval
          - jobs.delete
          - account.delete
          - openai.request
          - resources.create
          - resources.update
          - resources.delete
          - resource_types.create
          - resource_types.update
          - resource_types.delete
          - schedule.create
          - schedule.setenabled
          - schedule.edit
          - schedule.delete
          - scripts.create
          - scripts.update
          - scripts.archive
          - scripts.delete
          - users.create
          - users.delete
          - users.update
          - users.login
          - users.logout
          - users.accept_invite
          - users.decline_invite
          - users.token.create
          - users.token.delete
          - users.add_to_workspace
          - users.add_global
          - users.setpassword
          - users.impersonate
          - users.leave_workspace
          - oauth.login
          - oauth.signup
          - variables.create
          - variables.delete
          - variables.update
          - flows.create
          - flows.update
          - flows.delete
          - flows.archive
          - apps.create
          - apps.update
          - apps.delete
          - folder.create
          - folder.update
          - folder.delete
          - folder.add_owner
          - folder.remove_owner
          - group.create
          - group.delete
          - group.edit
          - group.adduser
          - group.removeuser
          - igroup.create
          - igroup.delete
          - igroup.adduser
          - igroup.removeuser
          - variables.decrypt_secret
          - workspaces.edit_command_script
          - workspaces.edit_deploy_to
          - workspaces.edit_auto_invite_domain
          - workspaces.edit_webhook
          - workspaces.edit_copilot_config
          - workspaces.edit_error_handler
          - workspaces.create
          - workspaces.update
          - workspaces.archive
          - workspaces.unarchive
          - workspaces.delete
          type: string
        parameters:
          type: object
        resource:
          type: string
        timestamp:
          format: date-time
          type: string
        username:
          type: string
      required: &id091
      - id
      - timestamp
      - username
      - operation
      - action_kind
      type: object
    BranchAll:
      properties: &id007
        branches:
          items:
            properties:
              modules:
                items:
                  properties: &id005
                    cache_ttl:
                      type: number
                    delete_after_use:
                      type: boolean
                    id:
                      type: string
                    mock:
                      properties:
                        enabled:
                          type: boolean
                        return_value: {}
                      type: object
                    priority:
                      type: number
                    retry:
                      properties: &id014
                        constant:
                          properties:
                            attempts:
                              type: integer
                            seconds:
                              type: integer
                          type: object
                        exponential:
                          properties:
                            attempts:
                              type: integer
                            multiplier:
                              type: integer
                            random_factor:
                              maximum: 100
                              minimum: 0
                              type: integer
                            seconds:
                              type: integer
                          type: object
                      type: object
                    sleep:
                      discriminator: &id003
                        mapping:
                          javascript: '#/components/schemas/JavascriptTransform'
                          static: '#/components/schemas/StaticTransform'
                        propertyName: type
                      oneOf: &id004
                      - properties: &id050
                          type:
                            enum:
                            - javascript
                            type: string
                          value: {}
                        required: &id051
                        - expr
                        - type
                        type: object
                      - properties: &id029
                          expr:
                            type: string
                          type:
                            enum:
                            - javascript
                            type: string
                        required: &id030
                        - expr
                        - type
                        type: object
                    stop_after_if:
                      properties:
                        expr:
                          type: string
                        skip_if_stopped:
                          type: boolean
                      required:
                      - expr
                      type: object
                    summary:
                      type: string
                    suspend:
                      properties:
                        required_events:
                          type: integer
                        resume_form:
                          properties:
                            schema:
                              type: object
                          type: object
                        timeout:
                          type: integer
                        user_auth_required:
                          type: boolean
                        user_groups_required:
                          discriminator: *id003
                          oneOf: *id004
                      type: object
                    timeout:
                      type: number
                    value:
                      discriminator: &id019
                        mapping:
                          branchall: '#/components/schemas/BranchAll'
                          branchone: '#/components/schemas/BranchOne'
                          flow: '#/components/schemas/PathFlow'
                          forloopflow: '#/components/schemas/ForloopFlow'
                          graphql: '#/components/schemas/Graphql'
                          identity: '#/components/schemas/Identity'
                          rawscript: '#/components/schemas/RawScript'
                          script: '#/components/schemas/PathScript'
                        propertyName: type
                      oneOf: &id020
                      - properties: &id044
                          concurrency_time_window_s:
                            type: number
                          concurrent_limit:
                            type: number
                          content:
                            type: string
                          input_transforms:
                            additionalProperties:
                              discriminator: *id003
                              oneOf: *id004
                            type: object
                          language:
                            enum:
                            - deno
                            - bun
                            - python3
                            - go
                            - bash
                            - powershell
                            - postgresql
                            - mysql
                            - bigquery
                            - snowflake
                            - mssql
                            - graphql
                            - nativets
                            type: string
                          lock:
                            type: string
                          path:
                            type: string
                          tag:
                            type: string
                          type:
                            enum:
                            - rawscript
                            type: string
                        required: &id045
                        - type
                        - content
                        - language
                        - input_transforms
                        type: object
                      - properties: &id039
                          hash:
                            type: string
                          input_transforms:
                            additionalProperties:
                              discriminator: *id003
                              oneOf: *id004
                            type: object
                          path:
                            type: string
                          type:
                            enum:
                            - script
                            type: string
                        required: &id040
                        - type
                        - path
                        - input_transforms
                        type: object
                      - properties: &id037
                          input_transforms:
                            additionalProperties:
                              discriminator: *id003
                              oneOf: *id004
                            type: object
                          path:
                            type: string
                          type:
                            enum:
                            - flow
                            type: string
                        required: &id038
                        - type
                        - path
                        - input_transforms
                        type: object
                      - properties: &id023
                          iterator:
                            discriminator: *id003
                            oneOf: *id004
                          modules:
                            items:
                              properties: *id005
                              required: &id006
                              - value
                              - id
                              type: object
                            type: array
                          parallel:
                            type: boolean
                          parallelism:
                            type: integer
                          skip_failures:
                            type: boolean
                          type:
                            enum:
                            - forloopflow
                            type: string
                        required: &id024
                        - modules
                        - iterator
                        - skip_failures
                        - type
                        type: object
                      - properties: &id009
                          branches:
                            items:
                              properties:
                                expr:
                                  type: string
                                modules:
                                  items:
                                    properties: *id005
                                    required: *id006
                                    type: object
                                  type: array
                                summary:
                                  type: string
                              required:
                              - modules
                              - expr
                              type: object
                            type: array
                          default:
                            items:
                              properties: *id005
                              required: *id006
                              type: object
                            required:
                            - modules
                            type: array
                          type:
                            enum:
                            - branchone
                            type: string
                        required: &id010
                        - branches
                        - default
                        - type
                        type: object
                      - properties: *id007
                        required: &id008
                        - branches
                        - type
                        type: object
                      - properties: &id027
                          flow:
                            type: boolean
                          type:
                            enum:
                            - identity
                            type: string
                        required: &id028
                        - type
                        type: object
                      - properties: &id025
                          type:
                            enum:
                            - graphql
                            type: string
                        required: &id026
                        - type
                        type: object
                  required: *id006
                  type: object
                type: array
              skip_failure:
                type: boolean
              summary:
                type: string
            required:
            - modules
            - expr
            type: object
          type: array
        parallel:
          type: boolean
        type:
          enum:
          - branchall
          type: string
      required: *id008
      type: object
    BranchOne:
      properties: *id009
      required: *id010
      type: object
    CompletedJob:
      properties: &id031
        args:
          additionalProperties: &id013 {}
          type: object
        canceled:
          type: boolean
        canceled_by:
          type: string
        canceled_reason:
          type: string
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        deleted:
          type: boolean
        duration_ms:
          type: integer
        email:
          type: string
        flow_status:
          properties: &id021
            failure_module:
              allOf:
              - properties: &id011
                  approvers:
                    items:
                      properties:
                        approver:
                          type: string
                        resume_id:
                          type: integer
                      required:
                      - resume_id
                      - approver
                      type: object
                    type: array
                  branch_chosen:
                    properties:
                      branch:
                        type: integer
                      type:
                        enum:
                        - branch
                        - default
                        type: string
                    required:
                    - type
                    type: object
                  branchall:
                    properties:
                      branch:
                        type: integer
                      len:
                        type: integer
                    required:
                    - branch
                    - len
                    type: object
                  count:
                    type: integer
                  flow_jobs:
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  iterator:
                    properties:
                      args: {}
                      index:
                        type: integer
                      itered:
                        items: {}
                        type: array
                    type: object
                  job:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - WaitingForPriorSteps
                    - WaitingForEvents
                    - WaitingForExecutor
                    - InProgress
                    - Success
                    - Failure
                    type: string
                required: &id012
                - type
                type: object
              - properties:
                  parent_module:
                    type: string
                type: object
            modules:
              items:
                properties: *id011
                required: *id012
                type: object
              type: array
            retry:
              properties:
                fail_count:
                  type: integer
                failed_jobs:
                  items:
                    format: uuid
                    type: string
                  type: array
              type: object
            step:
              type: integer
          required: &id022
          - step
          - modules
          - failure_module
          type: object
        id:
          format: uuid
          type: string
        is_flow_step:
          type: boolean
        is_skipped:
          type: boolean
        job_kind:
          enum:
          - script
          - preview
          - dependencies
          - flow
          - flowdependencies
          - appdependencies
          - flowpreview
          - script_hub
          - identity
          - deploymentcallback
          - singlescriptflow
          type: string
        language:
          enum:
          - python3
          - deno
          - go
          - bash
          - powershell
          - postgresql
          - mysql
          - bigquery
          - snowflake
          - mssql
          - graphql
          - nativets
          - bun
          type: string
        logs:
          type: string
        mem_peak:
          type: integer
        parent_job:
          format: uuid
          type: string
        permissioned_as:
          description: "The user (u/userfoo) or group (g/groupfoo) whom \nthe execution\
            \ of this script will be permissioned_as and by extension its DT_TOKEN.\n"
          type: string
        priority:
          type: integer
        raw_code:
          type: string
        raw_flow:
          properties: &id015
            cache_ttl:
              type: number
            concurrency_time_window_s:
              type: number
            concurrent_limit:
              type: number
            early_return:
              type: string
            failure_module:
              properties: *id005
              required: *id006
              type: object
            modules:
              items:
                properties: *id005
                required: *id006
                type: object
              type: array
            priority:
              type: number
            same_worker:
              type: boolean
            skip_expr:
              type: string
          required: &id016
          - modules
          type: object
        result: {}
        schedule_path:
          type: string
        script_hash:
          type: string
        script_path:
          type: string
        started_at:
          format: date-time
          type: string
        success:
          type: boolean
        tag:
          type: string
        visible_to_owner:
          type: boolean
        workspace_id:
          type: string
      required: &id032
      - id
      - created_by
      - duration_ms
      - created_at
      - started_at
      - success
      - canceled
      - job_kind
      - permissioned_as
      - is_flow_step
      - is_skipped
      - email
      - visible_to_owner
      - tag
      type: object
    ContextualVariable:
      properties: &id193
        description:
          type: string
        name:
          type: string
        value:
          type: string
      required: &id194
      - name
      - value
      - description
      type: object
    CreateInput:
      properties: &id108
        args:
          type: object
        name:
          type: string
      required: &id109
      - name
      - args
      - created_by
      type: object
    CreateResource:
      properties: &id164
        description:
          type: string
        path:
          type: string
        resource_type:
          type: string
        value: {}
      required: &id165
      - path
      - value
      - resource_type
      type: object
    CreateVariable:
      properties: &id189
        account:
          type: integer
        description:
          type: string
        is_oauth:
          type: boolean
        is_secret:
          type: boolean
        path:
          type: string
        value:
          type: string
      required: &id190
      - path
      - value
      - is_secret
      - description
      type: object
    CreateWorkspace:
      properties: &id201
        id:
          type: string
        name:
          type: string
        username:
          type: string
      required: &id202
      - id
      - name
      - username
      type: object
    EditResource:
      properties: &id173
        description:
          type: string
        path:
          type: string
        value: {}
      type: object
    EditResourceType:
      properties: &id172
        description:
          type: string
        schema: {}
      type: object
    EditSchedule:
      properties: &id177
        args:
          additionalProperties: *id013
          type: object
        no_flow_overlap:
          type: boolean
        on_failure:
          type: string
        on_failure_exact:
          type: boolean
        on_failure_extra_args:
          additionalProperties: *id013
          type: object
        on_failure_times:
          type: number
        on_recovery:
          type: string
        on_recovery_extra_args:
          additionalProperties: *id013
          type: object
        on_recovery_times:
          type: number
        retry:
          properties: *id014
          type: object
        schedule:
          type: string
        summary:
          type: string
        timezone:
          type: string
        ws_error_handler_muted:
          type: boolean
      required: &id178
      - schedule
      - timezone
      - script_path
      - is_flow
      - args
      type: object
    EditVariable:
      properties: &id195
        description:
          type: string
        is_secret:
          type: boolean
        path:
          type: string
        value:
          type: string
      type: object
    EditWorkspaceUser:
      properties: &id188
        disabled:
          type: boolean
        is_admin:
          type: boolean
        operator:
          type: boolean
      type: object
    Flow:
      allOf: &id099
      - properties: &id035
          description:
            type: string
          schema:
            type: object
          summary:
            type: string
          value:
            properties: *id015
            required: *id016
            type: object
        required: &id036
        - summary
        - value
        type: object
      - properties: &id017
          additionalProperties:
            type: boolean
          archived:
            type: boolean
          dedicated_worker:
            type: boolean
          draft_only:
            type: boolean
          edited_at:
            format: date-time
            type: string
          edited_by:
            type: string
          extra_perms:
            type: object
          path:
            type: string
          priority:
            type: integer
          starred:
            type: boolean
          tag:
            type: string
          timeout:
            type: number
          workspace_id:
            type: string
          ws_error_handler_muted:
            type: boolean
        required: &id018
        - path
        - edited_by
        - edited_at
        - archived
        - extra_perms
        type: object
    FlowMetadata:
      properties: *id017
      required: *id018
      type: object
    FlowModule:
      properties: *id005
      required: *id006
      type: object
    FlowModuleValue:
      discriminator: *id019
      oneOf: *id020
    FlowPreview:
      properties: &id157
        args:
          additionalProperties: *id013
          type: object
        path:
          type: string
        restarted_from:
          properties: &id046
            branch_or_iteration_n:
              type: integer
            flow_job_id:
              format: uuid
              type: string
            step_id:
              type: string
          type: object
        tag:
          type: string
        value:
          properties: *id015
          required: *id016
          type: object
      required: &id158
      - value
      - content
      - args
      type: object
    FlowStatus:
      properties: *id021
      required: *id022
      type: object
    FlowStatusModule:
      properties: *id011
      required: *id012
      type: object
    FlowValue:
      properties: *id015
      required: *id016
      type: object
    Folder:
      properties: &id102
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        name:
          type: string
        owners:
          items:
            type: string
          type: array
      required: &id103
      - name
      - owners
      - extra_perms
      type: object
    ForloopFlow:
      properties: *id023
      required: *id024
      type: object
    GlobalUserInfo:
      properties: &id071
        company:
          type: string
        email:
          type: string
        login_type:
          enum:
          - password
          - github
          type: string
        name:
          type: string
        super_admin:
          type: boolean
        verified:
          type: boolean
      required: &id072
      - email
      - login_type
      - super_admin
      - verified
      type: object
    Graphql:
      properties: *id025
      required: *id026
      type: object
    Group:
      properties: &id104
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        members:
          items:
            type: string
          type: array
        name:
          type: string
        summary:
          type: string
      required: &id105
      - name
      type: object
    Http:
      properties:
        type:
          enum:
          - http
          type: string
      required:
      - type
      type: object
    HubScriptKind:
      name: kind
      schema: &id059
        enum:
        - script
        - failure
        - trigger
        - approval
        type: string
    Identity:
      properties: *id027
      required: *id028
      type: object
    Input:
      properties: &id100
        args:
          type: object
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        id:
          type: string
        is_public:
          type: boolean
        name:
          type: string
        success:
          type: boolean
      required: &id101
      - id
      - name
      - args
      - created_by
      - created_at
      - is_public
      type: object
    InputTransform:
      discriminator: *id003
      oneOf: *id004
    InstanceGroup:
      properties: &id060
        emails:
          items:
            type: string
          type: array
        name:
          type: string
      required: &id061
      - name
      type: object
    JavascriptTransform:
      properties: *id029
      required: *id030
      type: object
    Job:
      allOf: &id147
      - oneOf:
        - properties: *id031
          required: *id032
          type: object
        - properties: &id042
            args:
              additionalProperties: *id013
              type: object
            canceled:
              type: boolean
            canceled_by:
              type: string
            canceled_reason:
              type: string
            created_at:
              format: date-time
              type: string
            created_by:
              type: string
            email:
              type: string
            flow_status:
              properties: *id021
              required: *id022
              type: object
            id:
              format: uuid
              type: string
            is_flow_step:
              type: boolean
            job_kind:
              enum:
              - script
              - preview
              - dependencies
              - flowdependencies
              - appdependencies
              - flow
              - flowpreview
              - script_hub
              - identity
              - deploymentcallback
              - singlescriptflow
              type: string
            language:
              enum:
              - python3
              - deno
              - go
              - bash
              - powershell
              - postgresql
              - mysql
              - bigquery
              - snowflake
              - mssql
              - graphql
              - nativets
              - bun
              type: string
            last_ping:
              format: date-time
              type: string
            logs:
              type: string
            mem_peak:
              type: integer
            parent_job:
              format: uuid
              type: string
            permissioned_as:
              description: "The user (u/userfoo) or group (g/groupfoo) whom \nthe\
                \ execution of this script will be permissioned_as and by extension\
                \ its DT_TOKEN.\n"
              type: string
            priority:
              type: integer
            raw_code:
              type: string
            raw_flow:
              properties: *id015
              required: *id016
              type: object
            running:
              type: boolean
            schedule_path:
              type: string
            scheduled_for:
              format: date-time
              type: string
            script_hash:
              type: string
            script_path:
              type: string
            started_at:
              format: date-time
              type: string
            tag:
              type: string
            visible_to_owner:
              type: boolean
            workspace_id:
              type: string
          required: &id043
          - id
          - running
          - canceled
          - job_kind
          - permissioned_as
          - is_flow_step
          - email
          - visible_to_owner
          - tag
          type: object
      - properties:
          type:
            enum:
            - CompletedJob
            - QueuedJob
            type: string
        type: object
      discriminator: &id148
        propertyName: type
    LargeFileStorage:
      properties: &id198
        s3_resource_path:
          type: string
        type:
          enum:
          - S3Storage
          type: string
      type: object
    ListableApp:
      properties: &id088
        edited_at:
          format: date-time
          type: string
        execution_mode:
          enum:
          - viewer
          - publisher
          - anonymous
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        id:
          type: integer
        path:
          type: string
        starred:
          type: boolean
        summary:
          type: string
        version:
          type: integer
        workspace_id:
          type: string
      required: &id089
      - id
      - workspace_id
      - path
      - summary
      - version
      - extra_perms
      - edited_at
      - execution_mode
      type: object
    ListableRawApp:
      properties: &id162
        edited_at:
          format: date-time
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        path:
          type: string
        starred:
          type: boolean
        summary:
          type: string
        version:
          type: number
        workspace_id:
          type: string
      required: &id163
      - workspace_id
      - path
      - summary
      - extra_perms
      - version
      - edited_at
      type: object
    ListableResource:
      properties: &id168
        account:
          type: number
        description:
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        is_expired:
          type: boolean
        is_linked:
          type: boolean
        is_oauth:
          type: boolean
        is_refreshed:
          type: boolean
        path:
          type: string
        refresh_error:
          type: string
        resource_type:
          type: string
        value: {}
        workspace_id:
          type: string
      required: &id169
      - path
      - resource_type
      - is_oauth
      - is_linked
      - is_refreshed
      type: object
    ListableVariable:
      properties: &id191
        account:
          type: integer
        description:
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        is_expired:
          type: boolean
        is_linked:
          type: boolean
        is_oauth:
          type: boolean
        is_refreshed:
          type: boolean
        is_secret:
          type: boolean
        path:
          type: string
        refresh_error:
          type: string
        value:
          type: string
        workspace_id:
          type: string
      required: &id192
      - workspace_id
      - path
      - is_secret
      - extra_perms
      type: object
    Login:
      properties: &id056
        email:
          type: string
        password:
          type: string
      required: &id057
      - email
      - password
      type: object
    MainArgSignature:
      properties:
        args:
          items:
            properties:
              default: {}
              has_default:
                type: boolean
              name:
                type: string
              typ:
                oneOf:
                - enum:
                  - float
                  - int
                  - bool
                  - email
                  - unknown
                  - bytes
                  - dict
                  - datetime
                  - sql
                  type: string
                - properties:
                    resource:
                      nullable: true
                      type: string
                  required:
                  - resource
                  type: object
                - properties:
                    str:
                      items:
                        type: string
                      nullable: true
                      type: array
                  required:
                  - str
                  type: object
                - properties:
                    object:
                      items:
                        properties:
                          key:
                            type: string
                          typ:
                            oneOf:
                            - enum:
                              - float
                              - int
                              - bool
                              - email
                              - unknown
                              - bytes
                              - dict
                              - datetime
                              - sql
                              type: string
                            - properties:
                                str: {}
                              required:
                              - str
                              type: object
                        required:
                        - key
                        - typ
                        type: object
                      type: array
                  required:
                  - object
                  type: object
                - properties:
                    list:
                      nullable: true
                      oneOf:
                      - enum:
                        - float
                        - int
                        - bool
                        - email
                        - unknown
                        - bytes
                        - dict
                        - datetime
                        - sql
                        type: string
                      - properties:
                          str: {}
                        required:
                        - str
                        type: object
                  required:
                  - list
                  type: object
            required:
            - name
            - typ
            type: object
          type: array
        error:
          type: string
        star_args:
          type: boolean
        star_kwargs:
          type: boolean
        type:
          enum:
          - Valid
          - Invalid
          type: string
      required:
      - star_args
      - start_kwargs
      - args
      - type
      - error
      type: object
    MetricDataPoint:
      properties: &id052
        timestamp:
          format: date-time
          type: string
        value:
          type: number
      required: &id053
      - timestamp
      - value
      type: object
    MetricMetadata:
      properties: &id125
        id:
          type: string
        name:
          type: string
      required: &id126
      - id
      type: object
    NewSchedule:
      properties: &id174
        args:
          additionalProperties: *id013
          type: object
        enabled:
          type: boolean
        is_flow:
          type: boolean
        no_flow_overlap:
          type: boolean
        on_failure:
          type: string
        on_failure_exact:
          type: boolean
        on_failure_extra_args:
          additionalProperties: *id013
          type: object
        on_failure_times:
          type: number
        on_recovery:
          type: string
        on_recovery_extra_args:
          additionalProperties: *id013
          type: object
        on_recovery_times:
          type: number
        path:
          type: string
        retry:
          properties: *id014
          type: object
        schedule:
          type: string
        script_path:
          type: string
        summary:
          type: string
        timezone:
          type: string
        ws_error_handler_muted:
          type: boolean
      required: &id175
      - path
      - schedule
      - timezone
      - script_path
      - is_flow
      - args
      type: object
    NewScript:
      properties: &id033
        cache_ttl:
          type: number
        concurrency_time_window_s:
          type: integer
        concurrent_limit:
          type: integer
        content:
          type: string
        dedicated_worker:
          type: boolean
        delete_after_use:
          type: boolean
        deployment_message:
          type: string
        description:
          type: string
        draft_only:
          type: boolean
        envs:
          items:
            type: string
          type: array
        is_template:
          type: boolean
        kind:
          enum:
          - script
          - failure
          - trigger
          - command
          - approval
          type: string
        language:
          enum:
          - python3
          - deno
          - go
          - bash
          - powershell
          - postgresql
          - mysql
          - bigquery
          - snowflake
          - mssql
          - graphql
          - nativets
          - bun
          type: string
        lock:
          items:
            type: string
          type: array
        parent_hash:
          type: string
        path:
          type: string
        priority:
          type: integer
        restart_unless_cancelled:
          type: boolean
        schema:
          type: object
        summary:
          type: string
        tag:
          type: string
        timeout:
          type: integer
        ws_error_handler_muted:
          type: boolean
      required: &id034
      - path
      - summary
      - description
      - content
      - language
      type: object
    NewScriptWithDraft:
      allOf: &id181
      - properties: *id033
        required: *id034
        type: object
      - properties:
          draft:
            properties: *id033
            required: *id034
            type: object
          hash:
            type: string
        required:
        - hash
        type: object
    NewToken:
      properties: &id075
        expiration:
          format: date-time
          type: string
        label:
          type: string
        scopes:
          items:
            type: string
          type: array
      type: object
    NewTokenImpersonate:
      properties: &id076
        expiration:
          format: date-time
          type: string
        impersonate_email:
          type: string
        label:
          type: string
      required: &id077
      - impersonate_email
      type: object
    NewUser:
      properties: &id184
        email:
          type: string
        is_admin:
          type: boolean
        username:
          type: string
      required: &id185
      - email
      - username
      - is_admin
      type: object
    OpenFlow:
      properties: *id035
      required: *id036
      type: object
    OpenFlowWPath:
      allOf: &id098
      - properties: *id035
        required: *id036
        type: object
      - properties:
          dedicated_worker:
            type: boolean
          path:
            type: string
          priority:
            type: integer
          tag:
            type: string
          timeout:
            type: number
          ws_error_handler_muted:
            type: boolean
        required:
        - path
        type: object
    PathFlow:
      properties: *id037
      required: *id038
      type: object
    PathScript:
      properties: *id039
      required: *id040
      type: object
    PolarsClientKwargs:
      properties: &id122
        region_name:
          type: string
      required: &id123
      - region_name
      type: object
    Policy:
      properties: *id041
      type: object
    Preview:
      properties: &id155
        args:
          additionalProperties: *id013
          type: object
        content:
          type: string
        dedicated_worker:
          type: boolean
        kind:
          enum:
          - code
          - identity
          - http
          type: string
        language:
          enum:
          - python3
          - deno
          - go
          - bash
          - powershell
          - postgresql
          - mysql
          - bigquery
          - snowflake
          - mssql
          - graphql
          - nativets
          - bun
          type: string
        path:
          type: string
        tag:
          type: string
      required: &id156
      - args
      type: object
    QueuedJob:
      properties: *id042
      required: *id043
      type: object
    RawScript:
      properties: *id044
      required: *id045
      type: object
    Resource:
      properties: &id166
        description:
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        is_oauth:
          type: boolean
        path:
          type: string
        resource_type:
          type: string
        value: {}
        workspace_id:
          type: string
      required: &id167
      - path
      - resource_type
      - is_oauth
      type: object
    ResourceType:
      properties: &id170
        description:
          type: string
        name:
          type: string
        schema: {}
        workspace_id:
          type: string
      required: &id171
      - name
      type: object
    RestartedFrom:
      properties: *id046
      type: object
    Retry:
      properties: *id014
      type: object
    RunnableType:
      enum: *id047
      type: string
    S3Resource:
      properties: &id113
        accessKey:
          type: string
        bucket:
          type: string
        endPoint:
          type: string
        pathStyle:
          type: boolean
        region:
          type: string
        secretKey:
          type: string
        useSSL:
          type: boolean
      required: &id114
      - bucket
      - region
      - endPoint
      - useSSL
      - pathStyle
      type: object
    ScalarMetric:
      properties: &id127
        metric_id:
          type: string
        value:
          type: number
      required: &id128
      - id
      - value
      type: object
    Schedule:
      properties: &id048
        args:
          additionalProperties: *id013
          type: object
        edited_at:
          format: date-time
          type: string
        edited_by:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        error:
          type: string
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        is_flow:
          type: boolean
        no_flow_overlap:
          type: boolean
        on_failure:
          type: string
        on_failure_exact:
          type: boolean
        on_failure_extra_args:
          additionalProperties: *id013
          type: object
        on_failure_times:
          type: number
        on_recovery:
          type: string
        on_recovery_extra_args:
          additionalProperties: *id013
          type: object
        on_recovery_times:
          type: number
        path:
          type: string
        retry:
          properties: *id014
          type: object
        schedule:
          type: string
        script_path:
          type: string
        summary:
          type: string
        timezone:
          type: string
        ws_error_handler_muted:
          type: boolean
      required: &id049
      - path
      - edited_by
      - edited_at
      - schedule
      - script_path
      - timezone
      - extra_perms
      - is_flow
      - enabled
      - email
      type: object
    ScheduleWJobs:
      allOf: &id176
      - properties: *id048
        required: *id049
        type: object
      - properties:
          jobs:
            items:
              properties:
                duration_ms:
                  type: number
                id:
                  type: string
                success:
                  type: boolean
              required:
              - id
              - success
              - duration_ms
              type: object
            type: array
        type: object
    Script:
      properties: &id179
        archived:
          type: boolean
        cache_ttl:
          type: number
        concurrency_time_window_s:
          type: integer
        concurrent_limit:
          type: integer
        content:
          type: string
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        dedicated_worker:
          type: boolean
        delete_after_use:
          type: boolean
        deleted:
          type: boolean
        description:
          type: string
        draft_only:
          type: boolean
        envs:
          items:
            type: string
          type: array
        extra_perms:
          additionalProperties:
            type: boolean
          type: object
        has_draft:
          type: boolean
        hash:
          type: string
        is_template:
          type: boolean
        kind:
          enum:
          - script
          - failure
          - trigger
          - command
          - approval
          type: string
        language:
          enum:
          - python3
          - deno
          - go
          - bash
          - powershell
          - postgresql
          - mysql
          - bigquery
          - snowflake
          - mssql
          - graphql
          - nativets
          - bun
          type: string
        lock:
          type: string
        lock_error_logs:
          type: string
        parent_hashes:
          description: 'The first element is the direct parent of the script, the
            second is the parent of the first, etc

            '
          items:
            type: string
          type: array
        path:
          type: string
        priority:
          type: integer
        restart_unless_cancelled:
          type: boolean
        schema:
          type: object
        starred:
          type: boolean
        summary:
          type: string
        tag:
          type: string
        timeout:
          type: integer
        workspace_id:
          type: string
        ws_error_handler_muted:
          type: boolean
      required: &id180
      - hash
      - path
      - summary
      - description
      - content
      - created_by
      - created_at
      - archived
      - deleted
      - is_template
      - extra_perms
      - language
      - kind
      - starred
      type: object
    ScriptArgs:
      additionalProperties: *id013
      type: object
    ScriptHistory:
      properties: &id182
        deployment_msg:
          type: string
        script_hash:
          type: string
      required: &id183
      - script_hash
      type: object
    SlackToken:
      properties:
        access_token:
          type: string
        bot:
          properties:
            bot_access_token:
              type: string
          type: object
        team_id:
          type: string
        team_name:
          type: string
      required:
      - access_token
      - team_id
      - team_name
      - bot
      type: object
    StaticTransform:
      properties: *id050
      required: *id051
      type: object
    TimeseriesMetric:
      properties: &id129
        metric_id:
          type: string
        values:
          items:
            properties: *id052
            required: *id053
            type: object
          type: array
      required: &id130
      - id
      - values
      type: object
    TokenResponse:
      properties: &id063
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        scope:
          items:
            type: string
          type: array
      required: &id064
      - access_token
      type: object
    TruncatedToken:
      properties: &id078
        created_at:
          format: date-time
          type: string
        expiration:
          format: date-time
          type: string
        label:
          type: string
        last_used_at:
          format: date-time
          type: string
        scopes:
          items:
            type: string
          type: array
        token_prefix:
          type: string
      required: &id079
      - token_prefix
      - created_at
      - last_used_at
      type: object
    UpdateInput:
      properties: &id111
        id:
          type: string
        is_public:
          type: boolean
        name:
          type: string
      required: &id112
      - id
      - name
      - is_public
      type: object
    UploadFilePart:
      properties: &id120
        part_number:
          type: integer
        tag:
          type: string
      required: &id121
      - part_number
      - tag
      type: object
    Usage:
      properties: &id054
        executions:
          type: number
      type: object
    User:
      properties: &id186
        created_at:
          format: date-time
          type: string
        disabled:
          type: boolean
        email:
          type: string
        folders:
          items:
            type: string
          type: array
        folders_owners:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        is_admin:
          type: boolean
        is_super_admin:
          type: boolean
        operator:
          type: boolean
        usage:
          properties: *id054
          type: object
        username:
          type: string
      required: &id187
      - email
      - username
      - is_admin
      - is_super_admin
      - created_at
      - operator
      - disabled
      - folders
      - folders_owners
      type: object
    UserWorkspaceList:
      properties: &id205
        email:
          type: string
        workspaces:
          items:
            properties:
              id:
                type: string
              name:
                type: string
              username:
                type: string
            required:
            - id
            - name
            - username
            type: object
          type: array
      required: &id206
      - email
      - workspaces
      type: object
    WindmillFileMetadata:
      properties: &id117
        expires:
          format: date-time
          type: string
        last_modified:
          format: date-time
          type: string
        mime_type:
          type: string
        size_in_bytes:
          type: integer
        version_id:
          type: string
      type: object
    WindmillFilePreview:
      properties: &id118
        content:
          type: string
        content_type:
          enum:
          - RawText
          - Csv
          - Parquet
          - Unknown
          type: string
        download_url:
          type: string
        msg:
          type: string
      required: &id119
      - content_type
      type: object
    WindmillLargeFile:
      properties: &id115
        s3:
          type: string
      required: &id116
      - s3
      type: object
    WorkerPing:
      properties: &id199
        custom_tags:
          items:
            type: string
          type: array
        ip:
          type: string
        jobs_executed:
          type: integer
        last_ping:
          type: number
        started_at:
          format: date-time
          type: string
        wm_version:
          type: string
        worker:
          type: string
        worker_group:
          type: string
        worker_instance:
          type: string
      required: &id200
      - worker
      - worker_instance
      - ping_at
      - started_at
      - ip
      - jobs_executed
      - worker_group
      - wm_version
      type: object
    Workspace:
      properties: &id203
        domain:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
      required: &id204
      - id
      - name
      - owner
      type: object
    WorkspaceGitSync:
      properties: &id196
        git_repo_resource_path:
          type: string
        script_path:
          type: string
        use_individual_branch:
          type: boolean
      required: &id197
      - script_path
      - git_repo_resource_path
      type: object
    WorkspaceInvite:
      properties: &id073
        email:
          type: string
        is_admin:
          type: boolean
        operator:
          type: boolean
        workspace_id:
          type: string
      required: &id074
      - workspace_id
      - email
      - is_admin
      - operator
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
    cookieAuth:
      in: cookie
      name: token
      type: apiKey
externalDocs:
  description: documentation portal
  url: https://windmill.dev
info:
  contact:
    email: contact@windmill.dev
    name: Windmill Team
    url: https://windmill.dev
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Windmill API
  version: 1.237.0
  x-logo:
    url: https://windmill.dev/img/windmill.svg
openapi: 3.0.3
paths:
  /apps/hub/get/{id}:
    get:
      operationId: getHubAppById
      parameters:
      - in: path
        name: id
        required: true
        schema: *id055
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  app:
                    properties:
                      summary:
                        type: string
                      value: {}
                    required:
                    - summary
                    - value
                    type: object
                required:
                - app
                type: object
          description: app
      summary: get hub app by id
      tags:
      - app
  /apps/hub/list:
    get:
      operationId: listHubApps
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  apps:
                    items:
                      properties:
                        app_id:
                          type: number
                        approved:
                          type: boolean
                        apps:
                          items:
                            type: string
                          type: array
                        id:
                          type: number
                        summary:
                          type: string
                        votes:
                          type: number
                      required:
                      - id
                      - app_id
                      - summary
                      - apps
                      - approved
                      - votes
                      type: object
                    type: array
                type: object
          description: hub apps list
      summary: list all hub apps
      tags:
      - app
  /auth/login:
    post:
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              properties: *id056
              required: *id057
              type: object
        description: credentials
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: 'Successfully authenticated. The session ID is returned in
            a cookie named `token` and as plaintext response. Preferred method of
            authorization is through the bearer token. The cookie is only for browser
            convenience.

            '
          headers:
            Set-Cookie:
              schema:
                example: token=abcde12345; Path=/; HttpOnly
                type: string
      security: []
      summary: login with password
      tags:
      - user
  /auth/logout:
    post:
      operationId: logout
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: clear cookies and clear token (if applicable)
          headers:
            Set-Cookie:
              schema:
                type: string
      security: []
      summary: logout
      tags:
      - user
  /configs/get/{name}:
    get:
      operationId: get config
      parameters:
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: a config
      summary: get config
      tags:
      - config
  /configs/list_worker_groups:
    get:
      operationId: listWorkerGroups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    config: {}
                    name:
                      type: string
                  required:
                  - name
                  - config
                  type: object
                type: array
          description: a list of worker group configs
      summary: list worker groups
      tags:
      - config
  /configs/update/{name}:
    delete:
      operationId: deleteConfig
      parameters:
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Delete config
      summary: Delete Config
      tags:
      - config
    post:
      operationId: updateConfig
      parameters:
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema: {}
        description: worker group
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Update a worker group
      summary: Update config
      tags:
      - config
  /ee_license:
    get:
      operationId: getLicenseId
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: get license id (empty if not ee)
      summary: get license id
      tags:
      - settings
  /embeddings/query_hub_scripts:
    get:
      operationId: queryHubScripts
      parameters:
      - description: query text
        in: query
        name: text
        required: true
        schema:
          type: string
      - description: query scripts kind
        in: query
        name: kind
        required: false
        schema:
          type: string
      - description: query limit
        in: query
        name: limit
        required: false
        schema:
          type: number
      - description: query scripts app
        in: query
        name: app
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    app:
                      type: string
                    ask_id:
                      type: number
                    id:
                      type: number
                    kind:
                      name: kind
                      schema: *id059
                    score:
                      type: number
                    summary:
                      type: string
                    version_id:
                      type: number
                  required:
                  - ask_id
                  - id
                  - version_id
                  - summary
                  - app
                  - kind
                  - score
                  type: object
                type: array
          description: script details
      summary: query hub scripts by similarity
      tags:
      - script
  /flows/hub/get/{id}:
    get:
      operationId: getHubFlowById
      parameters:
      - in: path
        name: id
        required: true
        schema: *id055
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  flow:
                    properties: *id035
                    required: *id036
                    type: object
                type: object
          description: flow
      summary: get hub flow by id
      tags:
      - flow
  /flows/hub/list:
    get:
      operationId: listHubFlows
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  flows:
                    items:
                      properties:
                        approved:
                          type: boolean
                        apps:
                          items:
                            type: string
                          type: array
                        flow_id:
                          type: number
                        id:
                          type: number
                        summary:
                          type: string
                        votes:
                          type: number
                      required:
                      - id
                      - flow_id
                      - summary
                      - apps
                      - approved
                      - votes
                      type: object
                    type: array
                type: object
          description: hub flows list
      summary: list all hub flows
      tags:
      - flow
  /groups/get/{name}:
    get:
      operationId: getInstanceGroup
      parameters:
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id060
                required: *id061
                type: object
          description: instance group
      summary: get instance group
      tags:
      - group
  /groups/list:
    get:
      operationId: listInstanceGroups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id060
                  required: *id061
                  type: object
                type: array
          description: instance group list
      summary: list instance groups
      tags:
      - group
  /integrations/hub/list:
    get:
      operationId: listHubIntegrations
      parameters:
      - description: query integrations kind
        in: query
        name: kind
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
          description: integrations details
      summary: list hub integrations
      tags:
      - integration
  /jobs/db_clock:
    get:
      operationId: getDbClock
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: the timestamp of the db that can be used to compute the drift
      summary: get db clock
      tags:
      - job
  /oauth/connect_callback/{client_name}:
    post:
      operationId: connectCallback
      parameters:
      - in: path
        name: client_name
        required: true
        schema: *id062
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                state:
                  type: string
              required:
              - code
              - state
              type: object
        description: code endpoint
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id063
                required: *id064
                type: object
          description: oauth token
      summary: connect callback
      tags:
      - oauth
  /oauth/list_connects:
    get:
      operationId: listOAuthConnects
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  properties:
                    extra_params:
                      additionalProperties:
                        type: string
                    scopes:
                      items:
                        type: string
                      type: array
                  type: object
          description: list of oauth connects clients
      summary: list oauth connects
      tags:
      - oauth
  /oauth/list_logins:
    get:
      operationId: listOAuthLogins
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  oauth:
                    items:
                      type: string
                    type: array
                  saml:
                    type: string
                required:
                - oauth
                type: object
          description: list of oauth and saml login clients
      summary: list oauth logins
      tags:
      - oauth
  /oauth/login_callback/{client_name}:
    post:
      operationId: loginWithOauth
      parameters:
      - in: path
        name: client_name
        required: true
        schema: *id062
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                state:
                  type: string
              type: object
        description: Partially filled script
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: 'Successfully authenticated. The session ID is returned in
            a cookie named `token` and as plaintext response. Preferred method of
            authorization is through the bearer token. The cookie is only for browser
            convenience.

            '
          headers:
            Set-Cookie:
              schema:
                example: token=abcde12345; Path=/; HttpOnly
                type: string
      security: []
      summary: login with oauth authorization flow
      tags:
      - user
  /openapi.yaml:
    get:
      operationId: getOpenApiYaml
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: openapi yaml file content
      summary: get openapi yaml spec
      tags:
      - settings
  /schedules/preview:
    post:
      operationId: previewSchedule
      requestBody:
        content:
          application/json:
            schema:
              properties:
                schedule:
                  type: string
                timezone:
                  type: string
              required:
              - schedule
              - timezone
              type: object
        description: schedule
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  format: date-time
                  type: string
                type: array
          description: List of 5 estimated upcoming execution events (in UTC)
      summary: preview schedule
      tags:
      - schedule
  /scripts/hub/get/{path}:
    get:
      operationId: getHubScriptContentByPath
      parameters:
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: script details
      summary: get hub script content by path
      tags:
      - script
  /scripts/hub/get_full/{path}:
    get:
      operationId: getHubScriptByPath
      parameters:
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  content:
                    type: string
                  language:
                    type: string
                  lockfile:
                    type: string
                  schema: {}
                  summary:
                    type: string
                required:
                - content
                - language
                type: object
          description: script details
      summary: get full hub script by path
      tags:
      - script
  /scripts/hub/top:
    get:
      operationId: getTopHubScripts
      parameters:
      - description: query limit
        in: query
        name: limit
        required: false
        schema:
          type: number
      - description: query scripts app
        in: query
        name: app
        required: false
        schema:
          type: string
      - description: query scripts kind
        in: query
        name: kind
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  asks:
                    items:
                      properties:
                        app:
                          type: string
                        ask_id:
                          type: number
                        id:
                          type: number
                        kind:
                          name: kind
                          schema: *id059
                        summary:
                          type: string
                        version_id:
                          type: number
                        views:
                          type: number
                        votes:
                          type: number
                      required:
                      - id
                      - ask_id
                      - summary
                      - app
                      - version_id
                      - kind
                      - views
                      - votes
                      type: object
                    type: array
                type: object
          description: hub scripts list
      summary: get top hub scripts
      tags:
      - script
  /scripts_u/tokened_raw/{workspace}/{token}/{path}:
    get:
      operationId: rawScriptByPathTokened
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: token
        required: true
        schema: *id067
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: script content
      summary: raw script by path with a token (mostly used by lsp to be used with
        import maps to resolve scripts)
      tags:
      - script
  /settings/global/{key}:
    get:
      operationId: getGlobal
      parameters:
      - in: path
        name: key
        required: true
        schema: *id068
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: status
      summary: get global settings
      tags:
      - setting
    post:
      operationId: setGlobal
      parameters:
      - in: path
        name: key
        required: true
        schema: *id068
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value: {}
              type: object
        description: value set
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: post global settings
      tags:
      - setting
  /settings/local:
    get:
      operationId: getLocal
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: status
      summary: get local settings
      tags:
      - setting
  /settings/send_stats:
    post:
      operationId: sendStats
      responses:
        '200':
          content:
            'text/plain:':
              schema:
                type: string
          description: status
      summary: send stats
      tags:
      - setting
  /settings/test_license_key:
    post:
      operationId: testLicenseKey
      requestBody:
        content:
          application/json:
            schema:
              properties:
                license_key:
                  type: string
              required:
              - license_key
              type: object
        description: test license key
        required: true
      responses:
        '200':
          content:
            'text/plain:':
              schema:
                type: string
          description: status
      summary: test license key
      tags:
      - setting
  /settings/test_smtp:
    post:
      operationId: testSmtp
      requestBody:
        content:
          application/json:
            schema:
              properties:
                smtp:
                  properties:
                    from:
                      type: string
                    host:
                      type: string
                    password:
                      type: string
                    port:
                      type: integer
                    tls_implicit:
                      type: boolean
                    username:
                      type: string
                  required:
                  - host
                  - username
                  - password
                  - port
                  - from
                  - tls_implicit
                  type: object
                to:
                  type: string
              required:
              - to
              - smtp
              type: object
        description: test smtp payload
        required: true
      responses:
        '200':
          content:
            'text/plain:':
              schema:
                type: string
          description: status
      summary: test smtp
      tags:
      - setting
  /uptodate:
    get:
      operationId: backendUptodate
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: is backend up to date
      summary: is backend up to date
      tags:
      - settings
  /users/accept_invite:
    post:
      operationId: acceptInvite
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                workspace_id:
                  type: string
              required:
              - workspace_id
              - username
              type: object
        description: accept invite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: accept invite to workspace
      tags:
      - user
  /users/all_runnables:
    get:
      operationId: getRunnable
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: string
                  endpoint_async:
                    type: string
                  endpoint_openai_sync:
                    type: string
                  endpoint_sync:
                    type: string
                  kind:
                    type: string
                  summary:
                    type: string
                  workspace:
                    type: string
                required:
                - workspace
                - endpoint_async
                - endpoint_sync
                - endpoint_openai_sync
                - summary
                - kind
                type: object
          description: free all runnables
      summary: get all runnables in every workspace
      tags:
      - user
  /users/create:
    post:
      operationId: createUserGlobally
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company:
                  type: string
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
                super_admin:
                  type: boolean
              required:
              - email
              - password
              - super_admin
              type: object
        description: user info
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: user created
      summary: create user
      tags:
      - user
  /users/decline_invite:
    post:
      operationId: declineInvite
      requestBody:
        content:
          application/json:
            schema:
              properties:
                workspace_id:
                  type: string
              required:
              - workspace_id
              type: object
        description: decline invite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: decline invite to workspace
      tags:
      - user
  /users/delete/{email}:
    delete:
      operationId: globalUserDelete
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: user deleted
      summary: global delete user (require super admin)
      tags:
      - user
  /users/email:
    get:
      operationId: getCurrentEmail
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: user email
      summary: get current user email (if logged in)
      tags:
      - user
  /users/exists/{email}:
    get:
      operationId: existsEmail
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: user
      summary: exists email
      tags:
      - user
  /users/leave_instance:
    post:
      operationId: leaveInstance
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: leave instance
      tags:
      - user
  /users/list_as_super_admin:
    get:
      operationId: listUsersAsSuperAdmin
      parameters:
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id071
                  required: *id072
                  type: object
                type: array
          description: user
      summary: list all users as super admin (require to be super amdin)
      tags:
      - user
  /users/list_invites:
    get:
      operationId: listWorkspaceInvites
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id073
                  required: *id074
                  type: object
                type: array
          description: list all workspace invites
      summary: list all workspace invites
      tags:
      - user
  /users/refresh_token:
    get:
      operationId: refreshUserToken
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: free usage
      summary: refresh the current token
      tags:
      - user
  /users/setpassword:
    post:
      operationId: setPassword
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
              required:
              - password
              type: object
        description: set password
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: password set
      summary: set password
      tags:
      - user
  /users/tokens/create:
    post:
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              properties: *id075
              type: object
        description: new token
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: token created
      summary: create token
      tags:
      - user
  /users/tokens/delete/{token_prefix}:
    delete:
      operationId: deleteToken
      parameters:
      - in: path
        name: token_prefix
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: delete token
      summary: delete token
      tags:
      - user
  /users/tokens/impersonate:
    post:
      operationId: createTokenImpersonate
      requestBody:
        content:
          application/json:
            schema:
              properties: *id076
              required: *id077
              type: object
        description: new token
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: token created
      summary: create token to impersonate a user (require superadmin)
      tags:
      - user
  /users/tokens/list:
    get:
      operationId: listTokens
      parameters:
      - in: query
        name: exclude_ephemeral
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id078
                  required: *id079
                  type: object
                type: array
          description: truncated token
      summary: list token
      tags:
      - user
  /users/tutorial_progress:
    get:
      operationId: getTutorialProgress
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  progress:
                    type: integer
                type: object
          description: tutorial progress
      summary: get tutorial progress
      tags:
      - user
    post:
      operationId: updateTutorialProgress
      requestBody:
        content:
          application/json:
            schema:
              properties:
                progress:
                  type: integer
              type: object
        description: progress update
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: tutorial progress
      summary: update tutorial progress
      tags:
      - user
  /users/update/{email}:
    post:
      operationId: globalUserUpdate
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_super_admin:
                  type: boolean
              type: object
        description: new user info
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: user updated
      summary: global update user (require super admin)
      tags:
      - user
  /users/usage:
    get:
      operationId: getUsage
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: number
          description: free usage
      summary: get current usage outside of premium workspaces
      tags:
      - user
  /users/whoami:
    get:
      operationId: globalWhoami
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id071
                required: *id072
                type: object
          description: user email
      summary: get current global whoami (if logged in)
      tags:
      - user
  /version:
    get:
      operationId: backendVersion
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: git version of backend
      summary: get backend version
      tags:
      - settings
  /w/{workspace}/acls/add/{kind}/{path}:
    post:
      operationId: addGranularAcls
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - in: path
        name: kind
        required: true
        schema:
          enum:
          - script
          - group_
          - resource
          - schedule
          - variable
          - flow
          - folder
          - app
          - raw_app
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                owner:
                  type: string
                write:
                  type: boolean
              required:
              - owner
              type: object
        description: acl to add
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: granular acl added
      summary: add granular acls
      tags:
      - granular_acl
  /w/{workspace}/acls/get/{kind}/{path}:
    get:
      operationId: getGranularAcls
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - in: path
        name: kind
        required: true
        schema:
          enum:
          - script
          - group_
          - resource
          - schedule
          - variable
          - flow
          - folder
          - app
          - raw_app
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
                type: object
          description: acls
      summary: get granular acls
      tags:
      - granular_acl
  /w/{workspace}/acls/remove/{kind}/{path}:
    post:
      operationId: removeGranularAcls
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - in: path
        name: kind
        required: true
        schema:
          enum:
          - script
          - group_
          - resource
          - schedule
          - variable
          - flow
          - folder
          - app
          - raw_app
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                owner:
                  type: string
              required:
              - owner
              type: object
        description: acl to add
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: granular acl removed
      summary: remove granular acls
      tags:
      - granular_acl
  /w/{workspace}/apps/create:
    post:
      operationId: createApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deployment_message:
                  type: string
                draft_only:
                  type: boolean
                path:
                  type: string
                policy:
                  properties: *id041
                  type: object
                summary:
                  type: string
                value: {}
              required:
              - path
              - value
              - summary
              - policy
              type: object
        description: new app
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: app created
      summary: create app
      tags:
      - app
  /w/{workspace}/apps/delete/{path}:
    delete:
      operationId: deleteApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: app deleted
      summary: delete app
      tags:
      - app
  /w/{workspace}/apps/exists/{path}:
    get:
      operationId: existsApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: app exists
      summary: does an app exisst at path
      tags:
      - app
  /w/{workspace}/apps/get/draft/{path}:
    get:
      operationId: getAppByPathWithDraft
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf: *id081
          description: app details with draft
      summary: get app by path with draft
      tags:
      - app
  /w/{workspace}/apps/get/p/{path}:
    get:
      operationId: getAppByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id001
                required: *id002
                type: object
          description: app details
      summary: get app by path
      tags:
      - app
  /w/{workspace}/apps/get/v/{id}:
    get:
      operationId: getAppByVersion
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id055
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id001
                required: *id002
                type: object
          description: app details
      summary: get app by version
      tags:
      - app
  /w/{workspace}/apps/get_data/{version}/{path}:
    get:
      operationId: getRawAppData
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: version
        required: true
        schema: *id082
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/javascript:
              schema:
                type: string
          description: app details
      summary: get app by path
      tags:
      - raw_app
  /w/{workspace}/apps/history/p/{path}:
    get:
      operationId: getAppHistoryByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id083
                  required: *id084
                  type: object
                type: array
          description: app history
      summary: get app history by path
      tags:
      - app
  /w/{workspace}/apps/history_update/a/{id}/v/{version}:
    post:
      operationId: updateAppHistory
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id055
      - in: path
        name: version
        required: true
        schema: *id085
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deployment_msg:
                  type: string
              type: object
        description: App deployment message
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: success
      summary: update app history
      tags:
      - app
  /w/{workspace}/apps/list:
    get:
      operationId: listApps
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: mask to filter matching starting path
        in: query
        name: path_start
        schema:
          type: string
      - description: mask to filter exact matching path
        in: query
        name: path_exact
        schema:
          type: string
      - description: '(default false)

          show only the starred items

          '
        in: query
        name: starred_only
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id088
                  required: *id089
                  type: object
                type: array
          description: All apps
      summary: list all apps
      tags:
      - app
  /w/{workspace}/apps/list_search:
    get:
      operationId: listSearchApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    path:
                      type: string
                    value: {}
                  required:
                  - path
                  - value
                  type: object
                type: array
          description: app list
      summary: list apps for search
      tags:
      - app
  /w/{workspace}/apps/secret_of/{path}:
    get:
      operationId: getPublicSecretOfApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: app secret
      summary: get public secret of app
      tags:
      - app
  /w/{workspace}/apps/update/{path}:
    post:
      operationId: updateApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deployment_message:
                  type: string
                path:
                  type: string
                policy:
                  properties: *id041
                  type: object
                summary:
                  type: string
                value: {}
              type: object
        description: update app
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: app updated
      summary: update app
      tags:
      - app
  /w/{workspace}/apps_u/execute_component/{path}:
    post:
      operationId: executeComponent
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                args: {}
                component:
                  type: string
                force_viewer_static_fields:
                  type: object
                path:
                  type: string
                raw_code:
                  properties:
                    cache_ttl:
                      type: integer
                    content:
                      type: string
                    language:
                      type: string
                    path:
                      type: string
                  required:
                  - content
                  - language
                  type: object
              required:
              - args
              - component
              type: object
        description: update app
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: job uuid
      summary: executeComponent
      tags:
      - app
  /w/{workspace}/apps_u/public_app/{path}:
    get:
      operationId: getPublicAppBySecret
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id001
                required: *id002
                type: object
          description: app details
      summary: get public app by secret
      tags:
      - app
  /w/{workspace}/apps_u/public_resource/{path}:
    get:
      operationId: get public resource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: resource value
      summary: get public resource
      tags:
      - app
  /w/{workspace}/audit/get/{id}:
    get:
      operationId: getAuditLog
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id055
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id090
                required: *id091
                type: object
          description: an audit log
      summary: get audit log (requires admin privilege)
      tags:
      - audit
  /w/{workspace}/audit/list:
    get:
      operationId: listAuditLogs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: filter on created before (exclusive) timestamp
        in: query
        name: before
        schema: *id092
      - description: filter on created after (exclusive) timestamp
        in: query
        name: after
        schema: *id093
      - description: filter on exact username of user
        in: query
        name: username
        schema: *id094
      - description: filter on exact or prefix name of operation
        in: query
        name: operation
        schema: *id095
      - description: filter on exact or prefix name of resource
        in: query
        name: resource
        schema: *id096
      - description: filter on type of operation
        in: query
        name: action_kind
        schema: *id097
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id090
                  required: *id091
                  type: object
                type: array
          description: a list of audit logs
      summary: list audit logs (requires admin privilege)
      tags:
      - audit
  /w/{workspace}/capture/{path}:
    get:
      operationId: getCapture
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: captured flow preview
        '404':
          description: capture does not exist for this flow
      summary: get flow preview capture
      tags:
      - capture
    put:
      operationId: createCapture
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '201':
          description: flow preview capture created
      summary: create flow preview capture
      tags:
      - capture
  /w/{workspace}/capture_u/{path}:
    post:
      operationId: updateCapture
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '204':
          description: flow preview captured
      summary: update flow preview capture
      tags:
      - capture
  /w/{workspace}/drafts/create:
    post:
      operationId: createDraft
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path:
                  type: string
                typ:
                  enum:
                  - flow
                  - script
                  - app
                  type: string
                value: {}
              required:
              - path
              - typ
              - enum
              type: object
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: draft created
      summary: create draft
      tags:
      - draft
  /w/{workspace}/drafts/delete/{kind}/{path}:
    delete:
      operationId: deleteDraft
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: kind
        required: true
        schema:
          enum:
          - script
          - flow
          - app
          type: string
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: draft deleted
      summary: delete draft
      tags:
      - draft
  /w/{workspace}/embeddings/query_resource_types:
    get:
      operationId: queryResourceTypes
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: query text
        in: query
        name: text
        required: true
        schema:
          type: string
      - description: query limit
        in: query
        name: limit
        required: false
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      type: string
                    schema: {}
                    score:
                      type: number
                  required:
                  - name
                  - score
                  type: object
                type: array
          description: resource type details
      summary: query resource types by similarity
      tags:
      - resource
  /w/{workspace}/favorites/star:
    post:
      operationId: star
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                favorite_kind:
                  enum:
                  - flow
                  - app
                  - script
                  - raw_app
                  type: string
                path:
                  type: string
              type: object
      responses:
        '200':
          description: star item
      summary: star item
      tags:
      - favorite
  /w/{workspace}/favorites/unstar:
    post:
      operationId: unstar
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                favorite_kind:
                  enum:
                  - flow
                  - app
                  - script
                  - raw_app
                  type: string
                path:
                  type: string
              type: object
      responses:
        '200':
          description: unstar item
      summary: unstar item
      tags:
      - favorite
  /w/{workspace}/flows/archive/{path}:
    post:
      operationId: archiveFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                archived:
                  type: boolean
              type: object
        description: archiveFlow
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: flow archived
      summary: archive flow by path
      tags:
      - flow
  /w/{workspace}/flows/create:
    post:
      operationId: createFlow
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - allOf: *id098
              - properties:
                  deployment_message:
                    type: string
                  draft_only:
                    type: boolean
                type: object
        description: Partially filled flow
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: flow created
      summary: create flow
      tags:
      - flow
  /w/{workspace}/flows/delete/{path}:
    delete:
      operationId: deleteFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: flow delete
      summary: delete flow by path
      tags:
      - flow
  /w/{workspace}/flows/exists/{path}:
    get:
      operationId: existsFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: flow details
      summary: exists flow by path
      tags:
      - flow
  /w/{workspace}/flows/get/draft/{path}:
    get:
      operationId: getFlowByPathWithDraft
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - allOf: *id099
                - properties:
                    draft:
                      allOf: *id099
                  type: object
          description: flow details with draft
      summary: get flow by path with draft
      tags:
      - flow
  /w/{workspace}/flows/get/{path}:
    get:
      operationId: getFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf: *id099
          description: flow details
      summary: get flow by path
      tags:
      - flow
  /w/{workspace}/flows/input_history/p/{path}:
    get:
      operationId: getFlowInputHistoryByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id100
                  required: *id101
                  type: object
                type: array
          description: input history for completed jobs with this flow path
      summary: list inputs for previous completed flow jobs
      tags:
      - flow
  /w/{workspace}/flows/list:
    get:
      operationId: listFlows
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: mask to filter matching starting path
        in: query
        name: path_start
        schema:
          type: string
      - description: mask to filter exact matching path
        in: query
        name: path_exact
        schema:
          type: string
      - description: '(default false)

          show also the archived files.

          when multiple archived hash share the same path, only the ones with the
          latest create_at

          are displayed.

          '
        in: query
        name: show_archived
        schema:
          type: boolean
      - description: '(default false)

          show only the starred items

          '
        in: query
        name: starred_only
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  allOf:
                  - allOf: *id099
                  - properties:
                      draft_only:
                        type: boolean
                      has_draft:
                        type: boolean
                    type: object
                type: array
          description: All flow
      summary: list all flows
      tags:
      - flow
  /w/{workspace}/flows/list_paths:
    get:
      operationId: listFlowPaths
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
          description: list of flow paths
      summary: list all flow paths
      tags:
      - flow
  /w/{workspace}/flows/list_search:
    get:
      operationId: listSearchFlow
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    path:
                      type: string
                    value: {}
                  required:
                  - path
                  - value
                  type: object
                type: array
          description: flow list
      summary: list flows for search
      tags:
      - flow
  /w/{workspace}/flows/toggle_workspace_error_handler/{path}:
    post:
      operationId: toggleWorkspaceErrorHandlerForFlow
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                muted:
                  type: boolean
              type: object
        description: Workspace error handler enabled
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: error handler toggled
      summary: Toggle ON and OFF the workspace error handler for a given flow
      tags:
      - flow
  /w/{workspace}/flows/update/{path}:
    post:
      operationId: updateFlow
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - allOf: *id098
              - properties:
                  deployment_message:
                    type: string
                type: object
        description: Partially filled flow
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: flow updated
      summary: update flow
      tags:
      - flow
  /w/{workspace}/folders/addowner/{name}:
    post:
      operationId: addOwnerToFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                owner:
                  type: string
              type: object
        description: owner user to folder
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: owner added to folder
      summary: add owner to folder
      tags:
      - folder
  /w/{workspace}/folders/create:
    post:
      operationId: createFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                extra_perms:
                  additionalProperties:
                    type: boolean
                name:
                  type: string
                owners:
                  items:
                    type: string
                  type: array
              required:
              - name
              type: object
        description: create folder
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: folder created
      summary: create folder
      tags:
      - folder
  /w/{workspace}/folders/delete/{name}:
    delete:
      operationId: deleteFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: folder deleted
      summary: delete folder
      tags:
      - folder
  /w/{workspace}/folders/get/{name}:
    get:
      operationId: getFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id102
                required: *id103
                type: object
          description: folder
      summary: get folder
      tags:
      - folder
  /w/{workspace}/folders/getusage/{name}:
    get:
      operationId: getFolderUsage
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  apps:
                    type: number
                  flows:
                    type: number
                  resources:
                    type: number
                  schedules:
                    type: number
                  scripts:
                    type: number
                  variables:
                    type: number
                required:
                - scripts
                - flows
                - apps
                - resources
                - variables
                - schedules
                type: object
          description: folder
      summary: get folder usage
      tags:
      - folder
  /w/{workspace}/folders/list:
    get:
      operationId: listFolders
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id102
                  required: *id103
                  type: object
                type: array
          description: folder list
      summary: list folders
      tags:
      - folder
  /w/{workspace}/folders/listnames:
    get:
      operationId: listFolderNames
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: only list the folders the user is member of (default false)
        in: query
        name: only_member_of
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: folder list
      summary: list folder names
      tags:
      - folder
  /w/{workspace}/folders/removeowner/{name}:
    post:
      operationId: removeOwnerToFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                owner:
                  type: string
              type: object
        description: added owner to folder
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: owner removed from folder
      summary: remove owner to folder
      tags:
      - folder
  /w/{workspace}/folders/update/{name}:
    post:
      operationId: updateFolder
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                extra_perms:
                  additionalProperties:
                    type: boolean
                owners:
                  items:
                    type: string
                  type: array
              type: object
        description: update folder
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: folder updated
      summary: update folder
      tags:
      - folder
  /w/{workspace}/groups/adduser/{name}:
    post:
      operationId: addUserToGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
              type: object
        description: added user to group
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: user added to group
      summary: add user to group
      tags:
      - group
  /w/{workspace}/groups/create:
    post:
      operationId: createGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                summary:
                  type: string
              required:
              - name
              type: object
        description: create group
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: group created
      summary: create group
      tags:
      - group
  /w/{workspace}/groups/delete/{name}:
    delete:
      operationId: deleteGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: group deleted
      summary: delete group
      tags:
      - group
  /w/{workspace}/groups/get/{name}:
    get:
      operationId: getGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id104
                required: *id105
                type: object
          description: group
      summary: get group
      tags:
      - group
  /w/{workspace}/groups/list:
    get:
      operationId: listGroups
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id104
                  required: *id105
                  type: object
                type: array
          description: group list
      summary: list groups
      tags:
      - group
  /w/{workspace}/groups/listnames:
    get:
      operationId: listGroupNames
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: only list the groups the user is member of (default false)
        in: query
        name: only_member_of
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: group list
      summary: list group names
      tags:
      - group
  /w/{workspace}/groups/removeuser/{name}:
    post:
      operationId: removeUserToGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
              type: object
        description: added user to group
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: user removed from group
      summary: remove user to group
      tags:
      - group
  /w/{workspace}/groups/update/{name}:
    post:
      operationId: updateGroup
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary:
                  type: string
              type: object
        description: updated group
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: group updated
      summary: update group
      tags:
      - group
  /w/{workspace}/inputs/create:
    post:
      operationId: createInput
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: runnable_id
        schema: *id106
      - in: query
        name: runnable_type
        schema: *id107
      requestBody:
        content:
          application/json:
            schema:
              properties: *id108
              required: *id109
              type: object
        description: Input
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: Input created
      summary: Create an Input for future use in a script or flow
      tags:
      - input
  /w/{workspace}/inputs/delete/{input}:
    post:
      operationId: deleteInput
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: input
        required: true
        schema: *id110
      responses:
        '200':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: Input deleted
      summary: Delete a Saved Input
      tags:
      - input
  /w/{workspace}/inputs/history:
    get:
      operationId: getInputHistory
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: runnable_id
        schema: *id106
      - in: query
        name: runnable_type
        schema: *id107
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id100
                  required: *id101
                  type: object
                type: array
          description: Input history for completed jobs
      summary: List Inputs used in previously completed jobs
      tags:
      - input
  /w/{workspace}/inputs/list:
    get:
      operationId: listInputs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: runnable_id
        schema: *id106
      - in: query
        name: runnable_type
        schema: *id107
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id100
                  required: *id101
                  type: object
                type: array
          description: Saved Inputs for a Runnable
      summary: List saved Inputs for a Runnable
      tags:
      - input
  /w/{workspace}/inputs/update:
    post:
      operationId: updateInput
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties: *id111
              required: *id112
              type: object
        description: UpdateInput
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: Input updated
      summary: Update an Input
      tags:
      - input
  /w/{workspace}/job_helpers/delete_s3_file:
    delete:
      operationId: deleteS3File
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: file_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Confirmation
      summary: Permanently delete file from S3
      tags:
      - helpers
  /w/{workspace}/job_helpers/duckdb_connection_settings:
    post:
      operationId: duckdbConnectionSettings
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_resource:
                  properties: *id113
                  required: *id114
                  type: object
              type: object
        description: S3 resource to connect to
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  connection_settings_str:
                    type: string
                type: object
          description: Connection settings
      summary: Converts an S3 resource to the set of instructions necessary to connect
        DuckDB to an S3 bucket
      tags:
      - helpers
  /w/{workspace}/job_helpers/list_stored_files:
    get:
      operationId: listStoredFiles
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: max_keys
        required: true
        schema:
          type: integer
      - in: query
        name: marker
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  next_marker:
                    type: string
                  windmill_large_files:
                    items:
                      properties: *id115
                      required: *id116
                      type: object
                    type: array
                required:
                - windmill_large_files
                type: object
          description: List of file keys
      summary: List the file keys available in the worspace files storage (S3)
      tags:
      - helpers
  /w/{workspace}/job_helpers/load_file_metadata:
    get:
      operationId: loadFileMetadata
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: file_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id117
                type: object
          description: FileMetadata
      summary: Load metadata of the file
      tags:
      - helpers
  /w/{workspace}/job_helpers/load_file_preview:
    get:
      operationId: loadFilePreview
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: file_key
        required: true
        schema:
          type: string
      - in: query
        name: file_size_in_bytes
        schema:
          type: integer
      - in: query
        name: file_mime_type
        schema:
          type: string
      - in: query
        name: csv_separator
        schema:
          type: string
      - in: query
        name: csv_has_header
        schema:
          type: boolean
      - in: query
        name: read_bytes_from
        schema:
          type: integer
      - in: query
        name: read_bytes_length
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id118
                required: *id119
                type: object
          description: FilePreview
      summary: Load a preview of the file
      tags:
      - helpers
  /w/{workspace}/job_helpers/move_s3_file:
    get:
      operationId: moveS3File
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: src_file_key
        required: true
        schema:
          type: string
      - in: query
        name: dest_file_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Confirmation
      summary: Move a S3 file from one path to the other within the same bucket
      tags:
      - helpers
  /w/{workspace}/job_helpers/multipart_upload_s3_file:
    post:
      operationId: multipartFileUpload
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cancel_upload:
                  type: boolean
                file_key:
                  type: string
                is_final:
                  type: boolean
                part_content:
                  items:
                    type: integer
                  type: array
                parts:
                  items:
                    properties: *id120
                    required: *id121
                    type: object
                  type: array
                s3_resource_path:
                  type: string
                upload_id:
                  type: string
              required:
              - file_key
              - part_content_base64
              - parts
              - is_final
              - cancel_upload
              type: object
        description: Query args for a multipart file upload to S3
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  is_done:
                    type: boolean
                  parts:
                    items:
                      properties: *id120
                      required: *id121
                      type: object
                    type: array
                  upload_id:
                    type: string
                required:
                - upload_id
                - parts
                - is_done
                type: object
          description: Chunk upload status
      summary: Upload file to S3 bucket using multipart upload
      tags:
      - helpers
  /w/{workspace}/job_helpers/polars_connection_settings:
    post:
      operationId: polarsConnectionSettings
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_resource:
                  properties: *id113
                  required: *id114
                  type: object
              type: object
        description: S3 resource to connect to
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  cache_regions:
                    type: boolean
                  client_kwargs:
                    properties: *id122
                    required: *id123
                    type: object
                  endpoint_url:
                    type: string
                  key:
                    type: string
                  secret:
                    type: string
                  use_ssl:
                    type: boolean
                required:
                - endpoint_url
                - use_ssl
                - cache_regions
                - client_kwargs
                type: object
          description: Connection settings
      summary: Converts an S3 resource to the set of arguments necessary to connect
        Polars to an S3 bucket
      tags:
      - helpers
  /w/{workspace}/job_helpers/test_connection:
    get:
      operationId: datasetStorageTestConnection
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Connection settings
      summary: Test connection to the workspace datasets storage
      tags:
      - helpers
  /w/{workspace}/job_helpers/v2/duckdb_connection_settings:
    post:
      operationId: duckdbConnectionSettingsV2
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_resource_path:
                  type: string
              type: object
        description: S3 resource path to use to generate the connection settings.
          If empty, the S3 resource defined in the workspace settings will be used
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  connection_settings_str:
                    type: string
                required:
                - connection_settings_str
                type: object
          description: Connection settings
      summary: Converts an S3 resource to the set of instructions necessary to connect
        DuckDB to an S3 bucket
      tags:
      - helpers
  /w/{workspace}/job_helpers/v2/polars_connection_settings:
    post:
      operationId: polarsConnectionSettingsV2
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_resource_path:
                  type: string
              type: object
        description: S3 resource path to use to generate the connection settings.
          If empty, the S3 resource defined in the workspace settings will be used
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  s3fs_args:
                    properties:
                      cache_regions:
                        type: boolean
                      client_kwargs:
                        properties: *id122
                        required: *id123
                        type: object
                      endpoint_url:
                        type: string
                      key:
                        type: string
                      secret:
                        type: string
                      use_ssl:
                        type: boolean
                    required:
                    - endpoint_url
                    - use_ssl
                    - cache_regions
                    - client_kwargs
                    type: object
                  storage_options:
                    properties:
                      aws_access_key_id:
                        type: string
                      aws_allow_http:
                        type: string
                      aws_endpoint_url:
                        type: string
                      aws_region:
                        type: string
                      aws_secret_access_key:
                        type: string
                    required:
                    - aws_endpoint_url
                    - aws_region
                    - aws_allow_http
                    type: object
                required:
                - s3fs_args
                - storage_options
                type: object
          description: Connection settings
      summary: Converts an S3 resource to the set of arguments necessary to connect
        Polars to an S3 bucket
      tags:
      - helpers
  /w/{workspace}/job_helpers/v2/s3_resource_info:
    post:
      operationId: s3ResourceInfo
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_resource_path:
                  type: string
              type: object
        description: S3 resource path to use. If empty, the S3 resource defined in
          the workspace settings will be used
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id113
                required: *id114
                type: object
          description: Connection settings
      summary: Returns the s3 resource associated to the provided path, or the workspace
        default S3 resource
      tags:
      - helpers
  /w/{workspace}/job_metrics/get/{id}:
    post:
      operationId: getJobMetrics
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      requestBody:
        content:
          application/json:
            schema:
              properties:
                from_timestamp:
                  format: date-time
                  type: string
                timeseries_max_datapoints:
                  type: integer
                to_timestamp:
                  format: date-time
                  type: string
              type: object
        description: parameters for statistics retrieval
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  metrics_metadata:
                    items:
                      properties: *id125
                      required: *id126
                      type: object
                    type: array
                  scalar_metrics:
                    items:
                      properties: *id127
                      required: *id128
                      type: object
                    type: array
                  timeseries_metrics:
                    items:
                      properties: *id129
                      required: *id130
                      type: object
                    type: array
                type: object
          description: job details
      summary: get job metrics
      tags:
      - metrics
  /w/{workspace}/jobs/completed/count:
    get:
      operationId: getCompletedCount
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  database_length:
                    type: integer
                required:
                - database_length
                type: object
          description: completed count
      summary: get completed count
      tags:
      - job
  /w/{workspace}/jobs/completed/delete/{id}:
    post:
      operationId: deleteCompletedJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id031
                required: *id032
                type: object
          description: job details
      summary: delete completed job (erase content but keep run id)
      tags:
      - job
  /w/{workspace}/jobs/completed/list:
    get:
      operationId: listCompletedJobs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: mask to filter exact matching path
        in: query
        name: script_path_exact
        schema: *id132
      - description: mask to filter matching starting path
        in: query
        name: script_path_start
        schema: *id133
      - description: mask to filter by schedule path
        in: query
        name: schedule_path
        schema: *id134
      - description: mask to filter exact matching path
        in: query
        name: script_hash
        schema: *id135
      - description: filter on started before (inclusive) timestamp
        in: query
        name: started_before
        schema: *id136
      - description: filter on started after (exclusive) timestamp
        in: query
        name: started_after
        schema: *id137
      - description: filter on successful jobs
        in: query
        name: success
        schema: *id138
      - description: filter on job kind (values 'preview', 'script', 'dependencies',
          'flow') separated by,
        in: query
        name: job_kinds
        schema: *id139
      - description: filter on jobs containing those args as a json subset (@> in
          postgres)
        in: query
        name: args
        schema: *id140
      - description: filter on jobs containing those result as a json subset (@> in
          postgres)
        in: query
        name: result
        schema: *id141
      - description: filter on jobs with a given tag/worker group
        in: query
        name: tag
        schema: *id142
      - description: is the job skipped
        in: query
        name: is_skipped
        schema:
          type: boolean
      - description: is the job a flow step
        in: query
        name: is_flow_step
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id031
                  required: *id032
                  type: object
                type: array
          description: All completed jobs
      summary: list all completed jobs
      tags:
      - job
  /w/{workspace}/jobs/flow/resume/{id}:
    post:
      operationId: resumeSuspendedFlowAsOwner
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: job resumed
      summary: resume a job for a suspended flow as an owner
      tags:
      - job
  /w/{workspace}/jobs/job_signature/{id}/{resume_id}:
    get:
      operationId: createJobSignature
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: query
        name: approver
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: job signature
      summary: create an HMac signature given a job id and a resume id
      tags:
      - job
  /w/{workspace}/jobs/list:
    get:
      operationId: listJobs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: mask to filter exact matching path
        in: query
        name: script_path_exact
        schema: *id132
      - description: mask to filter matching starting path
        in: query
        name: script_path_start
        schema: *id133
      - description: mask to filter by schedule path
        in: query
        name: schedule_path
        schema: *id134
      - description: mask to filter exact matching path
        in: query
        name: script_hash
        schema: *id135
      - description: filter on started before (inclusive) timestamp
        in: query
        name: started_before
        schema: *id136
      - description: filter on started after (exclusive) timestamp
        in: query
        name: started_after
        schema: *id137
      - description: filter on created_at for non non started job and started_at otherwise
          before (inclusive) timestamp
        in: query
        name: created_or_started_before
        schema: *id143
      - description: filter on running jobs
        in: query
        name: running
        schema: *id144
      - description: filter on jobs scheduled_for before now (hence waitinf for a
          worker)
        in: query
        name: scheduled_for_before_now
        schema: *id145
      - description: filter on created_at for non non started job and started_at otherwise
          after (exclusive) timestamp
        in: query
        name: created_or_started_after
        schema: *id146
      - description: filter on job kind (values 'preview', 'script', 'dependencies',
          'flow') separated by,
        in: query
        name: job_kinds
        schema: *id139
      - description: filter on jobs containing those args as a json subset (@> in
          postgres)
        in: query
        name: args
        schema: *id140
      - description: filter on jobs with a given tag/worker group
        in: query
        name: tag
        schema: *id142
      - description: filter on jobs containing those result as a json subset (@> in
          postgres)
        in: query
        name: result
        schema: *id141
      - description: is the job skipped
        in: query
        name: is_skipped
        schema:
          type: boolean
      - description: is the job a flow step
        in: query
        name: is_flow_step
        schema:
          type: boolean
      - description: filter on successful jobs
        in: query
        name: success
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  allOf: *id147
                  discriminator: *id148
                type: array
          description: All jobs
      summary: list all jobs
      tags:
      - job
  /w/{workspace}/jobs/openai_sync/f/{path}:
    post:
      operationId: openaiSyncFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: 'The maximum size of the queue for which the request would get
          rejected if that job would push it above that limit

          '
        in: query
        name: queue_limit
        schema: *id150
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: script args
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: run flow by path and wait until completion in openai format
      tags:
      - job
  /w/{workspace}/jobs/openai_sync/p/{path}:
    post:
      operationId: openaiSyncScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: 'The maximum size of the queue for which the request would get
          rejected if that job would push it above that limit

          '
        in: query
        name: queue_limit
        schema: *id150
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: script args
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: run script by path in openai format
      tags:
      - job
  /w/{workspace}/jobs/queue/cancel_all:
    post:
      operationId: cancelAll
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: uuids of canceled jobs
      summary: cancel all jobs
      tags:
      - job
  /w/{workspace}/jobs/queue/count:
    get:
      operationId: getQueueCount
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  database_length:
                    type: integer
                required:
                - database_length
                type: object
          description: queue count
      summary: get queue count
      tags:
      - job
  /w/{workspace}/jobs/queue/list:
    get:
      operationId: listQueue
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: mask to filter exact matching path
        in: query
        name: script_path_exact
        schema: *id132
      - description: mask to filter matching starting path
        in: query
        name: script_path_start
        schema: *id133
      - description: mask to filter by schedule path
        in: query
        name: schedule_path
        schema: *id134
      - description: mask to filter exact matching path
        in: query
        name: script_hash
        schema: *id135
      - description: filter on started before (inclusive) timestamp
        in: query
        name: started_before
        schema: *id136
      - description: filter on started after (exclusive) timestamp
        in: query
        name: started_after
        schema: *id137
      - description: filter on successful jobs
        in: query
        name: success
        schema: *id138
      - description: filter on jobs scheduled_for before now (hence waitinf for a
          worker)
        in: query
        name: scheduled_for_before_now
        schema: *id145
      - description: filter on job kind (values 'preview', 'script', 'dependencies',
          'flow') separated by,
        in: query
        name: job_kinds
        schema: *id139
      - description: filter on suspended jobs
        in: query
        name: suspended
        schema: *id152
      - description: filter on running jobs
        in: query
        name: running
        schema: *id144
      - description: filter on jobs containing those args as a json subset (@> in
          postgres)
        in: query
        name: args
        schema: *id140
      - description: filter on jobs containing those result as a json subset (@> in
          postgres)
        in: query
        name: result
        schema: *id141
      - description: filter on jobs with a given tag/worker group
        in: query
        name: tag
        schema: *id142
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id042
                  required: *id043
                  type: object
                type: array
          description: All queued jobs
      summary: list all queued jobs
      tags:
      - job
  /w/{workspace}/jobs/restart/f/{id}/from/{step_id}/{branch_or_iteration_n}:
    post:
      operationId: restartFlowAtStep
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - description: step id to restart the flow from
        in: path
        name: step_id
        required: true
        schema:
          type: string
      - description: for branchall or loop, the iteration at which the flow should
          restart
        in: path
        name: branch_or_iteration_n
        required: true
        schema:
          type: integer
      - description: when to schedule this job (leave empty for immediate run)
        in: query
        name: scheduled_for
        schema:
          format: date-time
          type: string
      - description: schedule the script to execute in the number of seconds starting
          now
        in: query
        name: scheduled_in_secs
        schema:
          type: integer
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: make the run invisible to the the flow owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: flow args
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: restart a completed flow at a given step
      tags:
      - job
  /w/{workspace}/jobs/result_by_id/{flow_job_id}/{node_id}:
    get:
      operationId: resultById
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: flow_job_id
        required: true
        schema:
          type: string
      - in: path
        name: node_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: get job result by id
      tags:
      - job
  /w/{workspace}/jobs/resume_urls/{id}/{resume_id}:
    get:
      operationId: getResumeUrls
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: query
        name: approver
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  approvalPage:
                    type: string
                  cancel:
                    type: string
                  resume:
                    type: string
                required:
                - approvalPage
                - resume
                - cancel
                type: object
          description: url endpoints
      summary: get resume urls given a job_id, resume_id and a nonce to resume a flow
      tags:
      - job
  /w/{workspace}/jobs/run/f/{path}:
    post:
      operationId: runFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: when to schedule this job (leave empty for immediate run)
        in: query
        name: scheduled_for
        schema:
          format: date-time
          type: string
      - description: schedule the script to execute in the number of seconds starting
          now
        in: query
        name: scheduled_in_secs
        schema:
          type: integer
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: make the run invisible to the the flow owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: flow args
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: run flow by path
      tags:
      - job
  /w/{workspace}/jobs/run/h/{hash}:
    post:
      operationId: runScriptByHash
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      - description: when to schedule this job (leave empty for immediate run)
        in: query
        name: scheduled_for
        schema:
          format: date-time
          type: string
      - description: schedule the script to execute in the number of seconds starting
          now
        in: query
        name: scheduled_in_secs
        schema:
          type: integer
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: make the run invisible to the the script owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Partially filled args
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: run script by hash
      tags:
      - job
  /w/{workspace}/jobs/run/p/{path}:
    post:
      operationId: runScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: when to schedule this job (leave empty for immediate run)
        in: query
        name: scheduled_for
        schema:
          format: date-time
          type: string
      - description: schedule the script to execute in the number of seconds starting
          now
        in: query
        name: scheduled_in_secs
        schema:
          type: integer
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: make the run invisible to the the script owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: script args
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: run script by path
      tags:
      - job
  /w/{workspace}/jobs/run/preview:
    post:
      operationId: runScriptPreview
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: make the run invisible to the the script owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      requestBody:
        content:
          application/json:
            schema:
              properties: *id155
              required: *id156
              type: object
        description: preview
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: run script preview
      tags:
      - job
  /w/{workspace}/jobs/run/preview_flow:
    post:
      operationId: runFlowPreview
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: make the run invisible to the the script owner (default false)
        in: query
        name: invisible_to_owner
        schema:
          type: boolean
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      requestBody:
        content:
          application/json:
            schema:
              properties: *id157
              required: *id158
              type: object
        description: preview
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                format: uuid
                type: string
          description: job created
      summary: run flow preview
      tags:
      - job
  /w/{workspace}/jobs/run_wait_result/f/{path}:
    post:
      operationId: runWaitResultFlowByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: 'The maximum size of the queue for which the request would get
          rejected if that job would push it above that limit

          '
        in: query
        name: queue_limit
        schema: *id150
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: script args
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: run flow by path and wait until completion
      tags:
      - job
  /w/{workspace}/jobs/run_wait_result/p/{path}:
    get:
      operationId: runWaitResultScriptByPathGet
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: 'The maximum size of the queue for which the request would get
          rejected if that job would push it above that limit

          '
        in: query
        name: queue_limit
        schema: *id150
      - description: 'The base64 encoded payload that has been encoded as a JSON.
          e.g how to encode such payload encodeURIComponent

          `encodeURIComponent(btoa(JSON.stringify({a: 2})))`

          '
        in: query
        name: payload
        schema: *id159
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: run script by path with get
      tags:
      - job
    post:
      operationId: runWaitResultScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      - description: The parent job that is at the origin and responsible for the
          execution of this script if any
        in: query
        name: parent_job
        schema: *id131
      - description: Override the tag to use
        in: query
        name: tag
        schema: *id153
      - description: The job id to assign to the created job. if missing, job is chosen
          randomly using the ULID scheme. If a job id already exists in the queue
          or as a completed job, the request to create one will fail (Bad Request)
        in: query
        name: job_id
        schema: *id151
      - description: 'List of headers''s keys (separated with '','') whove value are
          added to the args

          Header''s key lowercased and ''-'''' replaced to ''_'' such that ''Content-Type''
          becomes the ''content_type'' arg key

          '
        in: query
        name: include_header
        schema: *id149
      - description: 'The maximum size of the queue for which the request would get
          rejected if that job would push it above that limit

          '
        in: query
        name: queue_limit
        schema: *id150
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: *id013
              type: object
        description: script args
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: job result
      summary: run script by path
      tags:
      - job
  /w/{workspace}/jobs_u/cancel/{id}/{resume_id}/{signature}:
    get:
      operationId: cancelSuspendedJobGet
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: path
        name: signature
        required: true
        schema:
          type: string
      - in: query
        name: approver
        schema:
          type: string
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: job canceled
      summary: cancel a job for a suspended flow
      tags:
      - job
    post:
      operationId: cancelSuspendedJobPost
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: path
        name: signature
        required: true
        schema:
          type: string
      - in: query
        name: approver
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: job canceled
      summary: cancel a job for a suspended flow
      tags:
      - job
  /w/{workspace}/jobs_u/completed/get/{id}:
    get:
      operationId: getCompletedJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id031
                required: *id032
                type: object
          description: job details
      summary: get completed job
      tags:
      - job
  /w/{workspace}/jobs_u/completed/get_result/{id}:
    get:
      operationId: getCompletedJobResult
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: result
      summary: get completed job result
      tags:
      - job
  /w/{workspace}/jobs_u/completed/get_result_maybe/{id}:
    get:
      operationId: getCompletedJobResultMaybe
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: query
        name: get_started
        schema: *id160
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  completed:
                    type: boolean
                  result: {}
                  started:
                    type: boolean
                required:
                - completed
                - result
                type: object
          description: result
      summary: get completed job result if job is completed
      tags:
      - job
  /w/{workspace}/jobs_u/get/{id}:
    get:
      operationId: getJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf: *id147
                discriminator: *id148
          description: job details
      summary: get job
      tags:
      - job
  /w/{workspace}/jobs_u/get_flow/{id}/{resume_id}/{signature}:
    get:
      operationId: getSuspendedJobFlow
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: path
        name: signature
        required: true
        schema:
          type: string
      - in: query
        name: approver
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  approvers:
                    items:
                      properties:
                        approver:
                          type: string
                        resume_id:
                          type: integer
                      required:
                      - resume_id
                      - approver
                      type: object
                    type: array
                  job:
                    allOf: *id147
                    discriminator: *id148
                required:
                - job
                - approvers
                type: object
          description: parent flow details
      summary: get parent flow job of suspended job
      tags:
      - job
  /w/{workspace}/jobs_u/get_logs/{id}:
    get:
      operationId: getJob logs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: job details
      summary: get job logs
      tags:
      - job
  /w/{workspace}/jobs_u/getupdate/{id}:
    get:
      operationId: getJobUpdates
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: query
        name: running
        schema:
          type: boolean
      - in: query
        name: log_offset
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  completed:
                    type: boolean
                  mem_peak:
                    type: integer
                  new_logs:
                    type: string
                  running:
                    type: boolean
                type: object
          description: job details
      summary: get job updates
      tags:
      - job
  /w/{workspace}/jobs_u/queue/cancel/{id}:
    post:
      operationId: cancelQueuedJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  type: string
              type: object
        description: reason
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: job canceled
      summary: cancel queued job
      tags:
      - job
  /w/{workspace}/jobs_u/queue/cancel_persistent/{path}:
    post:
      operationId: cancelPersistentQueuedJobs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  type: string
              type: object
        description: reason
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: persistent job scaled down to zero
      summary: cancel all queued jobs for persistent script
      tags:
      - job
  /w/{workspace}/jobs_u/queue/force_cancel/{id}:
    post:
      operationId: forceCancelQueuedJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  type: string
              type: object
        description: reason
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: job canceled
      summary: force cancel queued job
      tags:
      - job
  /w/{workspace}/jobs_u/resume/{id}/{resume_id}/{signature}:
    get:
      operationId: resumeSuspendedJobGet
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - description: 'The base64 encoded payload that has been encoded as a JSON.
          e.g how to encode such payload encodeURIComponent

          `encodeURIComponent(btoa(JSON.stringify({a: 2})))`

          '
        in: query
        name: payload
        schema: *id159
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: path
        name: signature
        required: true
        schema:
          type: string
      - in: query
        name: approver
        schema:
          type: string
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: job resumed
      summary: resume a job for a suspended flow
      tags:
      - job
    post:
      operationId: resumeSuspendedJobPost
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id124
      - in: path
        name: resume_id
        required: true
        schema:
          type: integer
      - in: path
        name: signature
        required: true
        schema:
          type: string
      - in: query
        name: approver
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: job resumed
      summary: resume a job for a suspended flow
      tags:
      - job
  /w/{workspace}/oauth/connect_slack_callback:
    post:
      operationId: connectSlackCallback
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                state:
                  type: string
              required:
              - code
              - state
              type: object
        description: code endpoint
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: slack token
      summary: connect slack callback
      tags:
      - oauth
  /w/{workspace}/oauth/create_account:
    post:
      operationId: createAccount
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                client:
                  type: string
                expires_in:
                  type: integer
                owner:
                  type: string
                refresh_token:
                  type: string
              required:
              - expires_in
              - owner
              - client
              type: object
        description: code endpoint
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: account set
      summary: create OAuth account
      tags:
      - oauth
  /w/{workspace}/oauth/disconnect/{id}:
    post:
      operationId: disconnectAccount
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id161
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: disconnected client
      summary: disconnect account
      tags:
      - oauth
  /w/{workspace}/oauth/disconnect_slack:
    post:
      operationId: disconnectSlack
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: disconnected slack
      summary: disconnect slack
      tags:
      - oauth
  /w/{workspace}/oauth/refresh_token/{id}:
    post:
      operationId: refreshToken
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: id
        required: true
        schema: *id161
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path:
                  type: string
              required:
              - path
              type: object
        description: variable path
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: token refreshed
      summary: refresh token
      tags:
      - oauth
  /w/{workspace}/raw_apps/create:
    post:
      operationId: createRawApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path:
                  type: string
                summary:
                  type: string
                value:
                  type: string
              required:
              - path
              - value
              - summary
              type: object
        description: new raw app
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: raw app created
      summary: create raw app
      tags:
      - raw_app
  /w/{workspace}/raw_apps/delete/{path}:
    delete:
      operationId: deleteRawApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: app deleted
      summary: delete raw app
      tags:
      - raw_app
  /w/{workspace}/raw_apps/exists/{path}:
    get:
      operationId: existsRawApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: app exists
      summary: does an app exisst at path
      tags:
      - raw_app
  /w/{workspace}/raw_apps/list:
    get:
      operationId: listRawApps
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: mask to filter matching starting path
        in: query
        name: path_start
        schema:
          type: string
      - description: mask to filter exact matching path
        in: query
        name: path_exact
        schema:
          type: string
      - description: '(default false)

          show only the starred items

          '
        in: query
        name: starred_only
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id162
                  required: *id163
                  type: object
                type: array
          description: All raw apps
      summary: list all raw apps
      tags:
      - raw_app
  /w/{workspace}/raw_apps/update/{path}:
    post:
      operationId: updateRawApp
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                path:
                  type: string
                summary:
                  type: string
                value:
                  type: string
              type: object
        description: updateraw  app
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: app updated
      summary: update app
      tags:
      - raw_app
  /w/{workspace}/resources/create:
    post:
      operationId: createResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: update_if_exists
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties: *id164
              required: *id165
              type: object
        description: new resource
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: resource created
      summary: create resource
      tags:
      - resource
  /w/{workspace}/resources/delete/{path}:
    delete:
      operationId: deleteResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: resource deleted
      summary: delete resource
      tags:
      - resource
  /w/{workspace}/resources/exists/{path}:
    get:
      operationId: existsResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: does resource exists
      summary: does resource exists
      tags:
      - resource
  /w/{workspace}/resources/get/{path}:
    get:
      operationId: getResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id166
                required: *id167
                type: object
          description: resource
      summary: get resource
      tags:
      - resource
  /w/{workspace}/resources/get_value/{path}:
    get:
      operationId: getResourceValue
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: resource value
      summary: get resource value
      tags:
      - resource
  /w/{workspace}/resources/get_value_interpolated/{path}:
    get:
      operationId: getResourceValueInterpolated
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - description: job id
        in: query
        name: job_id
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: resource value
      summary: get resource interpolated (variables and resources are fully unrolled)
      tags:
      - resource
  /w/{workspace}/resources/list:
    get:
      operationId: listResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: resource_types to list from, separated by ',',
        in: query
        name: resource_type
        schema:
          type: string
      - description: resource_types to not list from, separated by ',',
        in: query
        name: resource_type_exclude
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id168
                  required: *id169
                  type: object
                type: array
          description: resource list
      summary: list resources
      tags:
      - resource
  /w/{workspace}/resources/list_names/{name}:
    get:
      operationId: listResourceNames
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: name
        required: true
        schema: *id058
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      type: string
                    path:
                      type: string
                  required:
                  - name
                  - path
                  type: object
                type: array
          description: resource list names
      summary: list resource names
      tags:
      - resource
  /w/{workspace}/resources/list_search:
    get:
      operationId: listSearchResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    path:
                      type: string
                    value: {}
                  required:
                  - path
                  - value
                  type: object
                type: array
          description: resource list
      summary: list resources for search
      tags:
      - resource
  /w/{workspace}/resources/type/create:
    post:
      operationId: createResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties: *id170
              required: *id171
              type: object
        description: new resource_type
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: resource_type created
      summary: create resource_type
      tags:
      - resource
  /w/{workspace}/resources/type/delete/{path}:
    delete:
      operationId: deleteResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: resource_type deleted
      summary: delete resource_type
      tags:
      - resource
  /w/{workspace}/resources/type/exists/{path}:
    get:
      operationId: existsResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: does resource_type exist
      summary: does resource_type exists
      tags:
      - resource
  /w/{workspace}/resources/type/get/{path}:
    get:
      operationId: getResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id170
                required: *id171
                type: object
          description: resource_type deleted
      summary: get resource_type
      tags:
      - resource
  /w/{workspace}/resources/type/list:
    get:
      operationId: listResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id170
                  required: *id171
                  type: object
                type: array
          description: resource_type list
      summary: list resource_types
      tags:
      - resource
  /w/{workspace}/resources/type/listnames:
    get:
      operationId: listResourceTypeNames
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: resource_type list
      summary: list resource_types names
      tags:
      - resource
  /w/{workspace}/resources/type/update/{path}:
    post:
      operationId: updateResourceType
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties: *id172
              type: object
        description: updated resource_type
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: resource_type updated
      summary: update resource_type
      tags:
      - resource
  /w/{workspace}/resources/update/{path}:
    post:
      operationId: updateResource
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties: *id173
              type: object
        description: updated resource
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: resource updated
      summary: update resource
      tags:
      - resource
  /w/{workspace}/resources/update_value/{path}:
    post:
      operationId: updateResourceValue
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value: {}
              type: object
        description: updated resource
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: resource value updated
      summary: update resource value
      tags:
      - resource
  /w/{workspace}/schedules/create:
    post:
      operationId: createSchedule
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties: *id174
              required: *id175
              type: object
        description: new schedule
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: schedule created
      summary: create schedule
      tags:
      - schedule
  /w/{workspace}/schedules/delete/{path}:
    delete:
      operationId: deleteSchedule
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: schedule deleted
      summary: delete schedule
      tags:
      - schedule
  /w/{workspace}/schedules/exists/{path}:
    get:
      operationId: existsSchedule
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: schedule exists
      summary: does schedule exists
      tags:
      - schedule
  /w/{workspace}/schedules/get/{path}:
    get:
      operationId: getSchedule
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id048
                required: *id049
                type: object
          description: schedule deleted
      summary: get schedule
      tags:
      - schedule
  /w/{workspace}/schedules/list:
    get:
      operationId: listSchedules
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: filter by path
        in: query
        name: path
        schema:
          type: string
      - in: query
        name: is_flow
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id048
                  required: *id049
                  type: object
                type: array
          description: schedule list
      summary: list schedules
      tags:
      - schedule
  /w/{workspace}/schedules/list_with_jobs:
    get:
      operationId: listSchedulesWithJobs
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  allOf: *id176
                type: array
          description: schedule list
      summary: list schedules with last 20 jobs
      tags:
      - schedule
  /w/{workspace}/schedules/setdefaulthandler:
    post:
      operationId: setDefaultErrorOrRecoveryHandler
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                extra_args:
                  type: object
                handler_type:
                  enum:
                  - error
                  - recovery
                  type: string
                number_of_occurence:
                  type: integer
                number_of_occurence_exact:
                  type: boolean
                override_existing:
                  type: boolean
                path:
                  type: string
                workspace_handler_muted:
                  type: boolean
              required:
              - handler_type
              - override_existing
              type: object
        description: Handler description
        required: true
      responses:
        '201':
          description: default error handler set
      summary: Set default error or recoevery handler
      tags:
      - schedule
  /w/{workspace}/schedules/setenabled/{path}:
    post:
      operationId: setScheduleEnabled
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  type: boolean
              required:
              - enabled
              type: object
        description: updated schedule enable
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: schedule enabled set
      summary: set enabled schedule
      tags:
      - schedule
  /w/{workspace}/schedules/update/{path}:
    post:
      operationId: updateSchedule
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      requestBody:
        content:
          application/json:
            schema:
              properties: *id177
              required: *id178
              type: object
        description: updated schedule
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: schedule updated
      summary: update schedule
      tags:
      - schedule
  /w/{workspace}/scripts/archive/h/{hash}:
    post:
      operationId: archiveScriptByHash
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id179
                required: *id180
                type: object
          description: script details
      summary: archive script by hash
      tags:
      - script
  /w/{workspace}/scripts/archive/p/{path}:
    post:
      operationId: archiveScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: script archived
      summary: archive script by path
      tags:
      - script
  /w/{workspace}/scripts/create:
    post:
      operationId: createScript
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties: *id033
              required: *id034
              type: object
        description: Partially filled script
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: script created
      summary: create script
      tags:
      - script
  /w/{workspace}/scripts/delete/h/{hash}:
    post:
      operationId: deleteScriptByHash
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id179
                required: *id180
                type: object
          description: script details
      summary: delete script by hash (erase content but keep hash, require admin)
      tags:
      - script
  /w/{workspace}/scripts/delete/p/{path}:
    post:
      operationId: deleteScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: script path
      summary: delete all scripts at a given path (require admin)
      tags:
      - script
  /w/{workspace}/scripts/deployment_status/h/{hash}:
    get:
      operationId: getScriptDeploymentStatus
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  lock:
                    type: string
                  lock_error_logs:
                    type: string
                type: object
          description: script details
      summary: get script deployment status
      tags:
      - script
  /w/{workspace}/scripts/exists/p/{path}:
    get:
      operationId: existsScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: does it exists
      summary: exists script by path
      tags:
      - script
  /w/{workspace}/scripts/get/draft/{path}:
    get:
      operationId: getScriptByPathWithDraft
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf: *id181
          description: script details
      summary: get script by path with draft
      tags:
      - script
  /w/{workspace}/scripts/get/h/{hash}:
    get:
      operationId: getScriptByHash
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id179
                required: *id180
                type: object
          description: script details
      summary: get script by hash
      tags:
      - script
  /w/{workspace}/scripts/get/p/{path}:
    get:
      operationId: getScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id179
                required: *id180
                type: object
          description: script details
      summary: get script by path
      tags:
      - script
  /w/{workspace}/scripts/history/p/{path}:
    get:
      operationId: getScriptHistoryByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id182
                  required: *id183
                  type: object
                type: array
          description: script history
      summary: get history of a script by path
      tags:
      - script
  /w/{workspace}/scripts/history_update/h/{hash}/p/{path}:
    post:
      operationId: updateScriptHistory
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: hash
        required: true
        schema: *id154
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deployment_msg:
                  type: string
              type: object
        description: Script deployment message
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: success
      summary: update history of a script
      tags:
      - script
  /w/{workspace}/scripts/list:
    get:
      operationId: listScripts
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      - description: order by desc order (default true)
        in: query
        name: order_desc
        schema: *id086
      - description: mask to filter exact matching user creator
        in: query
        name: created_by
        schema: *id087
      - description: mask to filter matching starting path
        in: query
        name: path_start
        schema:
          type: string
      - description: mask to filter exact matching path
        in: query
        name: path_exact
        schema:
          type: string
      - description: mask to filter scripts whom first direct parent has exact hash
        in: query
        name: first_parent_hash
        schema:
          type: string
      - description: "mask to filter scripts whom last parent in the chain has exact\
          \ hash. \nBeware that each script stores only a limited number of parents.\
          \ Hence\nthe last parent hash for a script is not necessarily its top-most\
          \ parent.\nTo find the top-most parent you will have to jump from last to\
          \ last hash\n until finding the parent\n"
        in: query
        name: last_parent_hash
        schema:
          type: string
      - description: 'is the hash present in the array of stored parent hashes for
          this script.

          The same warning applies than for last_parent_hash. A script only store
          a

          limited number of direct parent

          '
        in: query
        name: parent_hash
        schema:
          type: string
      - description: "(default false)\nshow also the archived files.\nwhen multiple\
          \ archived hash share the same path, only the ones with the latest create_at\n\
          are \ned.\n"
        in: query
        name: show_archived
        schema:
          type: boolean
      - description: '(default regardless)

          if true show only the templates

          if false show only the non templates

          if not defined, show all regardless of if the script is a template

          '
        in: query
        name: is_template
        schema:
          type: boolean
      - description: '(default regardless)

          script kinds to filter, split by comma

          '
        in: query
        name: kinds
        schema:
          type: string
      - description: '(default false)

          show only the starred items

          '
        in: query
        name: starred_only
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id179
                  required: *id180
                  type: object
                type: array
          description: All scripts
      summary: list all scripts
      tags:
      - script
  /w/{workspace}/scripts/list_paths:
    get:
      operationId: listScriptPaths
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
          description: list of script paths
      summary: list all scripts paths
      tags:
      - script
  /w/{workspace}/scripts/list_search:
    get:
      operationId: listSearchScript
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    content:
                      type: string
                    path:
                      type: string
                  required:
                  - path
                  - content
                  type: object
                type: array
          description: script list
      summary: list scripts for search
      tags:
      - script
  /w/{workspace}/scripts/raw/h/{path}:
    get:
      operationId: rawScriptByHash
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: script content
      summary: raw script by hash
      tags:
      - script
  /w/{workspace}/scripts/raw/p/{path}:
    get:
      operationId: rawScriptByPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: script content
      summary: raw script by path
      tags:
      - script
  /w/{workspace}/scripts/toggle_workspace_error_handler/p/{path}:
    post:
      operationId: toggleWorkspaceErrorHandlerForScript
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id065
      requestBody:
        content:
          application/json:
            schema:
              properties:
                muted:
                  type: boolean
              type: object
        description: Workspace error handler enabled
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: error handler toggled
      summary: Toggle ON and OFF the workspace error handler for a given script
      tags:
      - script
  /w/{workspace}/users/add:
    post:
      operationId: createUser
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties: *id184
              required: *id185
              type: object
        description: new user
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: user created
      summary: create user (require admin privilege)
      tags:
      - user
      - admin
  /w/{workspace}/users/delete/{username}:
    delete:
      operationId: deleteUser
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: delete user
      summary: delete user (require admin privilege)
      tags:
      - user
      - admin
  /w/{workspace}/users/is_owner/{path}:
    get:
      operationId: isOwnerOfPath
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: is owner
      summary: is owner of path
      tags:
      - user
  /w/{workspace}/users/list:
    get:
      operationId: listUsers
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id186
                  required: *id187
                  type: object
                type: array
          description: user
      summary: list users
      tags:
      - user
  /w/{workspace}/users/list_usernames:
    get:
      operationId: listUsernames
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: user
      summary: list usernames
      tags:
      - user
  /w/{workspace}/users/update/{username}:
    post:
      operationId: updateUser
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties: *id188
              type: object
        description: new user
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: edited user
      summary: update user (require admin privilege)
      tags:
      - user
      - admin
  /w/{workspace}/users/whoami:
    get:
      operationId: whoami
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id186
                required: *id187
                type: object
          description: user
      summary: whoami
      tags:
      - user
  /w/{workspace}/users/whois/{username}:
    get:
      operationId: whois
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id186
                required: *id187
                type: object
          description: user
      summary: whois
      tags:
      - user
  /w/{workspace}/variables/create:
    post:
      operationId: createVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: query
        name: already_encrypted
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties: *id189
              required: *id190
              type: object
        description: new variable
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: variable created
      summary: create variable
      tags:
      - variable
  /w/{workspace}/variables/delete/{path}:
    delete:
      operationId: deleteVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: variable deleted
      summary: delete variable
      tags:
      - variable
  /w/{workspace}/variables/encrypt:
    post:
      operationId: encryptValue
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: new variable
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: encrypted value
      summary: encrypt value
      tags:
      - variable
  /w/{workspace}/variables/exists/{path}:
    get:
      operationId: existsVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: variable
      summary: does variable exists at path
      tags:
      - variable
  /w/{workspace}/variables/get/{path}:
    get:
      operationId: getVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - description: 'ask to decrypt secret if this variable is secret

          (if not secret no effect, default: true)

          '
        in: query
        name: decrypt_secret
        schema:
          type: boolean
      - description: 'ask to include the encrypted value if secret and decrypt secret
          is not true (default: false)

          '
        in: query
        name: include_encrypted
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id191
                required: *id192
                type: object
          description: variable
      summary: get variable
      tags:
      - variable
  /w/{workspace}/variables/get_value/{path}:
    get:
      operationId: getVariableValue
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: variable
      summary: get variable value
      tags:
      - variable
  /w/{workspace}/variables/list:
    get:
      operationId: listVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id191
                  required: *id192
                  type: object
                type: array
          description: variable list
      summary: list variables
      tags:
      - variable
  /w/{workspace}/variables/list_contextual:
    get:
      operationId: listContextualVariables
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id193
                  required: *id194
                  type: object
                type: array
          description: contextual variable list
      summary: list contextual variables
      tags:
      - variable
  /w/{workspace}/variables/update/{path}:
    post:
      operationId: updateVariable
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      - in: path
        name: path
        required: true
        schema: *id080
      - in: query
        name: already_encrypted
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties: *id195
              type: object
        description: updated variable
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: variable updated
      summary: update variable
      tags:
      - variable
  /w/{workspace}/workspaces/add_user:
    post:
      operationId: addUser
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                is_admin:
                  type: boolean
                operator:
                  type: boolean
                username:
                  type: string
              required:
              - email
              - is_admin
              - operator
              - username
              type: object
        description: WorkspaceInvite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: add user to workspace
      tags:
      - workspace
  /w/{workspace}/workspaces/archive:
    post:
      operationId: archiveWorkspace
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: archive workspace
      tags:
      - workspace
  /w/{workspace}/workspaces/delete_invite:
    post:
      operationId: delete invite
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                is_admin:
                  type: boolean
                operator:
                  type: boolean
              required:
              - email
              - is_admin
              - operator
              type: object
        description: WorkspaceInvite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: delete user invite
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_auto_invite:
    post:
      operationId: editAutoInvite
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_all:
                  type: boolean
                operator:
                  type: boolean
              type: object
        description: WorkspaceInvite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit auto invite
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_copilot_config:
    post:
      operationId: editCopilotConfig
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code_completion_enabled:
                  type: boolean
                openai_resource_path:
                  type: string
              required:
              - code_completion_enabled
              type: object
        description: WorkspaceCopilotConfig
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit copilot config
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_deploy_to:
    post:
      operationId: editDeployTo
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deploy_to:
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit deploy to
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_error_handler:
    post:
      operationId: editErrorHandler
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error_handler:
                  type: string
                error_handler_extra_args:
                  additionalProperties: *id013
                  type: object
                error_handler_muted_on_cancel:
                  type: boolean
              type: object
        description: WorkspaceErrorHandler
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit error handler
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_git_sync_config:
    post:
      operationId: editWorkspaceGitSyncConfig
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                git_sync_settings:
                  properties: *id196
                  required: *id197
                  type: object
              type: object
        description: Workspace Git sync settings
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: status
      summary: edit workspace git sync settings
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_large_file_storage_config:
    post:
      operationId: editLargeFileStorageConfig
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                large_file_storage:
                  properties: *id198
                  type: object
              type: object
        description: LargeFileStorage info
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: status
      summary: edit large file storage settings
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_slack_command:
    post:
      operationId: editSlackCommand
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                slack_command_script:
                  type: string
              type: object
        description: WorkspaceInvite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit slack command
      tags:
      - workspace
  /w/{workspace}/workspaces/edit_webhook:
    post:
      operationId: editWebhook
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                webhook:
                  type: string
              type: object
        description: WorkspaceWebhook
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: edit webhook
      tags:
      - workspace
  /w/{workspace}/workspaces/get_copilot_info:
    get:
      operationId: getCopilotInfo
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                properties:
                  code_completion_enabled:
                    type: boolean
                  exists_openai_resource_path:
                    type: boolean
                required:
                - exists_openai_resource_path
                - code_completion_enabled
                type: object
          description: status
      summary: get copilot info
      tags:
      - workspace
  /w/{workspace}/workspaces/get_deploy_to:
    get:
      operationId: getDeployTo
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  deploy_to:
                    type: string
                type: object
          description: status
      summary: get deploy to
      tags:
      - workspace
  /w/{workspace}/workspaces/get_large_file_storage_config:
    get:
      operationId: getLargeFileStorageConfig
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id198
                type: object
          description: status
      summary: get large file storage config
      tags:
      - workspace
  /w/{workspace}/workspaces/get_settings:
    get:
      operationId: getSettings
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  auto_invite_domain:
                    type: string
                  auto_invite_operator:
                    type: boolean
                  code_completion_enabled:
                    type: boolean
                  customer_id:
                    type: string
                  deploy_to:
                    type: string
                  error_handler:
                    type: string
                  error_handler_extra_args:
                    additionalProperties: *id013
                    type: object
                  error_handler_muted_on_cancel:
                    type: boolean
                  git_sync:
                    properties: *id196
                    required: *id197
                    type: object
                  large_file_storage:
                    properties: *id198
                    type: object
                  openai_resource_path:
                    type: string
                  plan:
                    type: string
                  slack_command_script:
                    type: string
                  slack_name:
                    type: string
                  slack_team_id:
                    type: string
                  webhook:
                    type: string
                  workspace_id:
                    type: string
                required:
                - code_completion_enabled
                type: object
          description: status
      summary: get settings
      tags:
      - workspace
  /w/{workspace}/workspaces/invite_user:
    post:
      operationId: inviteUser
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                is_admin:
                  type: boolean
                operator:
                  type: boolean
              required:
              - email
              - is_admin
              - operator
              type: object
        description: WorkspaceInvite
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: invite user to workspace
      tags:
      - workspace
  /w/{workspace}/workspaces/is_premium:
    get:
      operationId: getIsPremium
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: status
      summary: get if workspace is premium
      tags:
      - workspace
  /w/{workspace}/workspaces/leave:
    post:
      operationId: leaveWorkspace
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: leave workspace
      tags:
      - workspace
  /w/{workspace}/workspaces/list_pending_invites:
    get:
      operationId: listPendingInvites
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id073
                  required: *id074
                  type: object
                type: array
          description: user
      summary: list pending invites for a workspace
      tags:
      - workspace
  /w/{workspace}/workspaces/premium_info:
    get:
      operationId: getPremiumInfo
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  premium:
                    type: boolean
                  seats:
                    type: number
                  usage:
                    type: number
                required:
                - premium
                type: object
          description: status
      summary: get premium info
      tags:
      - workspace
  /w/{workspace}/workspaces/run_slack_message_test_job:
    post:
      operationId: runSlackMessageTestJob
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  type: string
                hub_script_path:
                  type: string
                test_msg:
                  type: string
              type: object
        description: path to hub script to run and its corresponding args
        required: true
      responses:
        '200':
          content:
            text/json:
              schema:
                properties:
                  job_uuid:
                    type: string
                type: object
          description: status
      summary: run a job that sends a message to Slack
      tags:
      - workspace
  /workers/custom_tags:
    get:
      operationId: getCustomTags
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: list of custom tags
      summary: get all instance custom tags (tags are used to dispatch jobs to different
        worker groups)
      tags:
      - worker
  /workers/exists_worker_with_tag:
    get:
      operationId: existsWorkerWithTag
      parameters:
      - in: query
        name: tag
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: whether a worker with the tag exists
      summary: exists worker with tag
      tags:
      - worker
  /workers/list:
    get:
      operationId: listWorkers
      parameters:
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id199
                  required: *id200
                  type: object
                type: array
          description: a list of workers
      summary: list workers
      tags:
      - worker
  /workspaces/allowed_domain_auto_invite:
    get:
      operationId: isDomainAllowed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: domain allowed or not
      summary: is domain allowed for auto invi
      tags:
      - workspace
  /workspaces/create:
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              properties: *id201
              required: *id202
              type: object
        description: new token
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: token created
      summary: create workspace
      tags:
      - workspace
  /workspaces/delete/{workspace}:
    delete:
      operationId: deleteWorkspace
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: delete workspace (require super admin)
      tags:
      - workspace
  /workspaces/exists:
    post:
      operationId: existsWorkspace
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
              required:
              - id
              type: object
        description: id of workspace
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: boolean
          description: status
      summary: exists workspace
      tags:
      - workspace
  /workspaces/exists_username:
    post:
      operationId: existsUsername
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                username:
                  type: string
              required:
              - id
              - username
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: boolean
          description: status
      summary: exists username
      tags:
      - workspace
  /workspaces/list:
    get:
      operationId: listWorkspaces
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id203
                  required: *id204
                  type: object
                type: array
          description: all workspaces
      summary: list all workspaces visible to me
      tags:
      - workspace
  /workspaces/list_as_superadmin:
    get:
      operationId: listWorkspacesAsSuperAdmin
      parameters:
      - description: which page to return (start at 1, default 1)
        in: query
        name: page
        schema: *id069
      - description: number of items to return for a given page (default 30, max 100)
        in: query
        name: per_page
        schema: *id070
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *id203
                  required: *id204
                  type: object
                type: array
          description: workspaces
      summary: list all workspaces as super admin (require to be super admin)
      tags:
      - workspace
  /workspaces/unarchive/{workspace}:
    post:
      operationId: unarchiveWorkspace
      parameters:
      - in: path
        name: workspace
        required: true
        schema: *id066
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: status
      summary: unarchive workspace
      tags:
      - workspace
  /workspaces/users:
    get:
      operationId: listUserWorkspaces
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *id205
                required: *id206
                type: object
          description: workspace with associated username
      summary: list all workspaces visible to me with user info
      tags:
      - workspace
security:
- bearerAuth: []
- cookieAuth: []
servers:
- url: /api
