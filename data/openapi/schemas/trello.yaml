openapi: 3.0.0
info:
  title: Trello REST API
  version: 0.0.1
servers:
  - url: https://api.trello.com/1
security:
  - APIKey: []
    APIToken: []
paths:
  /actions/{idAction}/reactions:
    get:
      deprecated: false
      description: List reactions for an action
      operationId: get-actions-idaction-reactions
      parameters:
        - description: Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: Whether to load the emoji as a nested resource.
          in: query
          name: emoji
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          description: Success
      summary: Get Action's Reactions
      tags: []
    parameters:
      - description: The ID of the action
        in: path
        name: idAction
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Adds a new reaction to an action
      operationId: post-actions-idaction-reactions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                native:
                  description: The emoji to add as a native unicode emoji. See [/emoji](#emoji)
                  type: string
                shortName:
                  description: The primary `shortName` of the emoji to add. See [/emoji](#emoji)
                  type: string
                skinVariation:
                  description: The `skinVariation` of the emoji to add. See [/emoji](#emoji)
                  type: string
                unified:
                  description: The `unified` value of the emoji to add. See [/emoji](#emoji)
                  type: string
              type: object
      responses:
        '200':
          description: Success
      summary: Create Reaction for Action
      tags: []
  /actions/{idAction}/reactions/{id}:
    delete:
      deprecated: false
      description: Deletes a reaction
      operationId: delete-actions-idaction-reactions-id
      responses:
        '200':
          description: Success
      summary: Delete Action's Reaction
      tags: []
    get:
      deprecated: false
      description: Get information for a reaction
      operationId: get-actions-idaction-reactions-id
      parameters:
        - description: Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: Whether to load the emoji as a nested resource.
          in: query
          name: emoji
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          description: Success
      summary: Get Action's Reaction
      tags: []
    parameters:
      - description: The ID of the Action
        in: path
        name: idAction
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the reaction
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
  /actions/{idAction}/reactionsSummary:
    get:
      deprecated: false
      description: List a summary of all reactions for an action
      operationId: get-actions-idaction-reactionsummary
      parameters:
        - description: The ID of the action
          in: path
          name: idAction
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: List Action's summary of Reactions
      tags: []
  /actions/{id}:
    delete:
      deprecated: false
      description: Delete a specific action. Only comment actions can be deleted.
      operationId: delete-actions-id
      responses:
        '200':
          description: Success
      summary: Delete an Action
      tags: []
    get:
      deprecated: false
      description: Get an Action
      operationId: get-actions-id
      parameters:
        - description: ''
          in: query
          name: display
          required: false
          schema:
            default: true
            type: boolean
        - description: ''
          in: query
          name: entities
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of action [fields](/cloud/trello/guides/rest-api/object-definitions/#action-object)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: ''
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            type: string
        - description: Whether to include the member object for the creator of the action
          in: query
          name: memberCreator
          required: false
          schema:
            default: true
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            type: string
      responses:
        '200':
          description: Success
      summary: Get an Action
      tags: []
    parameters:
      - description: The ID of the Action
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a specific Action. Only comment actions can be updated. Used to edit the content of a comment.
      operationId: put-actions-id
      parameters:
        - description: The new text for the comment
          in: query
          name: text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Update an Action
      tags: []
  /actions/{id}/board:
    get:
      deprecated: false
      description: Get the Board for an Action
      operationId: get-actions-id-board
      parameters:
        - description: The ID of the action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of board fields'
          in: query
          name: fields
          required: false
          schema:
            enum: &ref_23
              - id
              - name
              - desc
              - descData
              - closed
              - idMemberCreator
              - idOrganization
              - pinned
              - url
              - shortUrl
              - prefs
              - labelNames
              - starred
              - limits
              - memberships
              - enterpriseOwned
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_6
                  closed:
                    example: false
                    type: boolean
                  creationMethod:
                    nullable: true
                    type: string
                  dateLastActivity:
                    format: date
                    type: string
                  dateLastView:
                    format: date
                    type: string
                  datePluginDisable:
                    format: date
                    nullable: true
                    type: string
                  desc:
                    example: Track changes to Trello's Platform on this board.
                    type: string
                  descData:
                    type: string
                  enterpriseOwned:
                    type: boolean
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idMemberCreator:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idOrganization:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idTags:
                    type: string
                  ixUpdate:
                    type: integer
                  labelNames:
                    properties:
                      black:
                        example: Capabilties
                        type: string
                      blue:
                        example: News
                        type: string
                      green:
                        example: Addition
                        type: string
                      lime:
                        example: Delight
                        type: string
                      orange:
                        example: Deprecation
                        type: string
                      pink:
                        example: REST API
                        type: string
                      purple:
                        example: Power-Ups
                        type: string
                      red:
                        example: Deletion
                        type: string
                      sky:
                        example: Announcement
                        type: string
                      yellow:
                        example: Update
                        type: string
                    type: object
                  limits:
                    type: object
                    properties: &ref_1
                      attachments:
                        properties:
                          perBoard:
                            type: object
                            properties: &ref_2
                              disableAt:
                                example: 36000
                                type: number
                              status:
                                enum:
                                  - ok
                                  - warning
                                type: string
                              warnAt:
                                example: 32400
                                type: number
                        type: object
                  memberships:
                    type: string
                  name:
                    description: The name of the board.
                    example: Trello Platform Changes
                    type: string
                  pinned:
                    example: false
                    type: boolean
                  powerUps:
                    type: string
                  prefs:
                    properties: &ref_58
                      background:
                        example: 5abbe4b7ddc1b351ef961414
                        pattern: ^[0-9a-fA-F]{24}$
                        type: string
                      backgroundBottomColor:
                        example: '#1e2e00'
                        type: string
                      backgroundBrightness:
                        example: dark
                        type: string
                      backgroundImage:
                        format: uri
                        type: string
                      backgroundImageScaled:
                        items:
                          properties: &ref_53
                            height:
                              description: The height of the image.
                              example: 64
                              type: integer
                            url:
                              description: The URL of the image.
                              example: https://trello-backgrounds.s3.amazonaws.com/SharedBackground/100x64/abc/photo-123.jpg
                              format: url
                              type: string
                            width:
                              description: The width of the image.
                              example: 100
                              type: integer
                          type: object
                        type: array
                      backgroundTile:
                        type: boolean
                      backgroundTopColor:
                        example: '#ffffff'
                        type: string
                      calendarFeedEnabled:
                        type: boolean
                      canBeEnterprise:
                        type: boolean
                      canBeOrg:
                        type: boolean
                      canBePrivate:
                        type: boolean
                      canBePublic:
                        type: boolean
                      canInvite:
                        type: boolean
                      cardAging:
                        enum: &ref_44
                          - pirate
                          - regular
                        type: string
                      cardCovers:
                        type: boolean
                      comments:
                        type: string
                      hideVotes:
                        type: boolean
                      invitations:
                        enum:
                          - admins
                          - members
                      isTemplate:
                        type: boolean
                      permissionLevel:
                        enum:
                          - org
                          - board
                        type: string
                      selfJoin:
                        type: boolean
                      voting:
                        enum:
                          - disabled
                          - enabled
                        type: string
                    type: object
                  shortLink:
                    type: string
                  shortUrl:
                    example: https://trello.com/b/dQHqCohZ
                    format: url
                    type: string
                  starred:
                    type: boolean
                  subscribed:
                    type: boolean
                  templateGallery:
                    nullable: true
                    type: string
                  url:
                    example: https://trello.com/b/dQHqCohZ/trello-platform-changelog
                    format: url
                    type: string
                required: &ref_7
                  - id
                type: object
          description: Success
      summary: Get the Board for an Action
      tags: []
  /actions/{id}/card:
    get:
      deprecated: false
      description: Get the card for an action
      operationId: get-actions-id-card
      parameters:
        - description: The ID of the action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of card fields'
          in: query
          name: fields
          required: false
          schema:
            default: all
            description: The fields on a Card.
            enum: &ref_17
              - id
              - address
              - badges
              - checkItemStates
              - closed
              - coordinates
              - creationMethod
              - dueComplete
              - dateLastActivity
              - desc
              - descData
              - due
              - dueReminder
              - email
              - idBoard
              - idChecklists
              - idLabels
              - idList
              - idMembers
              - idMembersVoted
              - idShort
              - idAttachmentCover
              - labels
              - limits
              - locationName
              - manualCoverAttachment
              - name
              - pos
              - shortLink
              - shortUrl
              - subscribed
              - url
              - cover
              - isTemplate
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_14
                  address:
                    nullable: true
                    type: string
                  badges:
                    properties:
                      attachments:
                        example: 0
                        type: integer
                      attachmentsByType:
                        properties:
                          trello:
                            properties:
                              board:
                                type: number
                              card:
                                type: number
                            type: object
                        type: object
                      checkItems:
                        example: 0
                        type: integer
                      checkItemsChecked:
                        example: 0
                        type: integer
                      comments:
                        example: 0
                        type: integer
                      description:
                        type: boolean
                      due:
                        format: date
                        nullable: true
                        type: string
                      dueComplete:
                        type: boolean
                      fogbugz:
                        type: string
                      location:
                        type: boolean
                      start:
                        format: date
                        nullable: true
                        type: string
                      subscribed:
                        example: false
                        type: boolean
                      viewingMemberVoted:
                        example: false
                        type: boolean
                      votes:
                        type: integer
                    type: object
                  checkItemStates:
                    items:
                      oneOf:
                        - type: string
                    type: array
                  closed:
                    type: boolean
                  coordinates:
                    nullable: true
                    type: string
                  cover:
                    properties:
                      brightness:
                        enum:
                          - light
                          - dark
                        type: string
                      color:
                        nullable: true
                        enum: &ref_0
                          - yellow
                          - purple
                          - blue
                          - red
                          - green
                          - orange
                          - black
                          - sky
                          - pink
                          - lime
                        type: string
                      idAttachment:
                        nullable: true
                        type: string
                        example: 5abbe4b7ddc1b351ef961414
                        pattern: ^[0-9a-fA-F]{24}$
                      idUploadedBackground:
                        nullable: true
                        type: boolean
                      isTemplate:
                        example: false
                        type: boolean
                      size:
                        enum:
                          - normal
                        type: string
                    type: object
                  creationMethod:
                    nullable: true
                    type: string
                  dateLastActivity:
                    example: '2019-09-16T16:19:17.156Z'
                    format: date-time
                    type: string
                  desc:
                    example: |-
                      👋Hey there,

                      Trello's Platform team uses this board to keep developers up-to-date.
                    type: string
                  descData:
                    properties:
                      emoji:
                        type: object
                    type: object
                  due:
                    format: date
                    nullable: true
                    type: string
                  dueReminder:
                    nullable: true
                    type: string
                  email:
                    example: bentleycook+2kea95u7kchsvqnxkwe+2q0byi6qv4pt9uc7q5m+25qyyohtzg@boards.trello.com
                    format: email
                    type: string
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idAttachmentCover:
                    example: 5abbe4b7ddc1b351ef961415
                    nullable: true
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
                  idBoard:
                    example: 5abbe4b7ddc1b351ef961414
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
                  idChecklists:
                    items:
                      oneOf:
                        - properties: &ref_46
                            id:
                              example: 5abbe4b7ddc1b351ef961414
                              pattern: ^[0-9a-fA-F]{24}$
                              type: string
                          type: object
                        - example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                    type: array
                  idLabels:
                    items:
                      oneOf:
                        - properties: &ref_10
                            color:
                              description: The color of the label. Null means no color and the label will not be shown on the front of Cards.
                              type: string
                              enum: *ref_0
                              nullable: true
                            id:
                              description: The ID of the label.
                              type: string
                              example: 5abbe4b7ddc1b351ef961414
                              pattern: ^[0-9a-fA-F]{24}$
                            idBoard:
                              description: The ID of the board the label is on.
                              example: 5abbe4b7ddc1b351ef961414
                              type: string
                              pattern: ^[0-9a-fA-F]{24}$
                            name:
                              description: The name displayed for the label.
                              example: Overdue
                              maxLength: 16384
                              minLength: 0
                              nullable: true
                              type: string
                          type: object
                        - example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                    type: array
                  idList:
                    example: 5abbe4b7ddc1b351ef961415
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
                  idMembers:
                    items:
                      oneOf:
                        - example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                    type: array
                  idMembersVoted:
                    items:
                      oneOf:
                        - example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                    type: array
                  idShort:
                    type: integer
                  labels:
                    items:
                      oneOf:
                        - example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                    type: array
                  limits:
                    type: object
                    properties: *ref_1
                  locationName:
                    nullable: true
                    type: string
                  manualCoverAttachment:
                    example: false
                    type: boolean
                  name:
                    example: 👋 What? Why? How?
                    type: string
                  pos:
                    example: 65535
                    format: float
                    type: number
                  shortLink:
                    example: H0TZyzbK
                    type: string
                  shortUrl:
                    example: https://trello.com/c/H0TZyzbK
                    format: url
                    type: string
                  subscribed:
                    example: false
                    type: boolean
                  url:
                    example: https://trello.com/c/H0TZyzbK/4-%F0%9F%91%8B-what-why-how
                    format: url
                    type: string
                type: object
          description: Success
      summary: Get the Card for an Action
      tags: []
  /actions/{id}/list:
    get:
      deprecated: false
      description: Get the List for an Action
      operationId: get-actions-id-list
      parameters:
        - description: The ID of the action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of list fields'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: &ref_34
              - id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_12
                  closed:
                    type: boolean
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idBoard:
                    type: string
                  limits:
                    properties: *ref_1
                    type: object
                  name:
                    description: The name of the list
                    example: Things to buy today
                    type: string
                  pos:
                    type: number
                  softLimit:
                    type: string
                  subscribed:
                    type: boolean
                type: object
          description: Success
      summary: Get the List for an Action
      tags: []
  /actions/{id}/member:
    get:
      deprecated: false
      description: Gets the member of an action (not the creator)
      operationId: get-actions-id-member
      parameters:
        - description: The ID of the Action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of member fields'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: &ref_3
              - id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_4
                  aaEmail:
                    example: null
                    format: email
                    nullable: true
                    type: string
                  aaEnrolledDate:
                    example: null
                    nullable: true
                    type: string
                  aaId:
                    example: null
                    nullable: true
                    type: string
                  activityBlocked:
                    example: false
                    type: boolean
                  avatarHash:
                    example: fc8faaaee46666a4eb8b626c08933e16
                    type: string
                  avatarSource:
                    enum:
                      - gravatar
                      - upload
                    example: gravatar
                    type: string
                  avatarUrl:
                    example: https://trello-avatars.s3.amazonaws.com/fc8faaaee46666a4eb8b626c08933e16
                    format: url
                    type: string
                  bio:
                    example: 👋 I'm a developer advocate at Trello!
                    type: string
                  bioData:
                    properties:
                      emoji:
                        type: object
                    type: object
                  confirmed:
                    example: true
                    type: boolean
                  email:
                    example: bcook@atlassian.com
                    type: string
                  fullName:
                    example: Bentley Cook
                    type: string
                  gravatarHash:
                    example: 0a1e804f6e35a65ae5e1f7ef4c92471c
                    type: string
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idBoards:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  idBoardsPinned:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    nullable: true
                    type: array
                  idEnterprise:
                    type: string
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                  idEnterprisesAdmin:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  idEnterprisesDeactivated:
                    items:
                      type: string
                    type: array
                  idMemberReferrer:
                    example: null
                    nullable: true
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idOrganizations:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  idPremOrgsAdmin:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  initials:
                    example: BC
                    type: string
                  isAaMastered:
                    example: false
                    type: boolean
                  ixUpdate:
                    example: '48427'
                    type: number
                  limits:
                    properties: *ref_2
                    type: object
                  loginTypes:
                    items:
                      enum:
                        - password
                        - saml
                      example: password
                      type: string
                    type: array
                  marketingOptIn:
                    properties:
                      date:
                        example: '2018-04-26T17:03:25.155Z'
                        format: date
                        type: string
                      optedIn:
                        example: false
                        type: boolean
                    type: object
                  memberType:
                    enum:
                      - normal
                      - ghost
                    example: normal
                    type: string
                  messagesDismissed:
                    properties:
                      _id:
                        example: 5995d44573d197eada632a32
                        pattern: ^[0-9a-fA-F]{24}$
                        type: string
                      count:
                        example: 4
                        type: string
                      lastDismissed:
                        example: '2019-03-11T20:19:46.809Z'
                        format: date
                        type: string
                      name:
                        example: ad-security-features
                        type: string
                    type: object
                  nonPublic:
                    description: |
                      Profile data with restricted visibility. These fields are visible only to members of the
                      same organization. The values here (full name, for example) may differ from the values
                      at the top level of the response.
                    properties:
                      avatarHash:
                        example: db2adf80c2e6c26b76e1f10400eb4c45
                        type: string
                      avatarUrl:
                        description: A URL that references the non-public avatar for the member
                        example: https://trello-members.s3.amazonaws.com/5b02e7f4e1facdc393169f9d/db2adf80c2e6c26b76e1f10400eb4c45
                        format: url
                        type: string
                      fullName:
                        example: Bentley Cook
                        type: string
                      initials:
                        example: BC
                        type: string
                    type: object
                  nonPublicAvailable:
                    description: Whether the response contains non-public profile data for the member
                    example: false
                    type: boolean
                  oneTimeMessagesDismissed:
                    items:
                      type: string
                    type: array
                  prefs:
                    properties: &ref_54
                      colorBlind:
                        example: true
                        type: boolean
                      locale:
                        example: en-AU
                        type: string
                      minutesBeforeDeadlineToNotify:
                        example: 1440
                        type: integer
                      minutesBetweenSummaries:
                        example: 60
                        type: integer
                      privacy:
                        properties:
                          avatar:
                            enum:
                              - public
                              - private
                              - collaborator
                            example: public
                            type: string
                          fullName:
                            enum:
                              - public
                              - private
                              - collaborator
                            example: public
                            type: string
                        type: object
                      sendSummaries:
                        example: true
                        type: boolean
                      timezone:
                        example: America/Chicago
                        type: string
                      timezoneInfo:
                        properties:
                          dateNext:
                            example: '2020-03-08T08:00:00.000Z'
                            format: date
                            type: string
                          offsetCurrent:
                            example: 360
                            type: integer
                          offsetNext:
                            example: 300
                            type: integer
                          timezoneCurrent:
                            example: CST
                            type: string
                          timezoneNext:
                            example: CDT
                            type: string
                        type: object
                      twoFactor:
                        properties:
                          enabled:
                            example: true
                            type: boolean
                          needsNewBackups:
                            example: false
                            type: boolean
                        type: object
                    type: object
                  premiumFeatures:
                    items:
                      type: string
                    type: array
                  products:
                    items:
                      type: integer
                    type: array
                  status:
                    enum:
                      - disconnected
                    example: disconnected
                    type: string
                  trophies:
                    items:
                      type: string
                    type: array
                  uploadedAvatarHash:
                    example: dac3ad49ff117829dd63a79bb2ea3426
                    type: string
                  uploadedAvatarUrl:
                    example: https://trello-avatars.s3.amazonaws.com/dac3ad49ff117829dd63a79bb2ea3426
                    format: url
                    type: string
                  url:
                    example: https://trello.com/bentleycook
                    format: url
                    type: string
                  username:
                    example: bentleycook
                    type: string
                type: object
          description: Success
      summary: Get the Member of an Action
      tags: []
  /actions/{id}/memberCreator:
    get:
      deprecated: false
      description: Get the Member who created the Action
      operationId: get-actions-id-membercreator
      parameters:
        - description: The ID of the Action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of member fields'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_3
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_4
                type: object
          description: Success
      summary: Get the Member Creator of an Action
      tags: []
  /actions/{id}/organization:
    get:
      deprecated: false
      description: Get the Organization of an Action
      operationId: get-actions-id-organization
      parameters:
        - description: The ID of the action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of organization fields'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: &ref_22
              - id
              - name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_19
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                type: object
          description: Success
      summary: Get the Organization of an Action
      tags: []
  /actions/{id}/text:
    put:
      deprecated: false
      description: Update a comment action
      operationId: put-actions-id-text
      parameters:
        - description: The ID of the action to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The new text for the comment
          in: query
          name: value
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Update a Comment Action
      tags: []
  /actions/{id}/{field}:
    get:
      deprecated: false
      description: Get a specific property of an action
      operationId: get-actions-id-field
      parameters:
        - description: The ID of the Action
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An action field
          in: path
          name: field
          required: true
          schema:
            enum: &ref_42
              - id
              - idMemberCreator
              - data
              - type
              - date
              - limits
              - display
              - memberCreator
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_5
                  data:
                    properties:
                      board:
                        properties:
                          id:
                            type: string
                            example: 5abbe4b7ddc1b351ef961414
                            pattern: ^[0-9a-fA-F]{24}$
                          name:
                            example: Mullets
                            type: string
                          shortLink:
                            example: 3CsPkqOF
                            type: string
                        type: object
                      card:
                        properties:
                          id:
                            type: string
                            example: 5abbe4b7ddc1b351ef961414
                            pattern: ^[0-9a-fA-F]{24}$
                          idShort:
                            example: 7
                            type: integer
                          name:
                            example: Bowie
                            type: string
                          shortLink:
                            example: 3CsPkqOF
                            type: string
                        type: object
                      list:
                        properties:
                          id:
                            type: string
                            example: 5abbe4b7ddc1b351ef961414
                            pattern: ^[0-9a-fA-F]{24}$
                          name:
                            example: Amazing
                            type: string
                        type: object
                      text:
                        example: Can never go wrong with bowie
                        type: string
                    type: object
                  date:
                    example: '2020-03-09T19:41:51.396Z'
                    format: date-time
                    type: string
                  display:
                    properties:
                      entities:
                        properties:
                          card:
                            properties:
                              hideIfContext:
                                type: boolean
                              id:
                                type: string
                                example: 5abbe4b7ddc1b351ef961414
                                pattern: ^[0-9a-fA-F]{24}$
                              shortLink:
                                example: 3CsPkqOF
                                type: string
                              text:
                                example: Bowie
                                type: string
                              type:
                                example: card
                                type: string
                            type: object
                          comment:
                            properties:
                              text:
                                example: Can never go wrong with bowie
                                type: string
                              type:
                                example: comment
                                type: string
                            type: object
                          contextOn:
                            properties:
                              hideIfContext:
                                type: boolean
                              idContext:
                                type: string
                                example: 5abbe4b7ddc1b351ef961414
                                pattern: ^[0-9a-fA-F]{24}$
                              translationKey:
                                example: action_on
                                type: string
                              type:
                                example: translatable
                                type: string
                            type: object
                          memberCreator:
                            properties:
                              id:
                                example: 5abbe4b7ddc1b351ef961414
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              text:
                                example: Bob Loblaw (World)
                                type: string
                              type:
                                example: member
                                type: string
                              username:
                                example: bobloblaw
                                type: string
                            type: object
                        type: object
                      translationKey:
                        example: action_comment_on_card
                        type: string
                    type: object
                  id:
                    type: string
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                  idMemberCreator:
                    type: string
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                  limits:
                    properties:
                      reactions:
                        properties:
                          perAction:
                            properties:
                              disableAt:
                                example: 1000
                                type: number
                              status:
                                example: ok
                                type: string
                              warnAt:
                                example: 900
                                type: number
                            type: object
                          uniquePerAction:
                            properties:
                              disableAt:
                                example: 1000
                                type: number
                              status:
                                example: ok
                                type: string
                              warnAt:
                                example: 900
                                type: number
                            type: object
                        type: object
                    type: object
                  memberCreator:
                    properties:
                      activityBlocked:
                        example: false
                        type: boolean
                      avatarHash:
                        example: db2adf80c2e6c26b76e1f10400eb4c45
                        type: string
                      avatarUrl:
                        example: https://trello-members.s3.amazonaws.com/5b02e7f4e1facdc393169f9d/db2adf80c2e6c26b76e1f10400eb4c45
                        format: url
                        type: string
                      fullName:
                        example: Bob Loblaw (Trello)
                        type: string
                      id:
                        example: 5b02e7f4e1facdc393169f9d
                        type: string
                        pattern: ^[0-9a-fA-F]{24}$
                      idMemberReferrer:
                        example: null
                        nullable: true
                        type: string
                        pattern: ^[0-9a-fA-F]{24}$
                      initials:
                        example: BL
                        type: string
                      username:
                        example: bobloblaw
                        type: string
                    type: object
                  type:
                    example: commentCard
                    type: string
                type: object
          description: Success
      summary: Get a specific field on an Action
      tags: []
  /applications/{key}/compliance:
    get:
      deprecated: false
      description: ''
      operationId: applications-key-compliance
      responses:
        '200':
          description: Success
      summary: Get Application's compliance data
      tags: []
    parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
  /batch:
    get:
      deprecated: false
      description: Make up to 10 GET requests in a single, batched API call.
      operationId: get-batch
      parameters:
        - description: A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. "urls=/members/trello,/cards/[cardId]"
          in: query
          name: urls
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Batch Requests
      tags: []
  /boards/:
    post:
      deprecated: false
      description: Create a new board.
      operationId: post-boards
      parameters:
        - description: The new name for the board. 1 to 16384 characters long.
          in: query
          name: name
          required: true
          schema:
            maxLength: 16384
            minLength: 1
            type: string
        - description: Determines whether to use the default set of labels.
          in: query
          name: defaultLabels
          required: false
          schema:
            default: true
            type: boolean
        - description: Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided.
          in: query
          name: defaultLists
          required: false
          schema:
            default: true
            type: boolean
        - description: A new description for the board, 0 to 16384 characters long
          in: query
          name: desc
          required: false
          schema:
            maxLength: 16384
            minLength: 0
            type: string
        - description: The id or name of the Workspace the board should belong to.
          in: query
          name: idOrganization
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The id of a board to copy into the new board.
          in: query
          name: idBoardSource
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: To keep cards from the original board pass in the value `cards`
          in: query
          name: keepFromSource
          required: false
          schema:
            default: none
            enum:
              - cards
              - none
            type: string
        - description: 'The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`.'
          in: query
          name: powerUps
          required: false
          schema:
            enum:
              - all
              - calendar
              - cardAging
              - recap
              - voting
            type: string
        - description: 'The permissions level of the board. One of: `org`, `private`, `public`.'
          in: query
          name: prefs_permissionLevel
          required: false
          schema:
            default: private
            enum:
              - org
              - private
              - public
            type: string
        - description: Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`.
          in: query
          name: prefs_voting
          required: false
          schema:
            default: disabled
            enum:
              - disabled
              - members
              - observers
              - org
              - public
            type: string
        - description: 'Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`.'
          in: query
          name: prefs_comments
          required: false
          schema:
            default: members
            enum:
              - disabled
              - members
              - observers
              - org
              - public
            type: string
        - description: 'Determines what types of members can invite users to join. One of: `admins`, `members`.'
          in: query
          name: prefs_invitations
          required: false
          schema:
            default: members
            enum:
              - members
              - admins
            type: string
        - description: Determines whether users can join the boards themselves or whether they have to be invited.
          in: query
          name: prefs_selfJoin
          required: false
          schema:
            default: true
            type: boolean
        - description: Determines whether card covers are enabled.
          in: query
          name: prefs_cardCovers
          required: false
          schema:
            default: true
            type: boolean
        - description: 'The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`.'
          in: query
          name: prefs_background
          required: false
          schema:
            default: blue
            enum:
              - blue
              - orange
              - green
              - red
              - purple
              - pink
              - lime
              - sky
              - grey
            type: string
        - description: 'Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`.'
          in: query
          name: prefs_cardAging
          required: false
          schema:
            default: regular
            enum:
              - pirate
              - regular
            type: string
      responses:
        '200':
          description: Success
      summary: Create a Board
      tags: []
  /boards/{boardId}/actions:
    get:
      deprecated: false
      description: ''
      operationId: get-boards-id-actions
      parameters:
        - description: ''
          in: path
          name: boardId
          required: true
          schema:
            type: string
        - description: The fields to be returned for the Actions. [See Action fields here](/cloud/trello/guides/rest-api/object-definitions/#action-object).
          in: query
          name: fields
          required: false
          schema:
            properties: *ref_5
            type: object
        - description: A comma-separated list of [action types](/cloud/trello/guides/rest-api/action-types/).
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: The format of the returned Actions. Either list or count.
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A comma-separated list of idModels. Only actions related to these models will be returned.
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: The limit of the number of responses, between 0 and 1000.
          in: query
          name: limit
          required: false
          schema:
            default: 50
            type: number
        - description: Whether to return the member object for each action.
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) to return.
          in: query
          name: member_fields
          required: false
          schema:
            default: activityBlocked,avatarHash,avatarUrl,fullName,idMemberReferrer,initials,nonPublic,nonPublicAvailable,username
            type: string
        - description: Whether to return the memberCreator object for each action.
          in: query
          name: memberCreator
          required: false
          schema:
            default: true
            type: boolean
        - description: The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) creator to return
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: activityBlocked,avatarHash,avatarUrl,fullName,idMemberReferrer,initials,nonPublic,nonPublicAvailable,username
            type: string
        - description: The page of results for actions.
          in: query
          name: page
          required: false
          schema:
            default: 0
            type: number
        - description: Whether to show reactions on comments or not.
          in: query
          name: reactions
          required: false
          schema:
            type: boolean
        - description: An Action ID
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: An Action ID
          in: query
          name: since
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get Actions of a Board
      tags: []
  /boards/{boardId}/boardStars:
    get:
      deprecated: false
      description: ''
      operationId: get-boards-id-boardstars
      parameters:
        - description: ''
          in: path
          name: boardId
          required: true
          schema:
            type: string
        - description: 'Valid values: mine, none'
          in: query
          name: filter
          required: false
          schema:
            default: mine
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: &ref_26
                        id:
                          example: 585063850027165010be15a8
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        idBoard:
                          example: 57f7df684f1ca8c2877162e0
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        pos:
                          example: 32768
                          type: integer
                      type: object
                type: array
          description: Success
      summary: Get boardStars on a Board
      tags: []
  /boards/{id}:
    delete:
      deprecated: false
      description: Delete a board.
      operationId: delete-boards-id
      parameters:
        - description: The id of the board to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Delete a Board
      tags: []
    get:
      deprecated: false
      description: Request a single board.
      operationId: get-boards-id
      parameters:
        - description: This is a nested resource. Read more about actions as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: actions
          required: false
          schema:
            default: all
            type: string
        - description: 'Valid values are one of: `mine` or `none`.'
          in: query
          name: boardStars
          required: false
          schema:
            default: none
            type: string
        - description: This is a nested resource. Read more about cards as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: Use with the `cards` param to include card pluginData with the response
          in: query
          name: card_pluginData
          required: false
          schema:
            default: false
            type: boolean
        - description: This is a nested resource. Read more about checklists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource).
          in: query
          name: customFields
          required: false
          schema:
            default: false
            type: boolean
        - description: 'The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url'
          in: query
          name: fields
          required: false
          schema:
            default: name,desc,descData,closed,idOrganization,pinned,url,shortUrl,prefs,labelNames
            type: string
        - description: This is a nested resource. Read more about labels as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: labels
          required: false
          schema:
            type: string
        - description: This is a nested resource. Read more about lists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: lists
          required: false
          schema:
            default: open
            type: string
        - description: This is a nested resource. Read more about members as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: This is a nested resource. Read more about memberships as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: 'Determines whether the pluginData for this board should be returned. Valid values: true or false.'
          in: query
          name: pluginData
          required: false
          schema:
            default: false
            type: boolean
        - description: This is a nested resource. Read more about organizations as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: organization
          required: false
          schema:
            default: false
            type: boolean
        - description: Use with the `organization` param to include organization pluginData with the response
          in: query
          name: organization_pluginData
          required: false
          schema:
            default: false
            type: boolean
        - description: ''
          in: query
          name: myPrefs
          required: false
          schema:
            default: false
            type: boolean
        - description: Also known as collections, tags, refer to the collection(s) that a Board belongs to.
          in: query
          name: tags
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_6
                required: *ref_7
                type: object
          description: Success
        '401':
          content: &ref_20
            application/json:
              schema:
                properties: &ref_8
                  code:
                    type: string
                  message:
                    type: string
                required: &ref_9
                  - code
                  - message
                type: object
          description: Unauthorized
        '404':
          content: &ref_21
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Get a Board
      tags: []
    parameters:
      - description: ''
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update an existing board by id
      operationId: put-boards-id
      parameters:
        - description: The new name for the board. 1 to 16384 characters long.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: A new description for the board, 0 to 16384 characters long
          in: query
          name: desc
          required: false
          schema:
            type: string
        - description: Whether the board is closed
          in: query
          name: closed
          required: false
          schema:
            type: boolean
        - description: Whether the acting user is subscribed to the board
          explode: false
          in: query
          name: subscribed
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
          style: form
        - description: The id of the Workspace the board should be moved to
          in: query
          name: idOrganization
          required: false
          schema:
            type: string
        - description: 'One of: org, private, public'
          in: query
          name: prefs/permissionLevel
          required: false
          schema:
            type: string
        - description: Whether Workspace members can join the board themselves
          in: query
          name: prefs/selfJoin
          required: false
          schema:
            type: boolean
        - description: Whether card covers should be displayed on this board
          in: query
          name: prefs/cardCovers
          required: false
          schema:
            type: boolean
        - description: Determines whether the Voting Power-Up should hide who voted on cards or not.
          in: query
          name: prefs/hideVotes
          required: false
          schema:
            type: boolean
        - description: 'Who can invite people to this board. One of: admins, members'
          in: query
          name: prefs/invitations
          required: false
          schema:
            type: string
        - description: Who can vote on this board. One of disabled, members, observers, org, public
          in: query
          name: prefs/voting
          required: false
          schema:
            type: string
        - description: 'Who can comment on cards on this board. One of: disabled, members, observers, org, public'
          in: query
          name: prefs/comments
          required: false
          schema:
            type: string
        - description: 'The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey'
          in: query
          name: prefs/background
          required: false
          schema:
            type: string
        - description: 'One of: pirate, regular'
          in: query
          name: prefs/cardAging
          required: false
          schema:
            type: string
        - description: Determines whether the calendar feed is enabled or not.
          in: query
          name: prefs/calendarFeedEnabled
          required: false
          schema:
            type: boolean
        - description: Name for the green label. 1 to 16384 characters long
          in: query
          name: labelNames/green
          required: false
          schema:
            type: string
        - description: Name for the yellow label. 1 to 16384 characters long
          in: query
          name: labelNames/yellow
          required: false
          schema:
            type: string
        - description: Name for the orange label. 1 to 16384 characters long
          in: query
          name: labelNames/orange
          required: false
          schema:
            type: string
        - description: Name for the red label. 1 to 16384 characters long
          in: query
          name: labelNames/red
          required: false
          schema:
            type: string
        - description: Name for the purple label. 1 to 16384 characters long
          in: query
          name: labelNames/purple
          required: false
          schema:
            type: string
        - description: Name for the blue label. 1 to 16384 characters long
          in: query
          name: labelNames/blue
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Update a Board
      tags: []
  /boards/{id}/boardPlugins:
    get:
      deprecated: false
      description: Get the enabled Power-Ups on a board
      operationId: get-boards-id-boardplugins
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_13
                    id:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get Enabled Power-Ups on Board
      tags: []
    parameters:
      - description: The ID of the Board
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: true
      description: Enable a Power-Up on a Board
      operationId: post-boards-id-boardplugins
      parameters:
        - description: The ID of the Power-Up to enable
          in: query
          name: idPlugin
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Enable a Power-Up on a Board
      tags: []
  /boards/{id}/boardPlugins/{idPlugin}:
    delete:
      deprecated: true
      description: Disable a Power-Up on a board
      operationId: delete-boards-id-boardplugins
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the Power-Up to disable
          in: path
          name: idPlugin
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Disable a Power-Up on a Board
      tags: []
  /boards/{id}/calendarKey/generate:
    post:
      deprecated: false
      description: Create a new board.
      operationId: post-boards-id-calendarkey-generate
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Create a calendarKey for a Board
      tags: []
  /boards/{id}/cards:
    get:
      deprecated: false
      description: Get all of the open Cards on a Board.
      operationId: get-boards-id-cards
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get Cards on a Board
      tags: []
  /boards/{id}/cards/{filter}:
    get:
      deprecated: false
      description: Get the Cards on a Board that match a given filter.
      operationId: get-boards-id-cards-filter
      parameters:
        - description: ID of the Board
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: 'Valid Values: all, closed, none, open, visible.'
          in: path
          name: filter
          required: true
          schema:
            enum:
              - all
              - closed
              - none
              - open
              - visible
            type: string
      responses:
        '200':
          description: Success
      summary: Get filtered Cards on a Board
      tags: []
  /boards/{id}/cards/{idCard}:
    get:
      deprecated: false
      description: Get a single Card on a Board.
      operationId: get-boards-id-cards-idcard
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id the card to retrieve.
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: The fields to be returned for the Actions. [See Action fields here](/cloud/trello/guides/rest-api/object-definitions/#action-object).
          in: query
          name: fields
          required: false
          schema:
            properties: *ref_5
            type: object
        - description: A comma-separated list of [action types](/cloud/trello/guides/rest-api/action-types/).
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: The format of the returned Actions. Either list or count.
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A comma-separated list of idModels. Only actions related to these models will be returned.
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: The limit of the number of responses, between 0 and 1000.
          in: query
          name: limit
          required: false
          schema:
            default: 50
            type: number
        - description: Whether to return the member object for each action.
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) to return.
          in: query
          name: member_fields
          required: false
          schema:
            default: activityBlocked,avatarHash,avatarUrl,fullName,idMemberReferrer,initials,nonPublic,nonPublicAvailable,username
            type: string
        - description: Whether to return the memberCreator object for each action.
          in: query
          name: memberCreator
          required: false
          schema:
            default: true
            type: boolean
        - description: The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) creator to return
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: activityBlocked,avatarHash,avatarUrl,fullName,idMemberReferrer,initials,nonPublic,nonPublicAvailable,username
            type: string
        - description: The page of results for actions.
          in: query
          name: page
          required: false
          schema:
            default: 0
            type: number
        - description: Whether to show reactions on comments or not.
          in: query
          name: reactions
          required: false
          schema:
            type: boolean
        - description: An Action ID
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: An Action ID
          in: query
          name: since
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get a Card on a Board
      tags: []
  /boards/{id}/checklists:
    get:
      deprecated: false
      description: Get all of the checklists on a Board.
      operationId: boards-id-checklists
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get Checklists on a Board
      tags: []
  /boards/{id}/customFields:
    get:
      deprecated: false
      description: Get the Custom Field Definitions that exist on a board.
      operationId: get-boards-id-customfields
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_18
                    display:
                      properties:
                        cardFront:
                          example: true
                          type: boolean
                        name:
                          example: Priority 🏔
                          type: string
                        options:
                          items:
                            properties:
                              color:
                                example: red
                                type: string
                              id:
                                example: 5ab10be237846c43015f1091
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              idCustomField:
                                example: 5ab10be237846c43015f108e
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              pos:
                                example: 16384
                                type: number
                              value:
                                properties:
                                  text:
                                    example: High
                                    type: string
                                type: object
                            type: object
                          type: array
                        pos:
                          example: 98304,
                          type: string
                      type: object
                    fieldGroup:
                      example: f6177ba6839d6fff0f73922c1cea105e793fda8a1433d466104dacc0b7c56955
                      type: string
                    id:
                      example: 5ab10be237846c43015f108e
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idModel:
                      example: 586e8f681d4fe9b06a928307
                      type: string
                    modelType:
                      enum:
                        - card
                        - board
                        - member
                      example: board
                      type: string
                    type:
                      example: list
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get Custom Fields for Board
      tags: []
  /boards/{id}/emailKey/generate:
    post:
      deprecated: false
      description: ''
      operationId: post-boards-id-emailkey-generate
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Create a emailKey for a Board
      tags: []
  /boards/{id}/idTags:
    post:
      deprecated: false
      operationId: post-boards-id-idtags
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The id of a tag from the organization to which this board belongs.
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Create a Tag for a Board
      tags: []
  /boards/{id}/labels:
    get:
      deprecated: false
      description: Get all of the Labels on a Board.
      operationId: get-boards-id-labels
      parameters:
        - description: The ID of the Board.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The fields to be returned for the Labels.
          in: query
          name: fields
          required: false
          schema:
            properties: *ref_10
            type: object
        - description: The number of Labels to be returned.
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            maximum: 1000
            minimum: 0
            type: integer
      responses:
        '200':
          description: Success
      summary: Get Labels on a Board
      tags: []
    post:
      deprecated: false
      description: Create a new Label on a Board.
      operationId: post-boards-id-labels
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The name of the label to be created. 1 to 16384 characters long.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Sets the color of the new label. Valid values are a label color or `null`.
          in: query
          name: color
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Create a Label on a Board
      tags: []
  /boards/{id}/lists:
    get:
      deprecated: false
      description: Get the Lists on a Board
      operationId: get-boards-id-lists
      parameters:
        - description: Filter to apply to Cards.
          in: query
          name: cards
          required: false
          schema:
            enum: &ref_11
              - all
              - closed
              - none
              - open
            type: string
        - description: '`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/#card-object)'
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: Filter to apply to Lists
          in: query
          name: filter
          required: false
          schema:
            enum: *ref_11
            type: string
        - description: '`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_12
                  type: object
                type: array
          description: Success
      summary: Get Lists on a Board
      tags: []
    parameters:
      - description: The ID of the board
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Create a new List on a Board.
      operationId: post-boards-id-lists
      parameters:
        - description: The name of the list to be created. 1 to 16384 characters long.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: 'Determines the position of the list. Valid values: `top`, `bottom`, or a positive number.'
          in: query
          name: pos
          required: false
          schema:
            default: top
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_12
                type: object
          description: Success
      summary: Create a List on a Board
      tags: []
  /boards/{id}/lists/{filter}:
    get:
      deprecated: false
      description: ''
      operationId: get-boards-id-lists-filter
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: One of `all`, `closed`, `none`, `open`
          in: path
          name: filter
          required: true
          schema:
            enum: *ref_11
            type: string
      responses:
        '200':
          description: Success
      summary: Get filtered Lists on a Board
      tags: []
  /boards/{id}/markedAsViewed:
    post:
      deprecated: false
      description: ''
      operationId: post-boards-id-markedasviewed
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Mark Board as viewed
      tags: []
  /boards/{id}/members:
    get:
      deprecated: false
      description: Get the Members for a board
      operationId: get-boards-id-members
      responses:
        '200':
          description: Success
      summary: Get the Members of a Board
      tags: []
    parameters:
      - description: The ID of the board
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Invite a Member to a Board via their email address.
      operationId: put-boards-id-members
      parameters:
        - description: The email address of a user to add as a member of the board.
          in: query
          name: email
          required: true
          schema:
            format: email
            type: string
        - description: 'Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board.'
          in: query
          name: type
          required: false
          schema:
            default: normal
            enum:
              - admin
              - normal
              - observer
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fullName:
                  description: The full name of the user to as a member of the board. Must have a length of at least 1 and cannot begin nor end with a space.
                  type: string
              type: object
      responses:
        '200':
          description: Success
      summary: Invite Member to Board via email
      tags: []
  /boards/{id}/members/{idMember}:
    delete:
      deprecated: false
      description: ''
      operationId: boardsidmembersidmember
      responses:
        '200':
          description: Success
      summary: Remove Member from Board
      tags: []
    parameters:
      - description: The id of the board to update
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The id of the member to add to the board.
        in: path
        name: idMember
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Add a member to the board.
      operationId: put-boards-id-members-idmember
      parameters:
        - description: 'One of: admin, normal, observer. Determines the type of member this user will be on the board.'
          in: query
          name: type
          required: true
          schema:
            enum:
              - admin
              - normal
              - observer
            type: string
        - description: Optional param that allows organization admins to add multi-board guests onto a board.
          in: query
          name: allowBillableGuest
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Success
      summary: Add a Member to a Board
      tags: []
  /boards/{id}/memberships:
    get:
      deprecated: false
      description: Get information about the memberships users have to the board.
      operationId: get-boards-id-memberships
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: One of `admins`, `all`, `none`, `normal`
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - admins
              - all
              - none
              - normal
            type: string
        - description: Works for premium organizations only.
          in: query
          name: activity
          required: false
          schema:
            default: false
            type: boolean
        - description: Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.
          in: query
          name: orgMemberType
          required: false
          schema:
            default: false
            type: boolean
        - description: Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/).
          in: query
          name: member
          required: false
          schema:
            default: false
            type: boolean
        - description: 'Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/).'
          explode: false
          in: query
          name: member_fields
          required: false
          schema:
            default: fullname,username
            enum: *ref_3
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                description: ''
                properties: &ref_37
                  id:
                    example: 5abbe4b7ddc1b351ef961414
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                type: object
          description: Success
      summary: Get Memberships of a Board
      tags: []
  /boards/{id}/memberships/{idMembership}:
    put:
      deprecated: false
      description: Update an existing board by id
      operationId: put-boards-id-memberships-idmembership
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The id of a membership that should be added to this board.
          in: path
          name: idMembership
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'One of: admin, normal, observer. Determines the type of member that this membership will be to this board.'
          in: query
          name: type
          required: true
          schema:
            enum:
              - admin
              - normal
              - observer
            type: string
        - description: 'Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username'
          explode: false
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName, username
            enum:
              - all
              - avatarHash
              - bio
              - bioData
              - confirmed
              - fullName
              - idPremOrgsAdmin
              - initials
              - memberType
              - products
              - status
              - url
              - username
            type: string
          style: form
      responses:
        '200':
          description: Success
      summary: Update Membership of Member on a Board
      tags: []
  /boards/{id}/myPrefs/emailPosition:
    put:
      deprecated: false
      description: Update emailPosition Pref on a Board
      operationId: put-boards-id-myprefs-emailposition
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'Valid values: bottom, top. Determines the position of the email address.'
          in: query
          name: value
          required: true
          schema:
            enum:
              - bottom
              - top
            type: string
      responses:
        '200':
          description: Success
      summary: Update emailPosition Pref on a Board
      tags: []
  /boards/{id}/myPrefs/idEmailList:
    put:
      deprecated: false
      description: Change the default list that email-to-board cards are created in.
      operationId: put-boards-id-myprefs-idemaillist
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The id of an email list.
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Update idEmailList Pref on a Board
      tags: []
  /boards/{id}/myPrefs/showListGuide:
    put:
      deprecated: false
      operationId: put-boards-id-myPrefs-showlistguide
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether to show the list guide.
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update showListGuide Pref on a Board
      tags: []
  /boards/{id}/myPrefs/showSidebar:
    put:
      deprecated: false
      operationId: put-boards-id-myPrefs-showsidebar
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether to show the side bar.
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update showSidebar Pref on a Board
      tags: []
  /boards/{id}/myPrefs/showSidebarActivity:
    put:
      deprecated: false
      operationId: put-boards-id-myPrefs-showsidebaractivity
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether to show sidebar activity.
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update showSidebarActivity Pref on a Board
      tags: []
  /boards/{id}/myPrefs/showSidebarBoardActions:
    put:
      deprecated: false
      operationId: put-boards-id-myPrefs-showsidebarboardactions
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether to show the sidebar board actions.
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update showSidebarBoardActions Pref on a Board
      tags: []
  /boards/{id}/myPrefs/showSidebarMembers:
    put:
      deprecated: false
      operationId: put-boards-id-myPrefs-showsidebarmembers
      parameters:
        - description: The id of the board to update
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether to show members of the board in the sidebar.
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update showSidebarMembers Pref on a Board
      tags: []
  /boards/{id}/plugins:
    get:
      deprecated: false
      description: List the Power-Ups on a board
      operationId: get-board-id-plugins
      parameters:
        - description: The ID of the board
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'One of: `enabled` or `available`'
          in: query
          name: filter
          required: false
          schema:
            default: enabled
            enum:
              - enabled
              - available
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_13
                type: object
          description: Success
      summary: Get Power-Ups on a Board
      tags: []
  /boards/{id}/{field}:
    get:
      deprecated: false
      description: Get a single, specific field on a board
      operationId: get-boards-id-field
      parameters:
        - description: The ID of the board.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: 'The field you''d like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.'
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get a field on a Board
      tags: []
  /cards:
    post:
      deprecated: false
      description: Create a new card. Query parameters may also be replaced with a JSON request body instead.
      operationId: post-cards
      parameters:
        - description: The name for the card
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The description for the card
          in: query
          name: desc
          required: false
          schema:
            type: string
        - description: The position of the new card. `top`, `bottom`, or a positive float
          in: query
          name: pos
          required: false
          schema:
            oneOf:
              - enum:
                  - top
                  - bottom
                type: string
              - format: float
                minimum: 0
                type: number
        - description: A due date for the card
          in: query
          name: due
          required: false
          schema:
            format: date
            type: string
        - description: The start date of a card, or `null`
          in: query
          name: start
          required: false
          schema:
            format: date
            nullable: true
            type: string
        - in: query
          name: dueComplete
          required: false
          schema:
            type: boolean
        - description: The ID of the list the card should be created in
          in: query
          name: idList
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Comma-separated list of member IDs to add to the card
          in: query
          name: idMembers
          required: false
          schema:
            items:
              oneOf:
                - example: 5abbe4b7ddc1b351ef961414
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
            type: array
        - description: Comma-separated list of label IDs to add to the card
          in: query
          name: idLabels
          required: false
          schema:
            items:
              oneOf:
                - example: 5abbe4b7ddc1b351ef961414
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
            type: array
        - description: A URL starting with `http://` or `https://`
          in: query
          name: urlSource
          required: false
          schema:
            format: url
            type: string
        - description: ''
          in: query
          name: fileSource
          required: false
          schema:
            format: binary
            type: string
        - description: The mimeType of the attachment. Max length 256
          in: query
          name: mimeType
          required: false
          schema:
            type: string
        - description: The ID of a card to copy into the new card
          in: query
          name: idCardSource
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,customFields,comments,due,start,labels,members,start,stickers`'
          explode: false
          in: query
          name: keepFromSource
          required: false
          schema:
            default: all
            enum:
              - all
              - attachments
              - checklists
              - comments
              - customFields
              - due
              - start
              - labels
              - members
              - start
              - stickers
            type: string
          style: form
        - description: For use with/by the Map View
          in: query
          name: address
          required: false
          schema:
            type: string
        - description: For use with/by the Map View
          in: query
          name: locationName
          required: false
          schema:
            type: string
        - description: For use with/by the Map View. Should take the form latitude,longitude
          in: query
          name: coordinates
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_14
                type: object
          description: Success
      summary: Create a new Card
      tags: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}:
    put:
      deprecated: false
      description: Update an item in a checklist on a card.
      operationId: put-cards-idcard-checklist-idchecklist-checkitem-idcheckitem
      parameters:
        - description: The ID of the Card
          in: path
          name: idCard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the checklist item to update
          in: path
          name: idCheckItem
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`top`, `bottom`, or a positive float'
          in: query
          name: pos
          required: false
          schema:
            oneOf: &ref_16
              - enum:
                  - top
                  - bottom
                type: string
              - example: 1293.5
                format: float
                type: number
        - description: The ID of the item to update.
          in: path
          name: idChecklist
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_45
                  id:
                    example: 5dc9b509f02f4314edc4303a
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  idChecklist:
                    example: 5dc9b507756e182c76007621
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  name:
                    type: string
                  nameData:
                    example: null
                    nullable: true
                    type: string
                  pos:
                    example: 1673
                    type: string
                  state:
                    enum:
                      - complete
                      - incomplete
                    example: incomplete
                    type: string
                type: object
          description: Success
      summary: Update Checkitem on Checklist on Card
      tags: []
  /cards/{idCard}/customField/{idCustomField}/item:
    put:
      deprecated: false
      description: Setting, updating, and removing the value for a Custom Field on a card. For more details on updating custom fields check out the [Getting Started With Custom Fields](/cloud/trello/guides/rest-api/getting-started-with-custom-fields/)
      operationId: put-cards-idcard-customfield-idcustomfield-item
      parameters:
        - description: ID of the card that the Custom Field value should be set/updated for
          in: path
          name: idCard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of the Custom Field on the card.
          in: path
          name: idCustomField
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    value:
                      description: An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined.
                      properties:
                        checked:
                          type: boolean
                        date:
                          example: '2018-03-13T16:00:00.000Z'
                          format: date-time
                          type: string
                        number:
                          type: number
                        text:
                          type: string
                      type: object
                  type: object
                - properties:
                    idValue:
                      description: The ID of the option for the list type Custom Field
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                  type: object
      responses:
        '200':
          description: Success
      summary: Update Custom Field item on Card
      tags: []
  /cards/{idCard}/customFields:
    put:
      deprecated: false
      description: Setting, updating, and removing the values for multiple Custom Fields on a card. For more details on updating custom fields check out the [Getting Started With Custom Fields](/cloud/trello/guides/rest-api/getting-started-with-custom-fields/)
      operationId: put-cards-idcard-customfields
      requestBody:
        content:
          application/json:
            schema:
              properties:
                customFieldItems:
                  description: An array of objects containing the custom field ID, key and value, and ID of list type option.
                  items:
                    properties:
                      idCustomField:
                        description: The ID of the Custom Field
                        example: 5abbe4b7ddc1b351ef961414
                        pattern: ^[0-9a-fA-F]{32}$
                      idValue:
                        description: The ID of the option for the list type Custom Field. This is optional if Custom Field is not list type.
                        example: 5abbe4b7ddc1b351ef961414
                        pattern: ^[0-9a-fA-F]{32}$
                      value:
                        description: An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined. This is optional if Custom Field is list type.
                        properties:
                          checked:
                            type: boolean
                          date:
                            example: '2018-03-13T16:00:00.000Z'
                            format: date-time
                            type: string
                          number:
                            type: number
                          text:
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
      responses:
        '200':
          description: Success
      summary: Update Multiple Custom Field items on Card
      tags: []
  /cards/{id}:
    delete:
      deprecated: false
      description: Delete a Card
      operationId: delete-cards-id
      responses:
        '200':
          description: Success
      summary: Delete a Card
      tags: []
    get:
      deprecated: false
      description: Get a card by its ID
      operationId: get-cards-id
      parameters:
        - description: '`all` or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, start, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`'
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: '`true`, `false`, or `cover`'
          in: query
          name: attachments
          required: false
          schema:
            default: false
            oneOf:
              - enum:
                  - cover
                type: string
              - type: boolean
            type: string
        - description: '`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: Whether to return member objects for members on the card
          in: query
          name: members
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`'
          in: query
          name: member_fields
          required: false
          schema:
            type: string
        - description: Whether to return member objects for members who voted on the card
          in: query
          name: membersVoted
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`'
          in: query
          name: memberVoted_fields
          required: false
          schema:
            type: string
        - description: ''
          in: query
          name: checkItemStates
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to return the checklists on the card. `all` or `none`
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: '`all` or a comma-separated list of `idBoard,idCard,name,pos`'
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: Whether to return the board object the card is on
          in: query
          name: board
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`'
          in: query
          name: board_fields
          required: false
          schema:
            type: string
        - description: See the [Lists Nested Resource](/cloud/trello/guides/rest-api/nested-resources/)
          in: query
          name: list
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include pluginData on the card with the response
          in: query
          name: pluginData
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include sticker models with the response
          in: query
          name: stickers
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: sticker_fields
          required: false
          schema:
            default: all
            type: string
        - description: Whether to include the customFieldItems
          in: query
          name: customFieldItems
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_14
                type: object
          description: Success
      summary: Get a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a card. Query parameters may also be replaced with a JSON request body instead.
      operationId: put-cards-id
      parameters:
        - description: The new name for the card
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The new description for the card
          in: query
          name: desc
          required: false
          schema:
            type: string
        - description: 'Whether the card should be archived (closed: true)'
          in: query
          name: closed
          required: false
          schema:
            type: boolean
        - description: Comma-separated list of member IDs
          explode: false
          in: query
          name: idMembers
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
          style: form
        - description: The ID of the image attachment the card should use as its cover, or null for none
          in: query
          name: idAttachmentCover
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the list the card should be in
          in: query
          name: idList
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Comma-separated list of label IDs
          explode: false
          in: query
          name: idLabels
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
          style: form
        - description: The ID of the board the card should be on
          in: query
          name: idBoard
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The position of the card in its list. `top`, `bottom`, or a positive float
          in: query
          name: pos
          required: false
          schema:
            oneOf:
              - enum:
                  - top
                  - bottom
                type: string
              - format: float
                type: number
        - description: When the card is due, or `null`
          in: query
          name: due
          required: false
          schema:
            format: date
            nullable: true
            type: string
        - description: The start date of a card, or `null`
          in: query
          name: start
          required: false
          schema:
            format: date
            nullable: true
            type: string
        - description: Whether the due date should be marked complete
          in: query
          name: dueComplete
          required: false
          schema:
            type: boolean
        - description: Whether the member is should be subscribed to the card
          in: query
          name: subscribed
          required: false
          schema:
            type: boolean
        - description: For use with/by the Map View
          in: query
          name: address
          required: false
          schema:
            type: string
        - description: For use with/by the Map View
          in: query
          name: locationName
          required: false
          schema:
            type: string
        - description: For use with/by the Map View. Should be latitude,longitude
          in: query
          name: coordinates
          required: false
          schema:
            type: string
        - description: |-
            Updates the card's cover
             | Option | Values | About |
             |--------|--------|-------|
             | color | `pink`, `yellow`, `lime`, `blue`, `black`, `orange`, `red`, `purple`, `sky`, `green` | Makes the cover a solid color . |
             | brightness | `dark`, `light` | Determines whether the text on the cover should be dark or light.
             | url | An unsplash URL: https://images.unsplash.com | Used if making an image the cover. Only Unsplash URLs work.
             | idAttachment | ID of an attachment on the card | Used if setting an attached image as the cover. |
             | size | `normal`, `full` | Determines whether to show the card name on the cover, or below it. |
             
             `brightness` can be sent alongside any of the other parameters, but all of the other parameters are mutually exclusive; you can not have the cover be a `color` and an `idAttachment` at the same time. 
             
             On the brightness options, setting it to light will make the text on the card cover dark:
             ![](/cloud/trello/images/rest/cards/cover-brightness-dark.png)
             
             And vice versa, setting it to dark will make the text on the card cover light: 
             ![](/cloud/trello/images/rest/cards/cover-brightness-light.png) 
          in: query
          name: cover
          required: false
          schema:
            properties:
              value:
                description: |-
                  An object containing information regarding the card's cover 
                   `brightness` can be sent alongside any of the other parameters, but all of the other parameters are mutually exclusive; you can not have the cover be a color and an `idAttachment` at the same time.
                properties:
                  brightness:
                    description: Determines whether the text on the cover should be dark or light. Setting it to `light` will make the text on the card cover dark. And vice versa, setting it to dark will make the text on the card cover light
                    enum:
                      - dark
                      - light
                    type: string
                  color:
                    description: 'One of: `pink, yellow, lime, blue, black, orange, red, purple, sky, green`'
                    enum:
                      - pink
                      - yellow
                      - lime
                      - blue
                      - black
                      - orange
                      - red
                      - purple
                      - sky
                      - green
                    example: pink
                    type: string
                  url:
                    description: Used if making an image the cover. Only Unsplash URLs (https://images.unsplash.com/) work.
                    format: url
                    type: string
                type: object
            type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_14
                type: object
          description: Success
      summary: Update a Card
      tags: []
  /cards/{id}/actions:
    get:
      deprecated: false
      description: List the Actions on a Card
      operationId: get-cards-id-actions
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).
          in: query
          name: filter
          required: false
          schema:
            default: commentCard, updateCard:idList
            type: string
        - description: The page of results for actions. Each page of results has 50 actions.
          in: query
          name: page
          required: false
          schema:
            default: 0
            maximum: 19
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_5
                  type: object
                type: array
          description: Success
      summary: Get Actions on a Card
      tags: []
  /cards/{id}/actions/comments:
    post:
      deprecated: false
      description: Add a new comment to a card
      operationId: post-cards-id-actions-comments
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The comment
          in: query
          name: text
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_5
                type: object
          description: Success
      summary: Add a new comment to a Card
      tags: []
  /cards/{id}/actions/{idAction}/comments:
    delete:
      deprecated: false
      description: Delete a comment
      operationId: delete-cards-id-actions-id-comments
      responses:
        '200':
          description: Success
      summary: Delete a comment on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the comment action to update
        in: path
        name: idAction
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update an existing comment
      operationId: put-cards-id-actions-idaction-comments
      parameters:
        - description: The new text for the comment
          in: query
          name: text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Update Comment Action on a Card
      tags: []
  /cards/{id}/attachments:
    get:
      deprecated: false
      description: List the attachments on a card
      operationId: get-cards-id-attachments
      parameters:
        - description: '`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: Use `cover` to restrict to just the cover attachment
          in: query
          name: filter
          required: false
          schema:
            default: 'false'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: &ref_15
                        bytes:
                          example: null
                          nullable: true
                          type: string
                        date:
                          example: '2018-10-17T19:10:14.808Z'
                          format: date
                          type: string
                        edgeColor:
                          example: null
                          nullable: true
                          type: string
                          enum: *ref_0
                        id:
                          example: 5bc79d4206526d2279c1e6ea
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        idMember:
                          example: 5bc79d4206526d2279c1e6eb
                          type: string
                          pattern: ^[0-9a-fA-F]{24}$
                        isUpload:
                          example: false
                          type: boolean
                        mimeType:
                          example: ''
                          type: string
                        name:
                          example: Deprecation Extension Notice
                          type: string
                        pos:
                          example: 1638
                          format: float
                          type: number
                        previews:
                          example: []
                          items:
                            type: string
                          type: array
                        url:
                          example: https://admin.typeform.com/form/RzExEM/share#/link
                          format: url
                          type: string
                      type: object
                type: array
          description: Success
      summary: Get Attachments on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Create an Attachment to a Card
      operationId: post-cards-id-attachments
      parameters:
        - description: The name of the attachment. Max length 256.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The file to attach, as multipart/form-data
          in: query
          name: file
          required: false
          schema:
            format: binary
            type: string
        - description: The mimeType of the attachment. Max length 256
          in: query
          name: mimeType
          required: false
          schema:
            type: string
        - description: A URL to attach. Must start with `http://` or `https://`
          in: query
          name: url
          required: false
          schema:
            type: string
        - description: Determines whether to use the new attachment as a cover for the Card.
          in: query
          name: setCover
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_15
                      type: object
                type: array
          description: Success
      summary: Create Attachment On Card
      tags: []
  /cards/{id}/attachments/{idAttachment}:
    delete:
      deprecated: false
      description: Delete an Attachment
      operationId: deleted-cards-id-attachments-idattachment
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the attachment to delete
          in: path
          name: idAttachment
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Delete an Attachment on a Card
      tags: []
    get:
      deprecated: false
      description: Get a specific Attachment on a Card.
      operationId: get-cards-id-attachments-idattachment
      parameters:
        - description: The Attachment fields to be included in the response.
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default:
              - all
            items:
              anyOf:
                - enum: &ref_43
                    - id
                    - bytes
                    - date
                    - edgeColor
                    - idMember
                    - isUpload
                    - mimeType
                    - name
                    - previews
                    - url
                    - pos
                  type: string
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_15
                      type: object
                type: array
          description: Success
      summary: Get an Attachment on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the Attachment
        in: path
        name: idAttachment
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
  /cards/{id}/board:
    get:
      deprecated: false
      description: Get the board a card is on
      operationId: get-cards-id-board
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get the Board the Card is on
      tags: []
  /cards/{id}/checkItem/{idCheckItem}:
    delete:
      deprecated: false
      description: Delete a checklist item
      operationId: delete-cards-id-checkitem-idcheckitem
      responses:
        '200':
          description: Success
      summary: Delete checkItem on a Card
      tags: []
    get:
      deprecated: false
      description: Get a specific checkItem on a card
      operationId: get-cards-id-checkitem-idcheckitem
      parameters:
        - description: '`all` or a comma-separated list of `name,nameData,pos,state,type,due,dueReminder,idMember`'
          in: query
          name: fields
          required: false
          schema:
            default: name,nameData,pos,state,due,dueReminder,idMember
            type: string
      responses:
        '200':
          description: Success
      summary: Get checkItem on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the checkitem
        in: path
        name: idCheckItem
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update an item in a checklist on a card.
      operationId: put-cards-id-checkitem-idcheckitem
      parameters:
        - description: The new name for the checklist item
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: 'One of: `complete`, `incomplete`'
          in: query
          name: state
          required: false
          schema:
            enum:
              - complete
              - incomplete
            type: string
        - description: The ID of the checklist this item is in
          in: query
          name: idChecklist
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`top`, `bottom`, or a positive float'
          in: query
          name: pos
          required: false
          schema:
            oneOf: *ref_16
        - description: A due date for the checkitem
          in: query
          name: due
          required: false
          schema:
            format: date
            type: string
        - description: A dueReminder for the due date on the checkitem
          in: query
          name: dueReminder
          required: false
          schema:
            nullable: true
            type: number
        - description: The ID of the member to remove from the card
          in: query
          name: idMember
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Update a checkItem on a Card
      tags: []
  /cards/{id}/checkItemStates:
    get:
      deprecated: false
      description: Get the completed checklist items on a card
      operationId: get-cards-id-checkitemstates
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of: `idCheckItem`, `state`'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get checkItems on a Card
      tags: []
  /cards/{id}/checklists:
    get:
      deprecated: false
      description: Get the checklists on a card
      operationId: get-cards-id-checklists
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or `none`'
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            enum:
              - all
              - none
            type: string
        - description: '`all` or a comma-separated list of: `name,nameData,pos,state,type,due,dueReminder,idMember`'
          explode: false
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name,nameData,pos,state,due,dueReminder,idMember
            enum:
              - name
              - nameData
              - pos
              - state
              - type
              - due
              - dueReminder
              - idMember
            type: string
          style: form
        - description: '`all` or `none`'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - none
            type: string
        - description: '`all` or a comma-separated list of: `idBoard,idCard,name,pos`'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum:
              - all
              - name
              - nameData
              - pos
              - state
              - type
            type: string
          style: form
      responses:
        '200':
          description: Success
      summary: Get Checklists on a Card
      tags: []
    post:
      deprecated: false
      description: Create a new checklist on a card
      operationId: post-cards-id-checklists
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The name of the checklist
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The ID of a source checklist to copy into the new one
          in: query
          name: idChecklistSource
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.'
          in: query
          name: pos
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Create Checklist on a Card
      tags: []
  /cards/{id}/checklists/{idChecklist}:
    delete:
      deprecated: false
      description: Delete a checklist from a card
      operationId: delete-cards-id-checklists-idchecklist
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the checklist to delete
          in: path
          name: idChecklist
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Delete a Checklist on a Card
      tags: []
  /cards/{id}/customFieldItems:
    get:
      deprecated: false
      description: Get the custom field items for a card.
      operationId: get-cards-id-customfielditems
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_48
                    id:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idCustomField:
                      example: 5b080fd8017bd1653b5480fa
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idModel:
                      example: 5b080ff194611b41aaaa9570
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    modelType:
                      enum:
                        - card
                        - board
                        - member
                      example: card
                      type: string
                    value:
                      properties:
                        checked:
                          example: 'true'
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
      summary: Get Custom Field Items for a Card
      tags: []
  /cards/{id}/idLabels:
    post:
      deprecated: false
      description: Add a label to a card
      operationId: post-cards-id-idlabels
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the label to add
          in: query
          name: value
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Add a Label to a Card
      tags: []
  /cards/{id}/idLabels/{idLabel}:
    delete:
      deprecated: false
      description: Remove a label from a card
      operationId: delete-cards-id-idlabels-idlabel
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the label to remove
          in: path
          name: idLabel
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Label from a Card
      tags: []
  /cards/{id}/idMembers:
    post:
      deprecated: false
      description: Add a member to a card
      operationId: post-cards-id-idmembers
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the Member to add to the card
          in: query
          name: value
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Add a Member to a Card
      tags: []
  /cards/{id}/idMembers/{idMember}:
    delete:
      deprecated: false
      description: Remove a member from a card
      operationId: delete-id-idmembers-idmember
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the member to remove from the card
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Member from a Card
      tags: []
  /cards/{id}/labels:
    post:
      deprecated: false
      description: Create a new label for the board and add it to the given card.
      operationId: post-cards-id-labels
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A valid label color or `null`. See [labels](/cloud/trello/guides/rest-api/object-definitions/)
          in: query
          name: color
          required: true
          schema:
            type: string
        - description: A name for the label
          in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Create a new Label on a Card
      tags: []
  /cards/{id}/list:
    get:
      deprecated: false
      description: Get the list a card is in
      operationId: get-cards-id-list
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get the List of a Card
      tags: []
  /cards/{id}/markAssociatedNotificationsRead:
    post:
      deprecated: false
      description: Mark notifications about this card as read
      operationId: post-cards-id-markassociatednotificationsread
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Mark a Card's Notifications as read
      tags: []
  /cards/{id}/members:
    get:
      deprecated: false
      description: Get the members on a card
      operationId: get-cards-id-members
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            type: string
      responses:
        '200':
          description: Success
      summary: Get the Members of a Card
      tags: []
  /cards/{id}/membersVoted:
    get:
      deprecated: false
      description: Get the members who have voted on a card
      operationId: get-cards-id-membersvoted
      parameters:
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            type: string
      responses:
        '200':
          description: Success
      summary: Get Members who have voted on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Vote on the card for a given member.
      operationId: cardsidmembersvoted-1
      parameters:
        - description: The ID of the member to vote 'yes' on the card
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Add Member vote to Card
      tags: []
  /cards/{id}/membersVoted/{idMember}:
    delete:
      deprecated: false
      description: Remove a member's vote from a card
      operationId: delete-cards-id-membersvoted-idmember
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the member whose vote to remove
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Member's Vote on a Card
      tags: []
  /cards/{id}/pluginData:
    get:
      deprecated: false
      description: Get any shared pluginData on a card.
      operationId: get-cards-id-plugindata
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Get pluginData on a Card
      tags: []
  /cards/{id}/stickers:
    get:
      deprecated: false
      description: Get the stickers on a card
      operationId: get-cards-id-stickers
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get Stickers on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Add a sticker to a card
      operationId: post-cards-id-stickers
      parameters:
        - description: For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)
          in: query
          name: image
          required: true
          schema:
            type: string
        - description: The top position of the sticker, from -60 to 100
          in: query
          name: top
          required: true
          schema:
            format: float
            maximum: 100
            minimum: -60
            type: number
        - description: The left position of the sticker, from -60 to 100
          in: query
          name: left
          required: true
          schema:
            format: float
            maximum: 100
            minimum: -60
            type: number
        - description: The z-index of the sticker
          in: query
          name: zIndex
          required: true
          schema:
            type: integer
        - description: The rotation of the sticker
          in: query
          name: rotate
          required: false
          schema:
            default: 0
            format: float
            maximum: 360
            minimum: 0
            type: number
      responses:
        '200':
          description: Success
      summary: Add a Sticker to a Card
      tags: []
  /cards/{id}/stickers/{idSticker}:
    delete:
      deprecated: false
      description: Remove a sticker from the card
      operationId: delete-cards-id-stickers-idsticker
      responses:
        '200':
          description: Success
      summary: Delete a Sticker on a Card
      tags: []
    get:
      deprecated: false
      description: Get a specific sticker on a card
      operationId: get-cards-id-stickers-idsticker
      parameters:
        - description: '`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get a Sticker on a Card
      tags: []
    parameters:
      - description: The ID of the Card
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the sticker
        in: path
        name: idSticker
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a sticker on a card
      operationId: put-cards-id-stickers-idsticker
      parameters:
        - description: The top position of the sticker, from -60 to 100
          in: query
          name: top
          required: true
          schema:
            format: float
            maximum: 100
            minimum: -60
            type: number
        - description: The left position of the sticker, from -60 to 100
          in: query
          name: left
          required: true
          schema:
            format: float
            maximum: 100
            minimum: -60
            type: number
        - description: The z-index of the sticker
          in: query
          name: zIndex
          required: true
          schema:
            type: integer
        - description: The rotation of the sticker
          in: query
          name: rotate
          required: false
          schema:
            default: 0
            format: float
            maximum: 360
            minimum: 0
            type: number
      responses:
        '200':
          description: Success
      summary: Update a Sticker on a Card
      tags: []
  /cards/{id}/{field}:
    get:
      deprecated: false
      description: Get a specific property of a card
      operationId: get-cards-id-field
      parameters:
        - description: The ID of the Card
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The desired field.
          in: path
          name: field
          required: true
          schema:
            description: The fields on a Card.
            enum: *ref_17
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_14
                type: object
          description: Success
      summary: Get a field on a Card
      tags: []
  /checklists:
    post:
      deprecated: false
      description: ''
      operationId: post-checklists
      parameters:
        - description: The ID of the Card that the checklist should be added to.
          in: query
          name: idCard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The name of the checklist. Should be a string of length 1 to 16384.
          in: query
          name: name
          required: false
          schema:
            maxLength: 16384
            minLength: 1
            type: string
        - description: 'The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.'
          in: query
          name: pos
          required: false
          schema:
            oneOf: *ref_16
        - description: The ID of a checklist to copy into the new checklist.
          in: query
          name: idChecklistSource
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Create a Checklist
      tags: []
  /checklists/{id}:
    delete:
      deprecated: false
      description: Delete a checklist
      operationId: delete-checklists-id
      responses:
        '200':
          description: Success
      summary: Delete a Checklist
      tags: []
    get:
      deprecated: false
      description: ''
      operationId: get-checklists-id
      parameters:
        - description: 'Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource).'
          in: query
          name: cards
          required: false
          schema:
            default: none
            enum:
              - all
              - closed
              - none
              - open
              - visible
            type: string
        - description: 'The check items on the list to return. One of: `all`, `none`.'
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            enum:
              - all
              - none
            type: string
        - description: 'The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`, `due`, `dueReminder`, `idMember`'
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos, state, due, dueReminder, idMember
            enum:
              - all
              - name
              - nameData
              - pos
              - state
              - type
              - due
              - dueReminder
              - idMember
            type: string
        - description: '`all` or a comma-separated list of checklist [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get a Checklist
      tags: []
    parameters:
      - description: ID of a checklist.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update an existing checklist.
      operationId: put-checlists-id
      parameters:
        - description: Name of the new checklist being created. Should be length of 1 to 16384.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: 'Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number.'
          in: query
          name: pos
          required: false
          schema:
            oneOf: *ref_16
      responses:
        '200':
          description: Success
      summary: Update a Checklist
      tags: []
  /checklists/{id}/board:
    get:
      deprecated: false
      description: ''
      operationId: get-checklists-id-board
      parameters:
        - description: ID of a checklist.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum:
              - all
              - name
            type: string
      responses:
        '200':
          description: Success
      summary: Get the Board the Checklist is on
      tags: []
  /checklists/{id}/cards:
    get:
      deprecated: false
      description: ''
      operationId: get-checklists-id-cards
      parameters:
        - description: ID of a checklist.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Get the Card a Checklist is on
      tags: []
  /checklists/{id}/checkItems:
    get:
      deprecated: false
      description: ''
      operationId: get-checklists-id-checkitems
      parameters:
        - description: 'One of: `all`, `none`.'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - none
            type: string
        - description: 'One of: `all`, `name`, `nameData`, `pos`, `state`,`type`, `due`, `dueReminder`, `idMember`.'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos, state, due, dueReminder, idMember
            enum:
              - all
              - name
              - nameData
              - pos
              - state
              - type
              - due
              - dueReminder
              - idMember
            type: string
          style: form
      responses:
        '200':
          description: Success
      summary: Get Checkitems on a Checklist
      tags: []
    parameters:
      - description: ID of a checklist.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: ''
      operationId: post-checklists-id-checkitems
      parameters:
        - description: The name of the new check item on the checklist. Should be a string of length 1 to 16384.
          in: query
          name: name
          required: true
          schema:
            maxLength: 16384
            minLength: 1
            type: string
        - description: 'The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number.'
          in: query
          name: pos
          required: false
          schema:
            default: bottom
            type: string
            oneOf: *ref_16
        - description: Determines whether the check item is already checked when created.
          in: query
          name: checked
          required: false
          schema:
            default: false
            type: boolean
        - description: A due date for the checkitem
          in: query
          name: due
          required: false
          schema:
            format: date
            type: string
        - description: A dueReminder for the due date on the checkitem
          in: query
          name: dueReminder
          required: false
          schema:
            nullable: true
            type: number
        - description: An ID of a member resource.
          in: query
          name: idMember
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Create Checkitem on Checklist
      tags: []
  /checklists/{id}/checkItems/{idCheckItem}:
    delete:
      deprecated: false
      description: Remove an item from a checklist
      operationId: delete-checklists-id-checkitems-idcheckitem
      responses:
        '200':
          description: Success
      summary: Delete Checkitem from Checklist
      tags: []
    get:
      deprecated: false
      description: ''
      operationId: get-checklists-id-checkitems-idcheckitem
      parameters:
        - description: 'One of: `all`, `name`, `nameData`, `pos`, `state`, `type`, `due`, `dueReminder`, `idMember`,.'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos, state, due, dueReminder, idMember
            enum:
              - all
              - name
              - nameData
              - pos
              - state
              - type
              - due
              - dueReminder
              - idMember
            type: string
          style: form
      responses:
        '200':
          description: Success
      summary: Get a Checkitem on a Checklist
      tags: []
    parameters:
      - description: ID of a checklist.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: ID of the check item to retrieve.
        in: path
        name: idCheckItem
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
  /checklists/{id}/{field}:
    get:
      description: ''
      operationId: get-checklists-id-field
      responses:
        '200':
          description: Success
      summary: Get field on a Checklist
      tags: []
    parameters:
      - description: ID of a checklist.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: Field to update.
        in: path
        name: field
        required: true
        schema:
          enum:
            - name
            - pos
          type: string
    put:
      deprecated: false
      description: ''
      operationId: put-checklists-id-field
      parameters:
        - description: The value to change the checklist name to. Should be a string of length 1 to 16384.
          in: query
          name: value
          required: true
          schema:
            oneOf:
              - oneOf: *ref_16
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
      responses:
        '200':
          description: Success
      summary: Update field on a Checklist
      tags: []
  /customFields:
    post:
      deprecated: false
      description: Create a new Custom Field on a board.
      operationId: post-customfields
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_cardFront:
                  default: true
                  description: Whether this Custom Field should be shown on the front of Cards
                  type: boolean
                idModel:
                  description: The ID of the model for which the Custom Field is being defined. This should always be the ID of a board.
                  example: 5abbe4b7ddc1b351ef961414
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                modelType:
                  description: The type of model that the Custom Field is being defined on. This should always be `board`.
                  enum:
                    - board
                  type: string
                name:
                  description: The name of the Custom Field
                  type: string
                options:
                  description: 'If the type is `checkbox` '
                  type: string
                pos:
                  description: ''
                  oneOf: *ref_16
                type:
                  description: The type of Custom Field to create.
                  enum:
                    - checkbox
                    - list
                    - number
                    - text
                    - date
                  type: string
              required:
                - idModel
                - modelType
                - name
                - type
                - pos
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_18
                type: object
          description: Success
      summary: Create a new Custom Field on a Board
      tags: []
  /customFields/{id}:
    delete:
      deprecated: false
      description: Delete a Custom Field from a board.
      operationId: delete-customfields-id
      responses:
        '200':
          description: Success
      summary: Delete a Custom Field definition
      tags: []
    get:
      deprecated: false
      description: ''
      operationId: get-customfields-id
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_18
                type: object
          description: Success
      summary: Get a Custom Field
      tags: []
    parameters:
      - description: ID of the Custom Field.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a Custom Field definition.
      operationId: put-customfields-id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display/cardFront:
                  description: Whether to display this custom field on the front of cards
                  type: boolean
                name:
                  description: The name of the Custom Field
                  type: string
                pos:
                  oneOf: *ref_16
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_18
                type: object
          description: Success
      summary: Update a Custom Field definition
      tags: []
  /customFields/{id}/options:
    get:
      deprecated: false
      description: Get the options of a drop down Custom Field
      operationId: post-customfields-id-options
      responses:
        '200':
          description: Success
      summary: Get Options of Custom Field drop down
      tags: []
    parameters:
      - description: ID of the customfield.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Add an option to a dropdown Custom Field
      operationId: get-customfields-id-options
      responses:
        '200':
          description: Success
      summary: Add Option to Custom Field dropdown
      tags: []
  /customFields/{id}/options/{idCustomFieldOption}:
    delete:
      deprecated: false
      description: Delete an option from a Custom Field dropdown.
      operationId: delete-customfields-options-idcustomfieldoption
      responses:
        '200':
          description: Success
      summary: Delete Option of Custom Field dropdown
      tags: []
    get:
      deprecated: false
      description: Retrieve a specific, existing Option on a given dropdown-type Custom Field
      operationId: get-customfields-options-idcustomfieldoption
      responses:
        '200':
          description: Success
      summary: Get Option of Custom Field dropdown
      tags: []
    parameters:
      - description: ID of the customfielditem.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: ID of the customfieldoption to retrieve.
        in: path
        name: idCustomFieldOption
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
  /emoji:
    get:
      deprecated: false
      description: List available Emoji
      operationId: emoji
      parameters:
        - description: The locale to return emoji descriptions and names in. Defaults to the logged in member's locale.
          in: query
          name: locale
          required: false
          schema:
            type: string
        - description: '`true` to return spritesheet URLs in the response'
          in: query
          name: spritesheets
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_49
                  trello:
                    items:
                      properties:
                        category:
                          example: Smileys & People
                          type: string
                        keywords:
                          items:
                            example: face
                            type: string
                          type: array
                        name:
                          example: GRINNING FACE
                          type: string
                        native:
                          example: 😀
                          type: string
                        sheetX:
                          example: 30
                          type: number
                        sheetY:
                          example: 24
                          type: number
                        shortName:
                          example: grinning
                          type: string
                        shortNames:
                          items:
                            example: grinning"
                            type: string
                          type: array
                        text:
                          example: ':)'
                          type: string
                        texts:
                          example: null
                          nullable: true
                          type: string
                        tts:
                          example: grinning face
                          type: string
                        unified:
                          example: 1F600
                          type: string
                      type: object
                    type: array
                type: object
          description: Success
      security: []
      summary: List available Emoji
      tags: []
  /enterprises/${id}/enterpriseJoinRequest/bulk:
    put:
      deprecated: false
      description: Decline enterpriseJoinRequests from one organization or bulk amount of organizations
      operationId: put-enterprises-id-enterpriseJoinRequest-bulk
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An array of IDs of an Organization resource.
          in: query
          name: idOrganizations
          required: true
          schema:
            items:
              anyOf:
                - properties: *ref_19
                  type: object
            type: array
      responses:
        '200':
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Decline enterpriseJoinRequests from one organization or a bulk list of organizations.
      tags: []
  /enterprises/{id}:
    get:
      deprecated: false
      description: Get an enterprise by its ID.
      operationId: get-enterprises-id
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is ''normal'' or ''admins''. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: `none`, `normal`, `admins`, `owners`, `all`'
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: 'One of: `avatarHash`, `fullName`, `initials`, `username`'
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username
            type: string
        - description: Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.
          in: query
          name: member_filter
          required: false
          schema:
            default: none
            type: string
        - description: This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.
          in: query
          name: member_sort
          required: false
          schema:
            type: string
        - description: 'Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response''s header will contain the total count and pagination state.'
          in: query
          name: member_sortBy
          required: false
          schema:
            default: none
            type: string
        - description: 'Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`'
          in: query
          name: member_sortOrder
          required: false
          schema:
            default: id
            type: string
        - description: Any integer between 0 and 100.
          in: query
          name: member_startIndex
          required: false
          schema:
            default: '1'
            format: int32
            type: integer
        - description: 0 to 100
          in: query
          name: member_count
          required: false
          schema:
            default: '10'
            format: int32
            type: integer
        - description: 'One of: `none`, `members`, `public`, `all`'
          in: query
          name: organizations
          required: false
          schema:
            default: none
            type: string
        - description: Any valid value that the [nested organization field resource]() accepts.
          in: query
          name: organization_fields
          required: false
          schema:
            default: none
            type: string
        - description: Whether or not to include paid account information in the returned workspace objects
          in: query
          name: organization_paid_accounts
          required: false
          schema:
            default: false
            type: boolean
        - description: 'Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`'
          in: query
          name: organization_memberships
          required: false
          schema:
            default: none
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_50
                  dateOrganizationPrefsLastUpdated:
                    example: '2019-08-22T18:15:53.546Z'
                    format: date
                    type: string
                  displayName:
                    example: Bentley's Test Enterprise!
                    type: string
                  domains:
                    items:
                      format: url
                      type: string
                    type: array
                  enterpriseDomains:
                    items:
                      format: url
                      type: string
                    type: array
                  id:
                    example: 59c15d19566e197b23665901
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
                  idAdmins:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  idOrganizations:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  idp:
                    properties:
                      certificate:
                        example: null
                        nullable: true
                        type: string
                      loginUrl:
                        example: null
                        format: url
                        nullable: true
                        type: string
                      requestSigned:
                        example: false
                        type: boolean
                    type: object
                  isRealEnterprise:
                    example: true
                    type: boolean
                  licenses:
                    properties:
                      maxMembers:
                        example: null
                        format: integer
                        nullable: true
                        type: number
                      relatedEnterprises:
                        items:
                          properties:
                            count:
                              example: 5
                              format: integer
                              type: number
                            displayName:
                              example: My Test Enterprise!
                              type: string
                            name:
                              example: enterprise_name
                              type: string
                          type: object
                        type: array
                      totalMembers:
                        example: 5
                        format: integer
                        type: number
                    type: object
                  logoHash:
                    example: null
                    nullable: true
                    type: string
                  logoUrl:
                    example: null
                    nullable: true
                    type: string
                  name:
                    example: bentley_test
                    type: string
                  organizationPrefs:
                    properties:
                      attachmentRestrictions:
                        items:
                          enum:
                            - computer
                            - trello
                            - google-drive
                            - box
                            - onedrive
                            - link
                          type: string
                        type: array
                      boardDeleteRestrict:
                        type: object
                      boardVisibilityRestrict:
                        type: object
                    type: object
                  pluginWhitelistingEnabled:
                    items:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    type: array
                  prefs:
                    properties:
                      autoJoinOrganizations:
                        example: false
                        type: boolean
                      brandingColor:
                        type: string
                      mandatoryTransferDate:
                        example: null
                        format: date
                        nullable: true
                        type: string
                      maxMembers:
                        example: null
                        nullable: true
                        type: number
                      notifications:
                        type: object
                      signup:
                        properties:
                          banner:
                            type: string
                          bannerHtml:
                            example: |
                              <p>Hello</p>
                            type: string
                        type: object
                      ssoOnly:
                        example: false
                        type: boolean
                    type: object
                  products:
                    items:
                      format: integer
                      type: number
                    type: array
                  ssoActivationFailed:
                    type: boolean
                type: object
          description: Success
      summary: Get an Enterprise
      tags: []
  /enterprises/{id}/admins:
    get:
      deprecated: false
      description: Get an enterprise's admin members.
      operationId: get-enterprises-id-admins
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Any valid value that the [nested member field resource]() accepts.
          in: query
          name: fields
          required: false
          schema:
            default: fullName, userName
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_51
                  fullName:
                    example: Bob Loblaw
                    type: string
                  id:
                    example: 5dced8665015383ed5ca248c
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  username:
                    example: bobloblaw
                    type: string
                type: object
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Get Enterprise admin Members
      tags: []
  /enterprises/{id}/admins/{idMember}:
    delete:
      deprecated: false
      description: |-
        Remove a member as admin from an enterprise.

         NOTE: This endpoint is not available to enterprises that have opted in to user management via AdminHub.
      operationId: enterprises-id-organizations-idmember
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of the member to be removed as an admin from enterprise.
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Member as admin from Enterprise.
      tags: []
    put:
      deprecated: false
      description: |-
        Make Member an admin of Enterprise.

         NOTE: This endpoint is not available to enterprises that have opted in to user management via AdminHub.
      operationId: put-enterprises-id-admins-idmember
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of member to be made an admin of enterprise.
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Update Member to be admin of Enterprise
      tags: []
  /enterprises/{id}/auditlog:
    get:
      description: |-
        Returns an array of Actions related to the Enterprise object. Used for populating data sent to Google Sheets from an Enterprise's audit log page: https://trello.com/e/{enterprise_name}/admin/auditlog. An Enterprise admin token is required for this route. 

         NOTE: For enterprises that have opted in to user management via AdminHub, the auditlog will will contain actions taken in AdminHub, but may not contain the source for those actions.
      operationId: get-enterprises-id-auditlog
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_52
                    date:
                      example: '2018-04-26T17:03:25.155Z'
                      format: date
                      type: string
                    idAction:
                      example: 5dced8665015383ed5ca248c
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    member:
                      properties:
                        fullName:
                          example: Bentley Cook
                          type: string
                        id:
                          example: 5bc79d4206526d2279c1e6ea
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        username:
                          example: bentleycook
                          type: string
                      type: object
                    memberCreator:
                      properties:
                        fullName:
                          example: Bob Loblaw (Trello)
                          type: string
                        id:
                          example: 5bc79d4206526d2279c1e6ea
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        username:
                          example: bobloblaw
                          type: string
                      type: object
                    organization:
                      properties:
                        enterpriseJoinRequest:
                          nullable: true
                          properties:
                            date:
                              example: '2018-04-26T17:03:25.155Z'
                              format: date
                              type: string
                            idEnterprise:
                              example: 617ac9070293e6612650e0ca
                              pattern: ^[0-9a-fA-F]{24}$
                              type: string
                            idMember:
                              example: 5bc79d4206526d2279c1e6ea
                              pattern: ^[0-9a-fA-F]{24}$
                              type: string
                          type: object
                        id:
                          example: 617ac9070293e6612650e0ca
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        name:
                          example: organization name
                          type: string
                      type: object
                    type:
                      example: addOrganizationToEnterprise
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get auditlog data for an Enterprise
      tags: []
  /enterprises/{id}/claimableOrganizations:
    get:
      deprecated: false
      description: Get the Workspaces that are claimable by the enterprise by ID. Can optionally query for workspaces based on activeness/ inactiveness.
      operationId: get-enterprises-id-claimableOrganizations
      parameters:
        - description: ID of the enterprise to retrieve
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Limits the number of workspaces to be sorted
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Specifies the sort order to return matching documents
          in: query
          name: cursor
          required: false
          schema:
            type: string
        - description: Name of the enterprise to retrieve workspaces for
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace
          in: query
          name: activeSince
          required: false
          schema:
            type: string
        - description: Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace
          in: query
          name: inactiveSince
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_47
                  claimableCount:
                    example: 2
                    type: number
                  organizations:
                    items:
                      properties:
                        activeMembershipCount:
                          example: 5
                          type: number
                        dateLastActive:
                          description: The date of the most recent activity on any of the boards in the workspace. If the workspace has no boards, or the boards have no activity, this value will be null.
                          example: '2019-08-22T18:15:53.546Z'
                          format: date
                          nullable: true
                          type: string
                        displayName:
                          example: Organization Name
                          type: string
                        id:
                          example: 617abd5995eae45169a11059
                          type: string
                          pattern: ^[0-9a-fA-F]{24}$
                        idActiveAdmins:
                          items:
                            example: 5abbe4b7ddc1b351ef961414
                            pattern: ^[0-9a-fA-F]{24}$
                            type: string
                          type: array
                        logoUrl:
                          example: null
                          nullable: true
                          type: string
                        name:
                          example: organization_name
                          type: string
                        products:
                          items:
                            format: integer
                            type: number
                          type: array
                      type: object
                    type: array
                type: object
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected erorr
      summary: Get ClaimableOrganizations of an Enterprise
      tags: []
  /enterprises/{id}/members:
    get:
      deprecated: false
      description: Get the members of an enterprise.
      operationId: get-enterprises-id-members
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object).
          in: query
          name: fields
          schema:
            default: avatarHash, fullName, initials, username
            type: string
        - description: Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.
          in: query
          name: filter
          required: false
          schema:
            nullable: true
            type: string
        - description: This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: 'Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is ''normal'' or ''admins''. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: 'Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.'
          in: query
          name: sortOrder
          required: false
          schema:
            default: null
            enum:
              - ascending
              - descending
              - asc
              - desc
              - null
            nullable: true
            type: string
        - description: Any integer between 0 and 9999.
          in: query
          name: startIndex
          required: false
          schema:
            format: int32
            maximum: 9999
            minimum: 0
            type: integer
        - description: '[SCIM-style filter](/cloud/trello/scim/).'
          in: query
          name: count
          required: false
          schema:
            default: none
            type: string
        - description: Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            type: string
        - description: Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_4
                  type: object
                type: array
          description: Success
      summary: Get Members of Enterprise
      tags: []
  /enterprises/{id}/members/query:
    get:
      deprecated: false
      description: Get an enterprise's users. You can choose to retrieve licensed members, board guests, etc.
      operationId: get-users-id
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: When true, returns members who possess a license for the corresponding Trello Enterprise; when false, returns members who do not. If unspecified, both licensed and unlicensed members will be returned.
          in: query
          name: licensed
          required: false
          schema:
            default: false
            type: boolean
        - description: When true, returns members who have been deactivated for the corresponding Trello Enterprise; when false, returns members who have not. If unspecified, both active and deactivated members will be returned.
          in: query
          name: deactivated
          required: false
          schema:
            default: false
            type: boolean
        - description: When true, returns members who are guests on one or more boards in the corresponding Trello Enterprise (but do not possess a license); when false, returns members who are not. If unspecified, both guests and non-guests will be returned.
          in: query
          name: collaborator
          required: false
          schema:
            default: false
            type: boolean
        - description: When true, returns members who are managed by the corresponding Trello Enterprise; when false, returns members who are not. If unspecified, both managed and unmanaged members will be returned.
          in: query
          name: managed
          required: false
          schema:
            default: none
            type: boolean
        - description: When true, returns members who are administrators of the corresponding Trello Enterprise; when false, returns members who are not. If unspecified, both admin and non-admin members will be returned.
          in: query
          name: admin
          required: false
          schema:
            default: false
            type: boolean
        - description: Returns only Trello users active since this date (inclusive).
          in: query
          name: activeSince
          required: false
          schema:
            default: none
            type: string
        - description: Returns only Trello users active since this date (inclusive).
          in: query
          name: inactiveSince
          required: false
          schema:
            default: none
            type: string
        - description: Returns members with email address or full name that start with the search value.
          in: query
          name: search
          required: false
          schema:
            default: none
            type: string
        - description: Cursor to return next set of results
          in: query
          name: startIndex
          required: false
          schema:
            default: none
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_55
                    admin:
                      type: boolean
                    collaborator:
                      type: boolean
                    deactivated:
                      type: boolean
                    licensed:
                      type: boolean
                    managed:
                      type: boolean
                    member:
                      example:
                        avatarURL: trello.com/avatarURL
                        confirmed: true
                        dateLastImpression: '2023-05-24T22:41:36.406Z'
                        email: amath@trello.com
                        fullname: Lex Math
                        id: 646e92a0a016198d3cf81e8a
                        initials: AM
                        memberType: Admin
                        username: amath
                      properties:
                        avatarURL:
                          type: string
                        confirmed:
                          type: boolean
                        dateLastImpression:
                          type: string
                        email:
                          type: string
                        fullname:
                          type: string
                        id:
                          type: string
                        initials:
                          type: string
                        memberType:
                          type: string
                        username:
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
      summary: Get Users of an Enterprise
      tags: []
  /enterprises/{id}/members/{idMember}:
    get:
      deprecated: false
      description: Get a specific member of an enterprise by ID.
      operationId: get-enterprises-id-members-idmember
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An ID of a member resource.
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A comma separated list of any valid values that the [nested member field resource]() accepts.
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username
            type: string
        - description: Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            type: string
        - description: Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_4
                type: object
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Get a Member of Enterprise
      tags: []
  /enterprises/{id}/members/{idMember}/deactivated:
    put:
      deprecated: false
      description: |-
        Deactivate a Member of an Enterprise.

         NOTE: Deactivation is not possible for enterprises that have opted in to user management via AdminHub.
      operationId: enterprises-id-members-idMember-deactivated
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of the Member to deactive.
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether the user is deactivated or not.
          in: query
          name: value
          required: true
          schema:
            type: boolean
        - description: A comma separated list of any valid values that the [nested member field resource]() accepts.
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username
            enum: *ref_3
            type: string
          style: form
        - description: Any valid value that the [nested organization resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          explode: false
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            enum: *ref_22
            type: string
          style: form
        - description: Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            enum: *ref_23
            type: string
      responses:
        '200':
          description: Success
      summary: Deactivate a Member of an Enterprise.
      tags: []
  /enterprises/{id}/members/{idMember}/licensed:
    put:
      deprecated: false
      description: |-
        This endpoint is used to update whether the provided Member should use one of the Enterprise's available licenses or not. Revoking a license will deactivate a Member of an Enterprise. 

         NOTE: Revoking of licenses is not possible for enterprises that have opted in to user management via AdminHub.
      operationId: put-enterprises-id-members-idmember-licensed
      parameters:
        - description: ID of the Enterprise.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the Member
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Boolean value to determine whether the user should be given an Enterprise license (true) or not (false).
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_4
                type: object
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Update a Member's licensed status
  /enterprises/{id}/organizations:
    put:
      deprecated: false
      description: |-
        Transfer an organization to an enterprise.

         NOTE: For enterprises that have opted in to user management via AdminHub, this endpoint will result in the organization being added to the enterprise asynchronously. A 200 response only indicates receipt of the request, it does not indicate successful addition to the enterprise.
      operationId: put-enterprises-id-organizations
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of Organization to be transferred to Enterprise.
          in: query
          name: idOrganization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                    - properties: *ref_19
                      type: object
                type: array
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Transfer an Organization to an Enterprise.
      tags: []
  /enterprises/{id}/organizations/bulk/{idOrganizations}:
    get:
      deprecated: false
      description: |-
        Accept an array of organizations to an enterprise.

         NOTE: For enterprises that have opted in to user management via AdminHub, this endpoint will result in organizations being added to the enterprise asynchronously. A 200 response only indicates receipt of the request, it does not indicate successful addition to the enterprise.
      operationId: get-enterprises-id-organizations-bulk-idOrganizations
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An array of IDs of the organizations to be removed from the enterprise.
          in: path
          name: idOrganizations
          required: true
          schema:
            items:
              anyOf:
                - properties: *ref_19
                  type: object
            type: array
      responses:
        '200':
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected Error
      summary: Bulk accept a set of organizations to an Enterprise.
      tags: []
  /enterprises/{id}/organizations/{idOrg}:
    delete:
      deprecated: false
      description: Remove an organization from an enterprise.
      operationId: delete-enterprises-id-organizations-idorg
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of the organization to be removed from the enterprise.
          in: path
          name: idOrg
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Delete an Organization from an Enterprise.
      tags: []
  /enterprises/{id}/pendingOrganizations:
    get:
      deprecated: false
      description: Get the Workspaces that are pending for the enterprise by ID.
      operationId: get-enterprises-id-pendingOrganizations
      parameters:
        - description: ID of the enterprise to retrieve
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace
          in: query
          name: activeSince
          required: false
          schema:
            type: string
        - description: Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace
          in: query
          name: inactiveSince
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_56
                    date:
                      example: '2018-10-17T19:10:14.808Z'
                      format: date
                      type: string
                    displayName:
                      example: Organization Name
                      type: string
                    id:
                      example: 617ac9070293e6612650e0ca
                      type: string
                      pattern: ^[0-9a-fA-F]{24}$
                    idMember:
                      example: 5589c3ea49b40cedc28cf70e
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    logoUrl:
                      example: null
                      nullable: true
                      type: string
                    memberRequestor:
                      properties:
                        fullName:
                          example: Bob Loblaw (Trello)
                          type: string
                        id:
                          example: 59cd149051aa57a706962996
                          type: string
                          pattern: ^[0-9a-fA-F]{24}$
                      type: object
                    membershipCount:
                      example: 2
                      type: number
                    transferability:
                      properties:
                        newBillableMembers:
                          items:
                            properties:
                              avatarHash:
                                example: fc8faaaee46666a4eb8b626c08933e16
                                type: string
                              fullName:
                                example: Bob Loblaw
                                type: string
                              id:
                                example: 5ab10be237846c43015f1091
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              initials:
                                example: BL
                                type: string
                              username:
                                example: bobloblaw
                                type: string
                            type: object
                          type: array
                        restrictedMembers:
                          items:
                            properties:
                              avatarHash:
                                example: fc8faaaee46666a4eb8b626c08933e16
                                type: string
                              fullName:
                                example: Bob Loblaw
                                type: string
                              id:
                                example: 5ab10be237846c43015f1091
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              initials:
                                example: BL
                                type: string
                              username:
                                example: bobloblaw
                                type: string
                            type: object
                          type: array
                        transferrable:
                          example: true
                          type: boolean
                      type: object
                  type: object
                type: array
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected erorr
      summary: Get PendingOrganizations of an Enterprise
      tags: []
  /enterprises/{id}/signupUrl:
    get:
      deprecated: false
      description: Get the signup URL for an enterprise.
      operationId: get-enterprises-id-signupurl
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: authenticate
          required: false
          schema:
            default: false
            type: boolean
        - description: ''
          in: query
          name: confirmationAccepted
          required: false
          schema:
            default: false
            type: boolean
        - description: Any valid URL.
          in: query
          name: returnUrl
          required: false
          schema:
            default: null
            format: url
            nullable: true
            type: string
        - description: Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP.
          in: query
          name: tosAccepted
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  signupUrl:
                    type: string
                type: object
          description: Success
      summary: Get signupUrl for Enterprise
      tags: []
  /enterprises/{id}/tokens:
    post:
      deprecated: false
      description: Create an auth Token for an Enterprise.
      operationId: post-enterprises-id-tokens
      parameters:
        - description: ID of the enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: 'One of: `1hour`, `1day`, `30days`, `never`'
          in: query
          name: expiration
          required: false
          schema:
            default: none
            type: string
      responses:
        '200':
          description: Success
      summary: Create an auth Token for an Enterprise.
      tags: []
  /enterprises/{id}/transferrable/bulk/{idOrganizations}:
    get:
      deprecated: false
      description: Get a list of organizations that can be transferred to an enterprise when given a bulk list of organizations.
      operationId: get-enterprises-id-transferrable-bulk-idOrganizations
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An array of IDs of an Organization resource.
          in: path
          name: idOrganizations
          required: true
          schema:
            items:
              anyOf:
                - properties: *ref_19
                  type: object
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                    - properties: &ref_24
                        newBillableMembers:
                          items:
                            properties:
                              avatarHash:
                                example: fc8faaaee46666a4eb8b626c08933e16
                                type: string
                              fullName:
                                example: Bob Loblaw
                                type: string
                              id:
                                example: 5ab10be237846c43015f1091
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              initials:
                                example: BL
                                type: string
                              username:
                                example: bobloblaw
                                type: string
                            type: object
                          type: array
                        restrictedMembers:
                          items:
                            properties:
                              avatarHash:
                                example: fc8faaaee46666a4eb8b626c08933e16
                                type: string
                              fullName:
                                example: Bob Loblaw
                                type: string
                              id:
                                example: 5ab10be237846c43015f1091
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              initials:
                                example: BL
                                type: string
                              username:
                                example: bobloblaw
                                type: string
                            type: object
                          type: array
                        transferrable:
                          example: true
                          type: boolean
                      type: object
                type: array
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Get a bulk list of organizations that can be transferred to an enterprise.
      tags: []
  /enterprises/{id}/transferrable/organization/{idOrganization}:
    get:
      deprecated: false
      description: Get whether an organization can be transferred to an enterprise.
      operationId: get-enterprises-id-transferrable-organization-idOrganization
      parameters:
        - description: ID of the Enterprise to retrieve.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An ID of an Organization resource.
          in: path
          name: idOrganization
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_24
                type: object
          description: Success
        '401':
          content: *ref_20
          description: Unauthorized
        '404':
          content: *ref_21
          description: The specified resource was not found
        default:
          content:
            application/json:
              schema:
                properties: *ref_8
                required: *ref_9
                type: object
          description: Unexpected error
      summary: Get whether an organization can be transferred to an enterprise.
      tags: []
  /labels:
    post:
      deprecated: false
      description: Create a new Label on a Board.
      operationId: post-labels
      parameters:
        - description: Name for the label
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The color for the label.
          in: query
          name: color
          required: true
          schema:
            enum: *ref_0
            nullable: true
            type: string
        - description: The ID of the Board to create the Label on.
          in: query
          name: idBoard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Create a Label
      tags: []
  /labels/{id}:
    delete:
      deprecated: false
      description: Delete a label by ID.
      operationId: delete-labels-id
      responses:
        '200':
          description: Success
      summary: Delete a Label
      tags: []
    get:
      deprecated: false
      description: Get information about a single Label.
      operationId: get-labels-id
      parameters:
        - description: all or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/)
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get a Label
      tags: []
    parameters:
      - description: The ID of the Label
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a label by ID.
      operationId: put-labels-id
      parameters:
        - description: The new name for the label
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: 'The new color for the label. See: [fields](/cloud/trello/guides/rest-api/object-definitions/) for color options'
          in: query
          name: color
          required: false
          schema:
            enum: *ref_0
            nullable: true
            type: string
      responses:
        '200':
          description: Success
      summary: Update a Label
      tags: []
  /labels/{id}/{field}:
    put:
      deprecated: false
      description: Update a field on a label.
      operationId: put-labels-id-field
      parameters:
        - description: The id of the label
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The field on the Label to update.
          in: path
          name: field
          required: true
          schema:
            enum:
              - color
              - name
            type: string
        - description: The new value for the field.
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Update a field on a label
      tags: []
  /lists:
    post:
      deprecated: false
      description: Create a new List on a Board
      operationId: post-lists
      parameters:
        - description: Name for the list
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The long ID of the board the list should be created on
          in: query
          name: idBoard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ID of the List to copy into the new List
          in: query
          name: idListSource
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Position of the list. `top`, `bottom`, or a positive floating point number
          in: query
          name: pos
          required: false
          schema:
            oneOf:
              - format: float
                type: number
              - enum:
                  - top
                  - bottom
                type: string
      responses:
        '200':
          description: Success
      summary: Create a new List
      tags: []
  /lists/{id}:
    get:
      deprecated: false
      description: Get information about a List
      operationId: get-lists-id
      parameters:
        - description: '`all` or a comma separated list of List field names.'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: name,closed,idBoard,pos
            type: string
          style: form
      responses:
        '200':
          description: Success
      summary: Get a List
      tags: []
    parameters:
      - description: The ID of the list
        in: path
        name: id
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update the properties of a List
      operationId: put-lists-id
      parameters:
        - description: New name for the list
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Whether the list should be closed (archived)
          in: query
          name: closed
          required: false
          schema:
            type: boolean
        - description: ID of a board the list should be moved to
          explode: false
          in: query
          name: idBoard
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
          style: form
        - description: 'New position for the list: `top`, `bottom`, or a positive floating point number'
          in: query
          name: pos
          required: false
          schema:
            oneOf:
              - format: float
                type: number
              - enum:
                  - top
                  - bottom
                type: string
        - description: Whether the active member is subscribed to this list
          in: query
          name: subscribed
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Update a List
      tags: []
  /lists/{id}/actions:
    get:
      deprecated: false
      description: Get the Actions on a List
      operationId: get-lists-id-actions
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).
          in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Get Actions for a List
      tags: []
  /lists/{id}/archiveAllCards:
    post:
      deprecated: false
      description: Archive all cards in a list
      operationId: post-lists-id-archiveallcards
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Archive all Cards in List
      tags: []
  /lists/{id}/board:
    get:
      deprecated: false
      description: Get the board a list is on
      operationId: get-lists-id-board
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
      summary: Get the Board a List is on
      tags: []
  /lists/{id}/cards:
    get:
      deprecated: false
      description: List the cards in a list
      operationId: get-lists-id-cards
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_14
                  type: object
                type: array
          description: Success
      summary: Get Cards in a List
      tags: []
  /lists/{id}/closed:
    put:
      deprecated: false
      description: Archive or unarchive a list
      operationId: put-lists-id-closed
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Set to true to close (archive) the list
          in: query
          name: value
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Archive or unarchive a list
      tags: []
  /lists/{id}/idBoard:
    put:
      deprecated: false
      description: Move a List to a different Board
      operationId: put-id-idboard
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the board to move the list to
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Move List to Board
      tags: []
  /lists/{id}/moveAllCards:
    post:
      deprecated: false
      description: Move all Cards in a List
      operationId: post-lists-id-moveallcards
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the board the cards should be moved to
          in: query
          name: idBoard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the list that the cards should be moved to
          in: query
          name: idList
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Move all Cards in List
      tags: []
  /lists/{id}/{field}:
    put:
      deprecated: false
      description: Rename a list
      operationId: put-lists-id-field
      parameters:
        - description: The ID of the list
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The field on the List to be updated
          in: path
          name: field
          required: true
          schema:
            enum:
              - name
              - pos
              - subscribed
            type: string
        - description: The new value for the field
          in: query
          name: value
          required: false
          schema:
            oneOf:
              - description: The new name for the List
                type: string
              - description: The new position for the List
                format: float
                type: number
              - description: The new position for the List
                enum:
                  - top
                  - bottom
                type: string
              - type: boolean
      responses:
        '200':
          description: Success
      summary: Update a field on a List
      tags: []
  /members/{id}:
    get:
      deprecated: false
      description: Get a member
      operationId: get-members=id
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            oneOf:
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
              - type: string
        - description: See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)
          in: query
          name: boards
          required: false
          schema:
            type: string
        - description: 'One of: `all`, `custom`, `default`, `none`, `premium`'
          in: query
          name: boardBackgrounds
          required: false
          schema:
            default: none
            enum:
              - all
              - custom
              - default
              - none
              - premium
            type: string
        - description: '`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned'
          in: query
          name: boardsInvited
          required: false
          schema:
            enum:
              - closed
              - members
              - open
              - organization
              - pinned
              - public
              - starred
              - unpinned
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: boardsInvited_fields
          required: false
          schema:
            default: name,closed,idOrganization,pinned
            enum: *ref_23
            type: string
          style: form
        - description: Whether to return the boardStars or not
          in: query
          name: boardStars
          required: false
          schema:
            default: false
            type: boolean
        - description: See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: '`all` or `none`'
          in: query
          name: customBoardBackgrounds
          required: false
          schema:
            default: none
            enum:
              - all
              - none
            type: string
        - description: '`all` or `none`'
          in: query
          name: customEmoji
          required: false
          schema:
            default: none
            enum:
              - all
              - none
            type: string
        - description: '`all` or `none`'
          in: query
          name: customStickers
          required: false
          schema:
            default: none
            enum:
              - all
              - none
            type: string
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_3
            type: string
        - description: See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)
          in: query
          name: notifications
          required: false
          schema:
            type: string
        - description: 'One of: `all`, `members`, `none`, `public`'
          in: query
          name: organizations
          required: false
          schema:
            default: none
            enum:
              - all
              - members
              - none
              - public
            type: string
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: organization_fields
          required: false
          schema:
            default: all
            enum: *ref_22
            type: string
        - description: Whether or not to include paid account information in the returned workspace object
          in: query
          name: organization_paid_account
          required: false
          schema:
            default: false
            type: boolean
        - description: 'One of: `all`, `members`, `none`, `public`'
          in: query
          name: organizationsInvited
          required: false
          schema:
            default: none
            enum:
              - all
              - members
              - none
              - public
            type: string
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: organizationsInvited_fields
          required: false
          schema:
            default: all
            enum: *ref_22
            type: string
        - deprecated: true
          description: Whether or not to include paid account information in the returned member object
          in: query
          name: paid_account
          required: false
          schema:
            default: false
            type: boolean
        - description: ''
          in: query
          name: savedSearches
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or `none`'
          in: query
          name: tokens
          required: false
          schema:
            default: none
            enum:
              - all
              - none
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Get a Member
      tags: []
    put:
      deprecated: false
      description: Update a Member
      operationId: put-members-id
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: New name for the member. Cannot begin or end with a space.
          in: query
          name: fullName
          required: false
          schema:
            type: string
        - description: New initials for the member. 1-4 characters long.
          in: query
          name: initials
          required: false
          schema:
            maxLength: 4
            minLength: 1
            type: string
        - description: New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique.
          in: query
          name: username
          required: false
          schema:
            type: string
        - description: ''
          in: query
          name: bio
          required: false
          schema:
            type: string
        - description: 'One of: `gravatar`, `none`, `upload`'
          in: query
          name: avatarSource
          required: false
          schema:
            enum:
              - gravatar
              - none
              - upload
            type: string
        - description: ''
          in: query
          name: prefs/colorBlind
          required: false
          schema:
            type: boolean
        - description: ''
          in: query
          name: prefs/locale
          required: false
          schema:
            type: string
        - description: '`-1` for disabled, `1`, or `60`'
          in: query
          name: prefs/minutesBetweenSummaries
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Update a Member
      tags: []
  /members/{id}/actions:
    get:
      deprecated: false
      description: List the actions for a member
      operationId: get-members-id-actions
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/).
          in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_4
                      type: object
                type: array
          description: Success
      summary: Get a Member's Actions
      tags: []
  /members/{id}/avatar:
    post:
      deprecated: false
      description: Create a new avatar for a member
      operationId: membersidavatar
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: ''
          in: query
          name: file
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: Success
      summary: Create Avatar for Member
      tags: []
  /members/{id}/boardBackgrounds:
    get:
      deprecated: false
      description: Get a member's custom board backgrounds
      operationId: get-members-id-boardbackgrounds
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'One of: `all`, `custom`, `default`, `none`, `premium`'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - custom
              - default
              - none
              - premium
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: &ref_25
                        id:
                          example: 5abbe4b7ddc1b351ef961414
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                      type: object
                type: array
          description: Success
      summary: Get Member's custom Board backgrounds
      tags: []
    post:
      deprecated: false
      description: Upload a new boardBackground
      operationId: post-members-id-boardbackgrounds-1
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: file
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_25
                      type: object
                type: array
          description: Success
      summary: Upload new boardBackground for Member
      tags: []
  /members/{id}/boardBackgrounds/{idBackground}:
    delete:
      deprecated: false
      description: Delete a board background
      operationId: delete-members-id-boardbackgrounds-idbackground
      responses:
        '200':
          description: Success
      summary: Delete a Member's custom Board background
      tags: []
    get:
      deprecated: false
      description: Get a member's board background
      operationId: get-members-id-boardbackgrounds-idbackground
      parameters:
        - description: '`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum:
              - all
              - brightness
              - fullSizeUrl
              - scaled
              - tile
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_25
                type: object
          description: Success
      summary: Get a boardBackground of a Member
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the board background
        in: path
        name: idBackground
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a board background
      operationId: put-members-id-boardbackgrounds-idbackground
      parameters:
        - description: 'One of: `dark`, `light`, `unknown`'
          in: query
          name: brightness
          required: false
          schema:
            enum:
              - dark
              - light
              - unknown
            type: string
        - description: Whether the background should be tiled
          in: query
          name: tile
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_25
                type: object
          description: Success
      summary: Update a Member's custom Board background
      tags: []
  /members/{id}/boardStars:
    get:
      deprecated: false
      description: List a member's board stars
      operationId: get-members-id-boardstars
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Get a Member's boardStars
      tags: []
    post:
      deprecated: false
      description: Star a new board on behalf of a Member
      operationId: post-members-id-boardstars
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            oneOf:
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
              - type: string
        - description: The ID of the board to star
          in: query
          name: idBoard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The position of the newly starred board. `top`, `bottom`, or a positive float.
          in: query
          name: pos
          required: true
          schema:
            oneOf: *ref_16
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_26
                  type: object
                type: array
          description: Success
      summary: Create Star for Board
      tags: []
  /members/{id}/boardStars/{idStar}:
    delete:
      deprecated: false
      description: Unstar a board
      operationId: delete-members-id-boardstars-idstar
      responses:
        '200':
          description: Success
      summary: Delete Star for Board
      tags: []
    get:
      deprecated: false
      description: Get a specific boardStar
      operationId: get-members-id-boardstars-idstar
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_26
                type: object
          description: Success
      summary: Get a boardStar of Member
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the board star
        in: path
        name: idStar
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update the position of a starred board
      operationId: put-members-id-boardstars-idstar
      parameters:
        - description: New position for the starred board. `top`, `bottom`, or a positive float.
          in: query
          name: pos
          required: false
          schema:
            oneOf: *ref_16
      responses:
        '200':
          description: Success
      summary: Update the position of a boardStar of Member
      tags: []
  /members/{id}/boards:
    get:
      deprecated: false
      description: Lists the boards that the user is a member of.
      operationId: get-members-id-boards
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - closed
              - members
              - open
              - organization
              - public
              - starred
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_23
            type: string
        - description: 'Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`'
          in: query
          name: lists
          required: false
          schema:
            default: none
            enum:
              - all
              - closed
              - none
              - open
            type: string
        - description: Whether to include the Organization object with the Boards
          in: query
          name: organization
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: organization_fields
          required: false
          schema:
            default: name,displayName
            enum: *ref_22
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_6
                  required: *ref_7
                  type: object
                type: array
          description: Success
      summary: Get Boards that Member belongs to
      tags: []
  /members/{id}/boardsInvited:
    get:
      deprecated: false
      description: Get the boards the member has been invited to
      operationId: get-members-id-boardsinvited
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_23
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_6
                  required: *ref_7
                  type: object
                type: array
          description: Success
      summary: Get Boards the Member has been invited to
      tags: []
  /members/{id}/cards:
    get:
      deprecated: false
      description: Gets the cards a member is on
      operationId: get-members-id-cards
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'One of: `all`, `closed`, `none`, `open`, `visible`'
          in: query
          name: filter
          required: false
          schema:
            default: visible
            enum:
              - all
              - closed
              - none
              - open
              - visible
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_14
                  type: object
                type: array
          description: Success
      summary: Get Cards the Member is on
      tags: []
  /members/{id}/customBoardBackgrounds:
    get:
      deprecated: false
      description: Get a member's custom board backgrounds
      operationId: get-members-id-customboardbackgrounds
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_25
                  type: object
                type: array
          description: Success
      summary: Get a Member's custom Board Backgrounds
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Upload a new custom board background
      operationId: membersidcustomboardbackgrounds-1
      parameters:
        - description: ''
          in: query
          name: file
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_25
                type: object
          description: Success
      summary: Create a new custom Board Background
      tags: []
  /members/{id}/customBoardBackgrounds/{idBackground}:
    delete:
      deprecated: false
      description: Delete a specific custom board background
      operationId: delete-members-id-customboardbackgrounds-idbackground
      responses:
        '200':
          description: Success
      summary: Delete custom Board Background of Member
      tags: []
    get:
      deprecated: false
      description: Get a specific custom board background
      operationId: get-members-id-customboardbackgrounds-idbackground
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_25
                type: object
          description: Success
      summary: Get custom Board Background of Member
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          oneOf:
            - example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
            - type: string
      - description: The ID of the custom background
        in: path
        name: idBackground
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a specific custom board background
      operationId: put-members-id-customboardbackgrounds-idbackground
      parameters:
        - description: 'One of: `dark`, `light`, `unknown`'
          in: query
          name: brightness
          required: false
          schema:
            enum:
              - dark
              - light
              - unknown
            type: string
        - description: Whether to tile the background
          in: query
          name: tile
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_25
                type: object
          description: Success
      summary: Update custom Board Background of Member
      tags: []
  /members/{id}/customEmoji:
    get:
      deprecated: false
      description: Get a Member's uploaded custom Emojis
      operationId: get-members-id-customemoji
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_27
                    id:
                      example: 5900ac11ed55d6d2c355c5d6
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    name:
                      example: chorizo
                      type: string
                    url:
                      example: https://trello-emoji.s3.amazonaws.com/5589c3ea49b40cedc28cf70e/b40d9925f4e75495104b5e560881d8e4/chorizo.png
                      format: url
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get a Member's customEmojis
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Create a new custom Emoji
      operationId: post-members-id-customemoji
      parameters:
        - description: ''
          in: query
          name: file
          required: true
          schema:
            format: binary
            type: string
        - description: Name for the emoji. 2 - 64 characters
          in: query
          name: name
          required: true
          schema:
            maxLength: 64
            minLength: 2
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_27
                type: object
          description: Success
      summary: Create custom Emoji for Member
      tags: []
  /members/{id}/customEmoji/{idEmoji}:
    get:
      deprecated: false
      description: Get a Member's custom Emoji
      operationId: membersidcustomemojiidemoji
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the custom emoji
          in: path
          name: idEmoji
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of `name`, `url`'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum:
              - name
              - url
              - all
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_27
                type: object
          description: Success
      summary: Get a Member's custom Emoji
      tags: []
  /members/{id}/customStickers:
    get:
      deprecated: false
      description: Get a Member's uploaded stickers
      operationId: get-members-id-customstickers
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_28
                    id:
                      example: 5abbe4b7ddc1b351ef961414
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    scaled:
                      items:
                        properties:
                          id:
                            example: 5abbe4b7ddc1b351ef961414
                            pattern: ^[0-9a-fA-F]{24}$
                            type: string
                        type: object
                      type: array
                    url:
                      format: url
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get Member's custom Stickers
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Upload a new custom sticker
      operationId: post-members-id-customstickers
      parameters:
        - description: ''
          in: query
          name: file
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_28
                type: object
          description: Success
      summary: Create custom Sticker for Member
      tags: []
  /members/{id}/customStickers/{idSticker}:
    delete:
      deprecated: false
      description: Delete a Member's custom Sticker
      operationId: delete-members-id-customstickers-idsticker
      responses:
        '200':
          description: Success
      summary: Delete a Member's custom Sticker
      tags: []
    get:
      deprecated: false
      description: Get a Member's custom Sticker
      operationId: get-members-id-customstickers-idsticker
      parameters:
        - description: '`all` or a comma-separated list of `scaled`, `url`'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum:
              - scaled
              - url
              - all
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_28
                type: object
          description: Success
      summary: Get a Member's custom Sticker
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      - description: The ID of the uploaded sticker
        in: path
        name: idSticker
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
  /members/{id}/notifications:
    get:
      deprecated: false
      description: Get a member's notifications
      operationId: get-members-id-notifications
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: entities
          required: false
          schema:
            default: false
            type: boolean
        - description: ''
          in: query
          name: display
          required: false
          schema:
            default: false
            type: boolean
        - description: ''
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: `all`, `read`, `unread`'
          in: query
          name: read_filter
          required: false
          schema:
            default: all
            type: string
        - description: '`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: Max 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            format: int32
            type: integer
        - description: Max 100
          in: query
          name: page
          required: false
          schema:
            default: '0'
            format: int32
            type: integer
        - description: A notification ID
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: A notification ID
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: ''
          in: query
          name: memberCreator
          required: false
          schema:
            default: true
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_33
                    board:
                      type: object
                      properties: *ref_6
                      required: *ref_7
                    card:
                      type: object
                      properties: *ref_14
                    data:
                      example: null
                      type: string
                    date:
                      example: '2019-11-08T16:02:52.763Z'
                      type: string
                    dateRead:
                      example: null
                      type: string
                    id:
                      example: 5dc591ac425f2a223aba0a8e
                      type: string
                    idAction:
                      example: null
                      nullable: true
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idMemberCreator:
                      example: null
                      nullable: true
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    reactions:
                      example: []
                      type: array
                    type:
                      enum:
                        - cardDueSoon
                      example: cardDueSoon
                      type: string
                    unread:
                      example: true
                      type: boolean
                type: array
          description: Success
      summary: Get Member's Notifications
      tags: []
  /members/{id}/notificationsChannelSettings:
    get:
      deprecated: false
      description: Get a member's notification channel settings
      operationId: get-members-id-notificationChannelSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_31
                    blockedKeys:
                      items:
                        enum: &ref_29
                          - notification_comment_card
                          - notification_added_a_due_date
                          - notification_changed_due_date
                          - notification_card_due_soon
                          - notification_removed_from_card
                          - notification_added_attachment_to_card
                          - notification_created_card
                          - notification_moved_card
                          - notification_archived_card
                          - notification_unarchived_card
                        example: notification_comment_card
                        type: string
                      type: array
                    channel:
                      enum: &ref_30
                        - email
                      example: email
                      type: string
                    id:
                      example: 5dc591ac425f2a223aba0a8e
                      type: string
                    idMember:
                      example: 5589c3ea49b40cedc28cf70e
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                type: array
          description: Success
      summary: Get a Member's notification channel settings
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          oneOf:
            - example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
            - type: string
    put:
      deprecated: false
      description: Update blocked notification keys of Member on a specific channel
      operationId: put-members-id-notificationChannelSettings-channel-blockedKeys
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blockedKeys:
                  description: Blocked key or array of blocked keys.
                  oneOf:
                    - enum: *ref_29
                      example: notification_comment_card
                      type: string
                    - items:
                        enum: *ref_29
                        example: notification_comment_card
                        type: string
                      type: array
                channel:
                  enum: *ref_30
                  example: email
                  type: string
              required:
                - channel
                - blockedKeys
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_31
          description: Success
      summary: Update blocked notification keys of Member on a channel
      tags: []
  /members/{id}/notificationsChannelSettings/{channel}:
    get:
      deprecated: false
      description: Get blocked notification keys of Member on a specific channel
      operationId: get-members-id-notificationChannelSettings-channel
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_31
          description: Success
      summary: Get blocked notification keys of Member on this channel
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          oneOf:
            - example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
            - type: string
      - description: Channel to block notifications on
        in: path
        name: channel
        required: true
        schema:
          enum: *ref_30
          example: email
          type: string
    put:
      deprecated: false
      description: Update blocked notification keys of Member on a specific channel
      operationId: put-members-id-notificationChannelSettings-channel-blockedKeys
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blockedKeys:
                  description: Singular key or array of notification keys
                  oneOf:
                    - enum: *ref_29
                      example: notification_comment_card
                      type: string
                    - items:
                        enum: *ref_29
                        example: notification_comment_card
                        type: string
                      type: array
              required:
                - blockedKeys
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_31
          description: Success
      summary: Update blocked notification keys of Member on a channel
      tags: []
  /members/{id}/notificationsChannelSettings/{channel}/{blockedKeys}:
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          oneOf:
            - example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
            - type: string
      - description: Channel to block notifications on
        in: path
        name: channel
        required: true
        schema:
          enum: *ref_30
          example: email
          type: string
      - description: Singular key or comma-separated list of notification keys
        in: path
        name: blockedKeys
        required: true
        schema:
          enum: *ref_29
          example: notification_comment_card
          type: string
    put:
      deprecated: false
      description: Update blocked notification keys of Member on a specific channel
      operationId: put-members-id-notificationChannelSettings-channel-blockedKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_31
          description: Success
      summary: Update blocked notification keys of Member on a channel
      tags: []
  /members/{id}/oneTimeMessagesDismissed:
    post:
      deprecated: false
      description: Dismiss a message
      operationId: post-members-id-onetimemessagesdismissed
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The message to dismiss
          in: query
          name: value
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Dismiss a message for Member
      tags: []
  /members/{id}/organizations:
    get:
      deprecated: false
      description: Get a member's Workspaces
      operationId: get-members-id-organizations
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private Workspaces)'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - members
              - none
              - public
            type: string
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_22
            type: string
          style: form
        - description: Whether or not to include paid account information in the returned workspace object
          in: query
          name: paid_account
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_19
                  type: object
                type: array
          description: Success
      summary: Get Member's Organizations
      tags: []
  /members/{id}/organizationsInvited:
    get:
      deprecated: false
      description: Get a member's Workspaces they have been invited to
      operationId: get-members-id-organizationsinvited
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_22
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_19
                  type: object
                type: array
          description: Success
      summary: Get Organizations a Member has been invited to
      tags: []
  /members/{id}/savedSearches:
    get:
      deprecated: false
      description: List the saved searches of a Member
      operationId: get-members-id-savedsearches
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_32
                    id:
                      example: 5589b47349b40cedc28ceae2
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    name:
                      example: My Cards
                      type: string
                    pos:
                      example: 1638
                      oneOf: *ref_16
                    query:
                      example: '@me'
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get Member's saved searched
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Create a saved search
      operationId: post-members-id-savedsearches
      parameters:
        - description: The name for the saved search
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The search query
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: The position of the saved search. `top`, `bottom`, or a positive float.
          in: query
          name: pos
          required: true
          schema:
            oneOf: *ref_16
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_32
                type: object
          description: Success
      summary: Create saved Search for Member
      tags: []
  /members/{id}/savedSearches/{idSearch}:
    delete:
      deprecated: false
      description: Delete a saved search
      operationId: delete-members-id-savedsearches-idsearch
      responses:
        '200':
          description: Success
      summary: Delete a saved search
      tags: []
    get:
      deprecated: false
      description: Get a saved search
      operationId: get-members-id-savedsearches-idsearch
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_32
                type: object
          description: Success
      summary: Get a saved search
      tags: []
    parameters:
      - description: The ID or username of the member
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the saved search to delete
        in: path
        name: idSearch
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update a saved search
      operationId: put-members-id-savedsearches-idsearch
      parameters:
        - description: The new name for the saved search
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: The new search query
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: New position for saves search. `top`, `bottom`, or a positive float.
          in: query
          name: pos
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_32
                type: object
          description: Success
      summary: Update a saved search
      tags: []
  /members/{id}/tokens:
    get:
      deprecated: false
      description: List a members app tokens
      operationId: get-members-id-tokens
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Whether to include webhooks
          in: query
          name: webhooks
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_40
                    dateCreated:
                      example: '2019-10-16T14:27:17.304Z'
                      format: date-time
                      type: string
                    dateExpires:
                      example: null
                      format: date-time
                      nullable: true
                      type: string
                    id:
                      example: 5da728c55235b443c5b97181
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idMember:
                      example: 5589c3ea49b40cedc28cf70e
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    identifier:
                      example: App Name
                      type: string
                    permissions:
                      items:
                        properties: &ref_60
                          idModel:
                            oneOf:
                              - example: 5abbe4b7ddc1b351ef961414
                                pattern: ^[0-9a-fA-F]{24}$
                                type: string
                              - enum:
                                  - '*'
                                type: string
                          modelType:
                            enum:
                              - board
                              - member
                              - organization
                              - enterprise
                            type: string
                          read:
                            type: boolean
                          write:
                            type: boolean
                        type: object
                      type: array
                  type: object
                type: array
          description: Success
      summary: Get Member's Tokens
      tags: []
  /members/{id}/{field}:
    get:
      deprecated: false
      description: Get a particular property of a member
      operationId: get-members-id-field
      parameters:
        - description: The ID or username of the member
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: One of the member [fields](/cloud/trello/guides/rest-api/object-definitions/)
          in: path
          name: field
          required: true
          schema:
            enum: *ref_3
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Get a field on a Member
      tags: []
  /notifications/all/read:
    post:
      deprecated: false
      description: Mark all notifications as read
      operationId: post-notifications-all-read
      parameters:
        - description: Boolean to specify whether to mark as read or unread (defaults to `true`, marking as read)
          in: query
          name: read
          required: false
          schema:
            default: true
            type: boolean
        - description: A comma-seperated list of IDs. Allows specifying an array of notification IDs to change the read state for. This will become useful as we add grouping of notifications to the UI, with a single button to mark all notifications in the group as read/unread.
          explode: false
          in: query
          name: ids
          schema:
            items:
              example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_33
          description: Success
      summary: Mark all Notifications as read
      tags: []
  /notifications/{id}:
    get:
      deprecated: false
      description: ''
      operationId: get-notifications-id
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Whether to include the board object
          in: query
          name: board
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            enum: *ref_23
            type: string
          style: form
        - description: Whether to include the card object
          in: query
          name: card
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: card_fields
          required: false
          schema:
            default: name
            description: The fields on a Card.
            enum: *ref_17
            type: string
          style: form
        - description: Whether to include the display object with the results
          in: query
          name: display
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include the entities object with the results
          in: query
          name: entities
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: &ref_35
              - id
              - unread
              - type
              - date
              - dateRead
              - data
              - card
              - board
              - idMemberCreator
              - idAction
              - reactions
            type: string
          style: form
        - description: Whether to include the list object
          in: query
          name: list
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include the member object
          in: query
          name: member
          required: false
          schema:
            default: true
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            enum: *ref_3
            type: string
          style: form
        - description: Whether to include the member object of the creator
          in: query
          name: memberCreator
          required: false
          schema:
            default: true
            type: boolean
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username
            enum: *ref_3
            type: string
        - description: Whether to include the organization object
          in: query
          name: organization
          required: false
          schema:
            default: false
            type: boolean
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            enum: *ref_22
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_33
          description: Success
      summary: Get a Notification
      tags: []
    put:
      deprecated: false
      description: Update the read status of a notification
      operationId: put-notifications-id
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Whether the notification should be marked as read or not
          in: query
          name: unread
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_33
          description: Success
      summary: Update a Notification's read status
      tags: []
  /notifications/{id}/board:
    get:
      deprecated: false
      description: Get the board a notification is associated with
      operationId: get-notifications-id-board
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of board[fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_23
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_6
                    required: *ref_7
                    type: object
          description: Success
      summary: Get the Board a Notification is on
      tags: []
  /notifications/{id}/card:
    get:
      deprecated: false
      description: Get the card a notification is associated with
      operationId: get-notifications-id-card
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            description: The fields on a Card.
            enum: *ref_17
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_14
                    type: object
          description: Success
      summary: Get the Card a Notification is on
      tags: []
  /notifications/{id}/list:
    get:
      deprecated: false
      description: Get the list a notification is associated with
      operationId: get-notifications-id-list
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_34
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_12
                    type: object
          description: Success
      summary: Get the List a Notification is on
      tags: []
  /notifications/{id}/member:
    get:
      deprecated: false
      description: Get the member (not the creator) a notification is about
      operationId: notificationsidmember
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_3
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Get the Member a Notification is about (not the creator)
      tags: []
  /notifications/{id}/memberCreator:
    get:
      deprecated: false
      description: Get the member who created the notification
      operationId: get-notifications-id-membercreator
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_3
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Get the Member who created the Notification
      tags: []
  /notifications/{id}/organization:
    get:
      deprecated: false
      description: Get the organization a notification is associated with
      operationId: get-notifications-id-organization
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          explode: false
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_22
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_19
                    type: object
          description: Success
      summary: Get a Notification's associated Organization
      tags: []
  /notifications/{id}/unread:
    put:
      description: Update Notification's read status
      operationId: put-notifications-id-unread
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: value
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_33
          description: Success
      summary: Update Notification's read status
      tags: []
  /notifications/{id}/{field}:
    get:
      deprecated: false
      description: Get a specific property of a notification
      operationId: get-notifications-id-field
      parameters:
        - description: The ID of the notification
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: A notification [field](/cloud/trello/guides/rest-api/object-definitions/)
          in: path
          name: field
          required: true
          schema:
            enum: *ref_35
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_33
          description: Success
      summary: Get a field of a Notification
      tags: []
  /organizations:
    post:
      deprecated: false
      description: Create a new Workspace
      operationId: post-organizations
      parameters:
        - description: The name to display for the Organization
          in: query
          name: displayName
          required: true
          schema:
            type: string
        - description: The description for the organizations
          in: query
          name: desc
          required: false
          schema:
            type: string
        - description: A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. If the name contains invalid characters, they will be removed. If the name conflicts with an existing name, a new name will be substituted.
          in: query
          name: name
          required: false
          schema:
            minLength: 3
            type: string
        - description: A URL starting with `http://` or `https://`
          in: query
          name: website
          required: false
          schema:
            format: url
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_19
                    type: object
          description: Success
      summary: Create a new Organization
      tags: []
  /organizations/{id}:
    delete:
      deprecated: false
      description: Delete an Organization
      operationId: delete-organizations-id
      responses:
        '200':
          description: Success
      summary: Delete an Organization
      tags: []
    get:
      deprecated: false
      description: ''
      operationId: get-organizations-id
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_19
                type: object
          description: Success
      summary: Get an Organization
      tags: []
    parameters:
      - description: The ID or name of the Organization
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update an organization
      operationId: put-organizations-id
      parameters:
        - description: A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.
          in: query
          name: displayName
          required: false
          schema:
            type: string
        - description: A new description for the organization
          in: query
          name: desc
          required: false
          schema:
            type: string
        - description: A URL starting with `http://`, `https://`, or `null`
          in: query
          name: website
          required: false
          schema:
            type: string
        - description: The Google Apps domain to link this org to.
          in: query
          name: prefs/associatedDomain
          required: false
          schema:
            type: string
        - description: Whether non-workspace members can be added to boards inside the Workspace
          in: query
          name: prefs/externalMembersDisabled
          required: false
          schema:
            type: boolean
        - description: '`1` or `2`'
          in: query
          name: prefs/googleAppsVersion
          required: false
          schema:
            format: int32
            type: integer
        - description: Who on the Workspace can make Workspace visible boards. One of `admin`, `none`, `org`
          in: query
          name: prefs/boardVisibilityRestrict/org
          required: false
          schema:
            type: string
        - description: 'Who can make private boards. One of: `admin`, `none`, `org`'
          in: query
          name: prefs/boardVisibilityRestrict/private
          required: false
          schema:
            type: string
        - description: 'Who on the Workspace can make public boards. One of: `admin`, `none`, `org`'
          in: query
          name: prefs/boardVisibilityRestrict/public
          required: false
          schema:
            type: string
        - description: An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)
          in: query
          name: prefs/orgInviteRestrict
          required: false
          schema:
            type: string
        - description: 'Whether the Workspace page is publicly visible. One of: `private`, `public`'
          in: query
          name: prefs/permissionLevel
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_19
                type: object
          description: Success
      summary: Update an Organization
      tags: []
  /organizations/{id}/actions:
    get:
      deprecated: false
      description: List the actions on a Workspace
      operationId: get-organizations-id-actions
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_5
                  type: object
                type: array
          description: Success
      summary: Get Actions for Organization
      tags: []
  /organizations/{id}/boards:
    get:
      deprecated: false
      description: List the boards in a Workspace
      operationId: get-organizations-id-boards
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`'
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - open
              - closed
              - members
              - organization
              - public
            type: string
        - description: '`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
            enum: *ref_23
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_6
                      required: *ref_7
                      type: object
                type: array
          description: Success
      summary: Get Boards in an Organization
      tags: []
  /organizations/{id}/exports:
    get:
      deprecated: false
      description: Retrieve the exports that exist for the given organization
      operationId: get-organizations-id-exports
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_36
                    exportUrl:
                      example: null
                      nullable: true
                      type: string
                    id:
                      example: 5dced8665015383ed5ca248c
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    size:
                      example: null
                      nullable: true
                      type: string
                    startedAt:
                      example: '2019-11-15T16:55:02.000Z'
                      format: date-time
                      type: string
                    status:
                      properties:
                        attempts:
                          example: 0
                          type: number
                        finished:
                          example: false
                          type: boolean
                        stage:
                          example: Export_queued
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
      summary: Retrieve Organization's Exports
      tags: []
    parameters:
      - description: The ID or name of the Workspace
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    post:
      deprecated: false
      description: Kick off CSV export for an organization
      operationId: post-organizations-id-exports
      parameters:
        - description: Whether the CSV should include attachments or not.
          in: query
          name: attachments
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_36
                type: object
          description: Success
      summary: Create Export for Organizations
      tags: []
  /organizations/{id}/logo:
    delete:
      deprecated: false
      description: Delete a the logo from a Workspace
      operationId: delete-organizations-id-logo
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Delete Logo for Organization
      tags: []
    post:
      deprecated: false
      description: Set the logo image for a Workspace
      operationId: post-organizations-id-logo
      parameters:
        - description: The ID or name of the Workspace
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Image file for the logo
          in: query
          name: file
          required: false
          schema:
            format: binary
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_19
                    type: object
          description: Success
      summary: Update logo for an Organization
      tags: []
  /organizations/{id}/members:
    get:
      deprecated: false
      description: List the members in a Workspace
      operationId: get-organizations-id-members
      parameters:
        - description: The ID or name of the Organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_4
                      type: object
                type: array
          description: Success
      summary: Get the Members of an Organization
      tags: []
    put:
      deprecated: false
      description: ''
      operationId: put-organizations-id-members
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An email address
          in: query
          name: email
          required: true
          schema:
            format: email
            type: string
        - description: Name for the member, at least 1 character not beginning or ending with a space
          in: query
          name: fullName
          required: true
          schema:
            minLength: 1
            type: string
        - description: 'One of: `admin`, `normal`'
          in: query
          name: type
          required: false
          schema:
            default: normal
            enum:
              - admin
              - normal
            type: string
      responses:
        '200':
          description: Success
      summary: Update an Organization's Members
      tags: []
  /organizations/{id}/members/{idMember}:
    delete:
      deprecated: false
      description: Remove a member from a Workspace
      operationId: delete-organizations-id-members
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            oneOf:
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
              - description: Name of the organization
                type: string
        - description: The ID of the Member to remove from the Workspace
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Member from an Organization
      tags: []
    put:
      deprecated: false
      description: Add a member to a Workspace or update their member type.
      operationId: put-organizations-id-members-idmember
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID or username of the member to update
          in: path
          name: idMember
          required: true
          schema:
            oneOf:
              - type: string
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
        - description: 'One of: `admin`, `normal`'
          in: query
          name: type
          required: true
          schema:
            enum:
              - admin
              - normal
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_4
                    type: object
          description: Success
      summary: Update a Member of an Organization
      tags: []
  /organizations/{id}/members/{idMember}/all:
    delete:
      deprecated: false
      description: Remove a member from a Workspace and from all Workspace boards
      operationId: organizations-id-members-idmember-all
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the member to remove from the Workspace
          in: path
          name: idMember
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove a Member from an Organization and all Organization Boards
      tags: []
  /organizations/{id}/members/{idMember}/deactivated:
    put:
      deprecated: false
      description: Deactivate or reactivate a member of a Workspace
      operationId: put-organizations-id-members-idmember-deactivated
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID or username of the member to update
          in: path
          name: idMember
          required: true
          schema:
            oneOf:
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
              - type: string
        - description: ''
          in: query
          name: value
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      summary: Deactivate or reactivate a member of an Organization
      tags: []
  /organizations/{id}/memberships:
    get:
      deprecated: false
      description: List the memberships of a Workspace
      operationId: get-organizations-id-memberships
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: '`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`'
          explode: false
          in: query
          name: filter
          required: false
          schema:
            default: all
            enum:
              - all
              - active
              - admin
              - deactivated
              - me
              - normal
            type: string
          style: form
        - description: Whether to include the Member objects with the Memberships
          in: query
          name: member
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - description: ''
                      properties: *ref_37
                      type: object
                type: array
          description: Success
      summary: Get Memberships of an Organization
      tags: []
  /organizations/{id}/memberships/{idMembership}:
    get:
      deprecated: false
      description: Get a single Membership for an Organization
      operationId: get-organizations-id-memberships-idmembership
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the membership to load
          in: path
          name: idMembership
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Whether to include the Member object in the response
          in: query
          name: member
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - description: ''
                    properties: *ref_37
                    type: object
          description: Success
      summary: Get a Membership of an Organization
      tags: []
  /organizations/{id}/newBillableGuests/{idBoard}:
    get:
      deprecated: false
      description: Used to check whether the given board has new billable guests on it.
      operationId: get-organizations-id-newbillableguests-idboard
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the board to check for new billable guests.
          in: path
          name: idBoard
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Get Organizations new billable guests
      tags: []
  /organizations/{id}/pluginData:
    get:
      deprecated: false
      description: Get organization scoped pluginData on this Workspace
      operationId: get-organizations-id-plugindata
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: &ref_57
                        access:
                          enum:
                            - private
                            - shared
                          example: private
                          type: string
                        id:
                          example: 5c487f39294cab6ac1d6b305
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        idModel:
                          example: 586e8d7b1af892b26d5b76b1
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        idPlugin:
                          example: 55a5d915446f517774210003
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        scope:
                          enum:
                            - member
                            - board
                            - organization
                            - card
                          example: organization
                          type: string
                        value:
                          example: '{"token":"S=s458:U=bda7cda:E=16fd2e21f55:C=1687b30f2c0:P=185:A=it-team-0604:V=2:H=3b0f3bac9c2a2af766202ebb9530a4a5"}'
                          type: string
                      type: object
                type: array
          description: Success
      summary: Get the pluginData Scoped to Organization
      tags: []
  /organizations/{id}/prefs/associatedDomain:
    delete:
      deprecated: false
      description: Remove the associated Google Apps domain from a Workspace
      operationId: delete-organizations-id-prefs-associateddomain
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Remove the associated Google Apps domain from a Workspace
      tags: []
  /organizations/{id}/prefs/orgInviteRestrict:
    delete:
      deprecated: false
      description: Remove the email domain restriction on who can be invited to the Workspace
      operationId: delete-organizations-id-prefs-orginviterestrict
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Delete the email domain restriction on who can be invited to the Workspace
      tags: []
  /organizations/{id}/tags:
    get:
      deprecated: false
      description: List the organization's collections
      operationId: get-organizations-id-tags
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: &ref_38
                        id:
                          example: 58dd6dcaf8b86744d3cb4cde
                          pattern: ^[0-9a-fA-F]{24}$
                          type: string
                        name:
                          example: My Collection
                          type: string
                      type: object
                type: array
          description: Success
      summary: Get Tags of an Organization
      tags: []
    parameters:
      - description: The ID or name of the Organization
        in: path
        name: id
        required: true
        schema:
          oneOf:
            - type: string
            - example: 5abbe4b7ddc1b351ef961414
              pattern: ^[0-9a-fA-F]{24}$
              type: string
    post:
      deprecated: false
      description: Create a Tag in an Organization
      operationId: post-organizations-id-tags
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - properties: *ref_38
                    type: object
          description: Success
      summary: Create a Tag in Organization
      tags: []
  /organizations/{id}/tags/{idTag}:
    delete:
      deprecated: false
      description: Delete an organization's tag
      operationId: delete-organizations-id-tags-idtag
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the tag to delete
          in: path
          name: idTag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Delete an Organization's Tag
      tags: []
  /organizations/{id}/{field}:
    get:
      deprecated: false
      description: ''
      operationId: get-organizations-id-field
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: An organization [field](/cloud/trello/guides/rest-api/object-definitions/)
          in: path
          name: field
          required: true
          schema:
            enum: *ref_22
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_19
                type: object
          description: Success
      summary: Get field on Organization
      tags: []
  /plugins/{idPlugin}/listing:
    post:
      deprecated: false
      description: Create a new listing for a given locale for your Power-Up
      operationId: post-plugins-idplugin-listing
      parameters:
        - description: The ID of the Power-Up for which you are creating a new listing.
          in: path
          name: idPlugin
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description to show for the given locale
                  type: string
                locale:
                  description: The locale that this listing should be displayed for.
                  type: string
                name:
                  description: The name to use for the given locale.
                  type: string
                overview:
                  description: The overview to show for the given locale.
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: &ref_39
                  description:
                    example: The [Glitch](https://glitch.com) Power-Up allows you to...
                    type: string
                  id:
                    example: 5a7cd2f8f99c517f58da1579
                    pattern: ^[0-9a-fA-F]{24}$
                    type: string
                  locale:
                    example: en-US
                    type: string
                  name:
                    example: Attachment Section Example
                    type: string
                  overview:
                    example: ''
                    type: string
                type: object
          description: Success
      summary: Create a Listing for Plugin
      tags: []
  /plugins/{idPlugin}/listings/{idListing}:
    put:
      deprecated: false
      description: Update an existing listing for your Power-Up
      operationId: put-plugins-idplugin-listings-idlisting
      parameters:
        - description: The ID of the Power-Up whose listing is being updated.
          in: path
          name: idPlugin
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: The ID of the existing listing for the Power-Up that is being updated.
          in: path
          name: idListing
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description to show for the given locale
                  type: string
                locale:
                  description: The locale that this listing should be displayed for.
                  type: string
                name:
                  description: The name to use for the given locale.
                  type: string
                overview:
                  description: The overview to show for the given locale.
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_39
                type: object
          description: Success
      summary: Updating Plugin's Listing
      tags: []
  /plugins/{id}/:
    get:
      deprecated: false
      description: Get plugins
      operationId: get-plugins-id
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_13
                type: object
          description: Success
      summary: Get a Plugin
      tags: []
    put:
      deprecated: false
      description: Update a Plugin
      operationId: put-plugins-id
      parameters:
        - description: The ID or name of the organization
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_13
                type: object
          description: Success
      summary: Update a Plugin
      tags: []
  /plugins/{id}/compliance/memberPrivacy:
    get:
      deprecated: false
      description: ''
      operationId: get-plugins-id-compliance-memberprivacy
      parameters:
        - description: The ID of the Power-Up
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Get Plugin's Member privacy compliance
      tags: []
  /search:
    get:
      deprecated: false
      description: Find what you're looking for in Trello
      operationId: get-search
      parameters:
        - description: The search query with a length of 1 to 16384 characters
          in: query
          name: query
          required: true
          schema:
            maxLength: 16834
            minLength: 1
            type: string
        - description: '`mine` or a comma-separated list of Board IDs'
          explode: false
          in: query
          name: idBoards
          required: false
          schema:
            oneOf:
              - enum:
                  - mine
                type: string
              - example: 5abbe4b7ddc1b351ef961414
                pattern: ^[0-9a-fA-F]{24}$
                type: string
          style: form
        - description: A comma-separated list of Organization IDs
          explode: false
          in: query
          name: idOrganizations
          required: false
          schema:
            type: string
          style: form
        - description: A comma-separated list of Card IDs
          explode: false
          in: query
          name: idCards
          required: false
          schema:
            type: string
          style: form
        - description: 'What type or types of Trello objects you want to search. all or a comma-separated list of: `actions`, `boards`, `cards`, `members`, `organizations`'
          in: query
          name: modelTypes
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: `closed`, `dateLastActivity`, `dateLastView`, `desc`, `descData`, `idOrganization`, `invitations`, `invited`, `labelNames`, `memberships`, `name`, `pinned`, `powerUps`, `prefs`, `shortLink`, `shortUrl`, `starred`, `subscribed`, `url`'
          explode: false
          in: query
          name: board_fields
          required: false
          schema:
            default: name,idOrganization
            type: string
          style: form
        - description: 'The maximum number of boards returned. Maximum: 1000'
          in: query
          name: boards_limit
          required: false
          schema:
            default: 10
            maximum: 1000
            type: integer
        - description: Whether to include the parent organization with board results
          in: query
          name: board_organization
          required: false
          schema:
            default: false
            type: boolean
        - description: 'all or a comma-separated list of: `badges`, `checkItemStates`, `closed`, `dateLastActivity`, `desc`, `descData`, `due`, `email`, `idAttachmentCover`, `idBoard`, `idChecklists`, `idLabels`, `idList`, `idMembers`, `idMembersVoted`, `idShort`, `labels`, `manualCoverAttachment`, `name`, `pos`, `shortLink`, `shortUrl`, `subscribed`, `url`'
          explode: false
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
          style: form
        - description: 'The maximum number of cards to return. Maximum: 1000'
          explode: false
          in: query
          name: cards_limit
          required: false
          schema:
            default: 10
            maximum: 1000
            type: integer
          style: form
        - description: 'The page of results for cards. Maximum: 100'
          in: query
          name: cards_page
          required: false
          schema:
            default: 0
            maximum: 100
            type: number
        - description: Whether to include the parent board with card results
          in: query
          name: card_board
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include the parent list with card results
          in: query
          name: card_list
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include member objects with card results
          in: query
          name: card_members
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include sticker objects with card results
          in: query
          name: card_stickers
          required: false
          schema:
            default: false
            type: boolean
        - description: Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments.
          in: query
          name: card_attachments
          required: false
          schema:
            default: 'false'
            type: string
        - description: all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website
          in: query
          name: organization_fields
          required: false
          schema:
            default: name,displayName
            type: string
        - description: The maximum number of Workspaces to return. Maximum 1000
          in: query
          name: organizations_limit
          required: false
          schema:
            default: '10'
            format: int32
            type: integer
        - description: 'all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username'
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash,fullName,initials,username,confirmed
            type: string
        - description: The maximum number of members to return. Maximum 1000
          in: query
          name: members_limit
          required: false
          schema:
            default: '10'
            format: int32
            type: integer
        - description: By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled "My Development Status Report", by default you would need to search for "Development". If you have partial enabled, you will be able to search for "dev" but not "velopment".
          in: query
          name: partial
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  oneOf:
                    - properties: *ref_4
                      type: object
                    - properties: *ref_14
                      type: object
                    - properties: *ref_6
                      required: *ref_7
                      type: object
                    - properties: *ref_19
                      type: object
                type: array
          description: Success
      summary: Search Trello
      tags: []
  /search/members/:
    get:
      deprecated: false
      description: Search for Trello members.
      operationId: get-search-members
      parameters:
        - description: Search query 1 to 16384 characters long
          in: query
          name: query
          required: true
          schema:
            maxLength: 16394
            minLength: 1
            type: string
        - description: The maximum number of results to return. Maximum of 20.
          in: query
          name: limit
          required: false
          schema:
            default: 8
            format: int32
            maximum: 20
            type: integer
        - description: ''
          in: query
          name: idBoard
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: idOrganization
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: ''
          in: query
          name: onlyOrgMembers
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: *ref_4
                  type: object
                type: array
          description: Success
      summary: Search for Members
      tags: []
  /tokens/{token}:
    get:
      deprecated: false
      description: Retrieve information about a token.
      operationId: get-tokens-token
      parameters:
        - description: ''
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: '`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: &ref_59
              - identifier
              - idMember
              - dateCreated
              - dateExpires
              - permissions
            type: string
        - description: Determines whether to include webhooks.
          in: query
          name: webhooks
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_40
                type: object
          description: Success
      summary: Get a Token
      tags: []
  /tokens/{token}/:
    delete:
      deprecated: false
      description: Delete a token.
      operationId: delete-token
      parameters:
        - description: ''
          in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      summary: Delete a Token
      tags: []
  /tokens/{token}/member:
    get:
      deprecated: false
      description: Retrieve information about a token's owner by token.
      operationId: get-tokens-token-member
      parameters:
        - description: ''
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: '`all` or a comma-separated list of valid fields for [Member Object](/cloud/trello/guides/rest-api/object-definitions/).'
          in: query
          name: fields
          required: false
          schema:
            default: all
            enum: *ref_3
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_4
                type: object
          description: Success
      summary: Get Token's Member
      tags: []
  /tokens/{token}/webhooks:
    get:
      deprecated: false
      description: Retrieve all webhooks created with a Token.
      operationId: get-tokens-token-webhooks
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties: &ref_41
                    active:
                      example: true
                      type: boolean
                    callbackURL:
                      example: https://mywebhookurl.com/?type=board
                      format: url
                      type: string
                    consecutiveFailures:
                      example: 0
                      type: number
                    description:
                      example: Board Webhook
                      type: string
                    firstConsecutiveFailDate:
                      example: null
                      format: date
                      nullable: true
                      type: string
                    id:
                      example: 58dd6dcaf8b86744d3cb4cde
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                    idModel:
                      example: 59cd149051aa57a706962996
                      pattern: ^[0-9a-fA-F]{24}$
                      type: string
                  type: object
                type: array
          description: Success
      summary: Get Webhooks for Token
      tags: []
    parameters:
      - description: ''
        in: path
        name: token
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Create a new webhook for a Token.
      operationId: post-tokens-token-webhooks
      parameters:
        - description: A description to be displayed when retrieving information about the webhook.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: The URL that the webhook should POST information to.
          in: query
          name: callbackURL
          required: true
          schema:
            format: url
            type: string
        - description: ID of the object to create a webhook on.
          in: query
          name: idModel
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_41
                type: object
          description: Success
      summary: Create Webhooks for Token
      tags: []
  /tokens/{token}/webhooks/{idWebhook}:
    delete:
      deprecated: false
      description: Delete a webhook created with given token.
      operationId: delete-tokens-token-webhooks-idwebhook
      responses:
        '200':
          description: Success
      summary: Delete a Webhook created by Token
      tags: []
    get:
      deprecated: false
      description: Retrieve a webhook created with a Token.
      operationId: get-tokens-token-webhooks-idwebhook
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_41
                type: object
          description: Success
      summary: Get a Webhook belonging to a Token
      tags: []
    parameters:
      - description: ''
        in: path
        name: token
        required: true
        schema:
          type: string
      - description: ID of the [Webhooks](ref:webhooks) to retrieve.
        in: path
        name: idWebhook
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a Webhook created by Token
      operationId: tokenstokenwebhooks-1
      parameters:
        - description: A description to be displayed when retrieving information about the webhook.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: The URL that the webhook should `POST` information to.
          in: query
          name: callbackURL
          required: false
          schema:
            format: url
            type: string
        - description: ID of the object that the webhook is on.
          in: query
          name: idModel
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
      responses:
        '200':
          description: Success
      summary: Update a Webhook created by Token
      tags: []
  /webhooks/:
    post:
      deprecated: false
      description: Create a new webhook.
      operationId: post-webhooks
      parameters:
        - description: A string with a length from `0` to `16384`.
          in: query
          name: description
          required: false
          schema:
            maxLength: 16384
            minLength: 0
            type: string
        - description: A valid URL that is reachable with a `HEAD` and `POST` request.
          in: query
          name: callbackURL
          required: true
          schema:
            format: url
            type: string
        - description: ID of the model to be monitored
          in: query
          name: idModel
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether the webhook is active and sending `POST` requests.
          in: query
          name: active
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_41
                type: object
          description: Success
      summary: Create a Webhook
      tags: []
  /webhooks/{id}:
    delete:
      deprecated: false
      description: Delete a webhook by ID.
      operationId: delete-webhooks-id
      responses:
        '200':
          description: Success
      summary: Delete a Webhook
      tags: []
    get:
      deprecated: false
      description: Get a webhook by ID. You must use the token query parameter and pass in the token the webhook was created under, or else you will encounter a 'webhook does not belong to token' error.
      operationId: get-webhooks-id
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_41
                type: object
          description: Success
      summary: Get a Webhook
      tags: []
    parameters:
      - description: ID of the webhook to retrieve.
        in: path
        name: id
        required: true
        schema:
          example: 5abbe4b7ddc1b351ef961414
          pattern: ^[0-9a-fA-F]{24}$
          type: string
    put:
      deprecated: false
      description: Update a webhook by ID.
      operationId: put-webhooks-id
      parameters:
        - description: A string with a length from `0` to `16384`.
          in: query
          name: description
          required: false
          schema:
            maxLength: 16384
            minLength: 0
            type: string
        - description: A valid URL that is reachable with a `HEAD` and `POST` request.
          in: query
          name: callbackURL
          required: false
          schema:
            format: url
            type: string
        - description: ID of the model to be monitored
          in: query
          name: idModel
          required: false
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: Determines whether the webhook is active and sending `POST` requests.
          in: query
          name: active
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: *ref_41
                type: object
          description: Success
      summary: Update a Webhook
      tags: []
  /webhooks/{id}/{field}:
    get:
      deprecated: false
      description: Get a field on a Webhook
      operationId: webhooksidfield
      parameters:
        - description: ID of the webhook.
          in: path
          name: id
          required: true
          schema:
            example: 5abbe4b7ddc1b351ef961414
            pattern: ^[0-9a-fA-F]{24}$
            type: string
        - description: 'Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`'
          in: path
          name: field
          required: true
          schema:
            enum:
              - active
              - callbackURL
              - description
              - idModel
              - consecutiveFailures
              - firstConsecutiveFailDate
            type: string
      responses:
        '200':
          description: Success
      summary: Get a field on a Webhook
      tags: []
components:
  responses:
    NotFound:
      content: *ref_21
      description: The specified resource was not found
    Unauthorized:
      content: *ref_20
      description: Unauthorized
  schemas:
    APIKey:
      example: 0471642aefef5fa1fa76530ce1ba4c85
      pattern: ^[0-9a-fA-F]{32}$
      type: string
    APIToken:
      example: 9eb76d9a9d02b8dd40c2f3e5df18556c831d4d1fadbe2c45f8310e6c93b5c548
      type: string
    Action:
      properties: *ref_5
      type: object
    ActionFields:
      enum: *ref_42
      type: string
    Attachment:
      properties: *ref_15
      type: object
    AttachmentFields:
      enum: *ref_43
      type: string
    BlockedKey:
      enum: *ref_29
      example: notification_comment_card
      type: string
    Board:
      properties: *ref_6
      required: *ref_7
      type: object
    BoardBackground:
      properties: *ref_25
      type: object
    BoardFields:
      enum: *ref_23
      type: string
    BoardStars:
      properties: *ref_26
      type: object
    CFValue:
      properties:
        number:
          type: string
      type: object
    Card:
      properties: *ref_14
      type: object
    CardAging:
      enum: *ref_44
      type: string
    CardFields:
      description: The fields on a Card.
      enum: *ref_17
      type: string
    Channel:
      enum: *ref_30
      example: email
      type: string
    CheckItem:
      properties: *ref_45
      type: object
    Checklist:
      properties: *ref_46
      type: object
    ClaimableOrganizations:
      properties: *ref_47
      type: object
    Color:
      enum: *ref_0
      nullable: true
      type: string
    CustomEmoji:
      properties: *ref_27
      type: object
    CustomField:
      properties: *ref_18
      type: object
    CustomFieldItems:
      properties: *ref_48
      type: object
    CustomSticker:
      properties: *ref_28
      type: object
    Emoji:
      properties: *ref_49
      type: object
    Enterprise:
      properties: *ref_50
      type: object
    EnterpriseAdmin:
      properties: *ref_51
      type: object
    EnterpriseAuditLog:
      properties: *ref_52
      type: object
    Error:
      properties: *ref_8
      required: *ref_9
      type: object
    Export:
      properties: *ref_36
      type: object
    ImageDescriptor:
      properties: *ref_53
      type: object
    Label:
      properties: *ref_10
      type: object
    Limits:
      properties: *ref_1
      type: object
    LimitsObject:
      properties: *ref_2
      type: object
    ListFields:
      enum: *ref_34
      type: string
    Member:
      properties: *ref_4
      type: object
    MemberFields:
      enum: *ref_3
      type: string
    MemberPrefs:
      properties: *ref_54
      type: object
    Membership:
      properties: *ref_55
      type: object
    Memberships:
      description: ''
      properties: *ref_37
      type: object
    Notification:
      properties: *ref_33
    NotificationChannelSettings:
      properties: *ref_31
    NotificationFields:
      enum: *ref_35
      type: string
    Organization:
      properties: *ref_19
      type: object
    OrganizationFields:
      enum: *ref_22
      type: string
    PendingOrganizations:
      properties: *ref_56
      type: object
    Plugin:
      properties: *ref_13
      type: object
    PluginData:
      properties: *ref_57
      type: object
    PluginListing:
      properties: *ref_39
      type: object
    Prefs:
      properties: *ref_58
      type: object
    SavedSearch:
      properties: *ref_32
      type: object
    Tag:
      properties: *ref_38
      type: object
    Token:
      properties: *ref_40
      type: object
    TokenFields:
      enum: *ref_59
      type: string
    TokenPermission:
      properties: *ref_60
      type: object
    TransferrableOrganization:
      properties: *ref_24
      type: object
    TrelloID:
      example: 5abbe4b7ddc1b351ef961414
      pattern: ^[0-9a-fA-F]{24}$
      type: string
    TrelloList:
      properties: *ref_12
      type: object
    ViewFilter:
      enum: *ref_11
      type: string
    Webhook:
      properties: *ref_41
      type: object
    customFieldItemValue:
      properties:
        value:
          type: object
      type: object
    posStringOrNumber:
      oneOf: *ref_16
  securitySchemes:
    APIKey:
      in: query
      name: key
      type: apiKey
    APIToken:
      in: query
      name: token
      type: apiKey
